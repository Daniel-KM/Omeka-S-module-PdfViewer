{"version":3,"names":[],"mappings":"","sources":["viewer-inline.js"],"sourcesContent":["/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 33);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.localized = exports.animationStarted = exports.normalizeWheelEventDelta = exports.binarySearchFirstItem = exports.watchScroll = exports.scrollIntoView = exports.getOutputScale = exports.approximateFraction = exports.roundToDivide = exports.getVisibleElements = exports.parseQueryString = exports.noContextMenuHandler = exports.getPDFFileNameFromURL = exports.ProgressBar = exports.EventBus = exports.NullL10n = exports.mozL10n = exports.RendererType = exports.cloneObj = exports.VERTICAL_PADDING = exports.SCROLLBAR_PADDING = exports.MAX_AUTO_SCALE = exports.UNKNOWN_SCALE = exports.MAX_SCALE = exports.MIN_SCALE = exports.DEFAULT_SCALE = exports.DEFAULT_SCALE_VALUE = exports.CSS_UNITS = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _pdfjsLib = __webpack_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar CSS_UNITS = 96.0 / 72.0;\nvar DEFAULT_SCALE_VALUE = 'auto';\nvar DEFAULT_SCALE = 1.0;\nvar MIN_SCALE = 0.25;\nvar MAX_SCALE = 10.0;\nvar UNKNOWN_SCALE = 0;\nvar MAX_AUTO_SCALE = 1.25;\nvar SCROLLBAR_PADDING = 40;\nvar VERTICAL_PADDING = 5;\nvar RendererType = {\n  CANVAS: 'canvas',\n  SVG: 'svg'\n};\nfunction formatL10nValue(text, args) {\n  if (!args) {\n    return text;\n  }\n  return text.replace(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, function (all, name) {\n    return name in args ? args[name] : '{{' + name + '}}';\n  });\n}\nvar NullL10n = {\n  get: function get(property, args, fallback) {\n    return Promise.resolve(formatL10nValue(fallback, args));\n  },\n  translate: function translate(element) {\n    return Promise.resolve();\n  }\n};\n_pdfjsLib.PDFJS.disableFullscreen = _pdfjsLib.PDFJS.disableFullscreen === undefined ? false : _pdfjsLib.PDFJS.disableFullscreen;\n_pdfjsLib.PDFJS.useOnlyCssZoom = _pdfjsLib.PDFJS.useOnlyCssZoom === undefined ? false : _pdfjsLib.PDFJS.useOnlyCssZoom;\n_pdfjsLib.PDFJS.maxCanvasPixels = _pdfjsLib.PDFJS.maxCanvasPixels === undefined ? 16777216 : _pdfjsLib.PDFJS.maxCanvasPixels;\n_pdfjsLib.PDFJS.disableHistory = _pdfjsLib.PDFJS.disableHistory === undefined ? false : _pdfjsLib.PDFJS.disableHistory;\n_pdfjsLib.PDFJS.disableTextLayer = _pdfjsLib.PDFJS.disableTextLayer === undefined ? false : _pdfjsLib.PDFJS.disableTextLayer;\n_pdfjsLib.PDFJS.ignoreCurrentPositionOnZoom = _pdfjsLib.PDFJS.ignoreCurrentPositionOnZoom === undefined ? false : _pdfjsLib.PDFJS.ignoreCurrentPositionOnZoom;\n{\n  _pdfjsLib.PDFJS.locale = _pdfjsLib.PDFJS.locale === undefined && typeof navigator !== 'undefined' ? navigator.language : _pdfjsLib.PDFJS.locale;\n}\nfunction getOutputScale(ctx) {\n  var devicePixelRatio = window.devicePixelRatio || 1;\n  var backingStoreRatio = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;\n  var pixelRatio = devicePixelRatio / backingStoreRatio;\n  return {\n    sx: pixelRatio,\n    sy: pixelRatio,\n    scaled: pixelRatio !== 1\n  };\n}\nfunction scrollIntoView(element, spot) {\n  var skipOverflowHiddenElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var parent = element.offsetParent;\n  if (!parent) {\n    console.error('offsetParent is not set -- cannot scroll');\n    return;\n  }\n  var offsetY = element.offsetTop + element.clientTop;\n  var offsetX = element.offsetLeft + element.clientLeft;\n  while (parent.clientHeight === parent.scrollHeight || skipOverflowHiddenElements && getComputedStyle(parent).overflow === 'hidden') {\n    if (parent.dataset._scaleY) {\n      offsetY /= parent.dataset._scaleY;\n      offsetX /= parent.dataset._scaleX;\n    }\n    offsetY += parent.offsetTop;\n    offsetX += parent.offsetLeft;\n    parent = parent.offsetParent;\n    if (!parent) {\n      return;\n    }\n  }\n  if (spot) {\n    if (spot.top !== undefined) {\n      offsetY += spot.top;\n    }\n    if (spot.left !== undefined) {\n      offsetX += spot.left;\n      parent.scrollLeft = offsetX;\n    }\n  }\n  parent.scrollTop = offsetY;\n}\nfunction watchScroll(viewAreaElement, callback) {\n  var debounceScroll = function debounceScroll(evt) {\n    if (rAF) {\n      return;\n    }\n    rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n      rAF = null;\n      var currentY = viewAreaElement.scrollTop;\n      var lastY = state.lastY;\n      if (currentY !== lastY) {\n        state.down = currentY > lastY;\n      }\n      state.lastY = currentY;\n      callback(state);\n    });\n  };\n  var state = {\n    down: true,\n    lastY: viewAreaElement.scrollTop,\n    _eventHandler: debounceScroll\n  };\n  var rAF = null;\n  viewAreaElement.addEventListener('scroll', debounceScroll, true);\n  return state;\n}\nfunction parseQueryString(query) {\n  var parts = query.split('&');\n  var params = Object.create(null);\n  for (var i = 0, ii = parts.length; i < ii; ++i) {\n    var param = parts[i].split('=');\n    var key = param[0].toLowerCase();\n    var value = param.length > 1 ? param[1] : null;\n    params[decodeURIComponent(key)] = decodeURIComponent(value);\n  }\n  return params;\n}\nfunction binarySearchFirstItem(items, condition) {\n  var minIndex = 0;\n  var maxIndex = items.length - 1;\n  if (items.length === 0 || !condition(items[maxIndex])) {\n    return items.length;\n  }\n  if (condition(items[minIndex])) {\n    return minIndex;\n  }\n  while (minIndex < maxIndex) {\n    var currentIndex = minIndex + maxIndex >> 1;\n    var currentItem = items[currentIndex];\n    if (condition(currentItem)) {\n      maxIndex = currentIndex;\n    } else {\n      minIndex = currentIndex + 1;\n    }\n  }\n  return minIndex;\n}\nfunction approximateFraction(x) {\n  if (Math.floor(x) === x) {\n    return [x, 1];\n  }\n  var xinv = 1 / x;\n  var limit = 8;\n  if (xinv > limit) {\n    return [1, limit];\n  } else if (Math.floor(xinv) === xinv) {\n    return [1, xinv];\n  }\n  var x_ = x > 1 ? xinv : x;\n  var a = 0,\n      b = 1,\n      c = 1,\n      d = 1;\n  while (true) {\n    var p = a + c,\n        q = b + d;\n    if (q > limit) {\n      break;\n    }\n    if (x_ <= p / q) {\n      c = p;\n      d = q;\n    } else {\n      a = p;\n      b = q;\n    }\n  }\n  var result = void 0;\n  if (x_ - a / b < c / d - x_) {\n    result = x_ === x ? [a, b] : [b, a];\n  } else {\n    result = x_ === x ? [c, d] : [d, c];\n  }\n  return result;\n}\nfunction roundToDivide(x, div) {\n  var r = x % div;\n  return r === 0 ? x : Math.round(x - r + div);\n}\nfunction getVisibleElements(scrollEl, views) {\n  var sortByVisibility = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var top = scrollEl.scrollTop,\n      bottom = top + scrollEl.clientHeight;\n  var left = scrollEl.scrollLeft,\n      right = left + scrollEl.clientWidth;\n  function isElementBottomBelowViewTop(view) {\n    var element = view.div;\n    var elementBottom = element.offsetTop + element.clientTop + element.clientHeight;\n    return elementBottom > top;\n  }\n  var visible = [],\n      view = void 0,\n      element = void 0;\n  var currentHeight = void 0,\n      viewHeight = void 0,\n      hiddenHeight = void 0,\n      percentHeight = void 0;\n  var currentWidth = void 0,\n      viewWidth = void 0;\n  var firstVisibleElementInd = views.length === 0 ? 0 : binarySearchFirstItem(views, isElementBottomBelowViewTop);\n  for (var i = firstVisibleElementInd, ii = views.length; i < ii; i++) {\n    view = views[i];\n    element = view.div;\n    currentHeight = element.offsetTop + element.clientTop;\n    viewHeight = element.clientHeight;\n    if (currentHeight > bottom) {\n      break;\n    }\n    currentWidth = element.offsetLeft + element.clientLeft;\n    viewWidth = element.clientWidth;\n    if (currentWidth + viewWidth < left || currentWidth > right) {\n      continue;\n    }\n    hiddenHeight = Math.max(0, top - currentHeight) + Math.max(0, currentHeight + viewHeight - bottom);\n    percentHeight = (viewHeight - hiddenHeight) * 100 / viewHeight | 0;\n    visible.push({\n      id: view.id,\n      x: currentWidth,\n      y: currentHeight,\n      view: view,\n      percent: percentHeight\n    });\n  }\n  var first = visible[0];\n  var last = visible[visible.length - 1];\n  if (sortByVisibility) {\n    visible.sort(function (a, b) {\n      var pc = a.percent - b.percent;\n      if (Math.abs(pc) > 0.001) {\n        return -pc;\n      }\n      return a.id - b.id;\n    });\n  }\n  return {\n    first: first,\n    last: last,\n    views: visible\n  };\n}\nfunction noContextMenuHandler(evt) {\n  evt.preventDefault();\n}\nfunction isDataSchema(url) {\n  var i = 0,\n      ii = url.length;\n  while (i < ii && url[i].trim() === '') {\n    i++;\n  }\n  return url.substr(i, 5).toLowerCase() === 'data:';\n}\nfunction getPDFFileNameFromURL(url) {\n  var defaultFilename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'document.pdf';\n\n  if (isDataSchema(url)) {\n    console.warn('getPDFFileNameFromURL: ' + 'ignoring \"data:\" URL for performance reasons.');\n    return defaultFilename;\n  }\n  var reURI = /^(?:(?:[^:]+:)?\\/\\/[^\\/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  var reFilename = /[^\\/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  var splitURI = reURI.exec(url);\n  var suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.indexOf('%') !== -1) {\n      try {\n        suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n      } catch (ex) {}\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\nfunction normalizeWheelEventDelta(evt) {\n  var delta = Math.sqrt(evt.deltaX * evt.deltaX + evt.deltaY * evt.deltaY);\n  var angle = Math.atan2(evt.deltaY, evt.deltaX);\n  if (-0.25 * Math.PI < angle && angle < 0.75 * Math.PI) {\n    delta = -delta;\n  }\n  var MOUSE_DOM_DELTA_PIXEL_MODE = 0;\n  var MOUSE_DOM_DELTA_LINE_MODE = 1;\n  var MOUSE_PIXELS_PER_LINE = 30;\n  var MOUSE_LINES_PER_PAGE = 30;\n  if (evt.deltaMode === MOUSE_DOM_DELTA_PIXEL_MODE) {\n    delta /= MOUSE_PIXELS_PER_LINE * MOUSE_LINES_PER_PAGE;\n  } else if (evt.deltaMode === MOUSE_DOM_DELTA_LINE_MODE) {\n    delta /= MOUSE_LINES_PER_PAGE;\n  }\n  return delta;\n}\nfunction cloneObj(obj) {\n  var result = Object.create(null);\n  for (var i in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, i)) {\n      result[i] = obj[i];\n    }\n  }\n  return result;\n}\nvar animationStarted = new Promise(function (resolve) {\n  window.requestAnimationFrame(resolve);\n});\nvar mozL10n = void 0;\nvar localized = Promise.resolve();\n\nvar EventBus = function () {\n  function EventBus() {\n    _classCallCheck(this, EventBus);\n\n    this._listeners = Object.create(null);\n  }\n\n  _createClass(EventBus, [{\n    key: 'on',\n    value: function on(eventName, listener) {\n      var eventListeners = this._listeners[eventName];\n      if (!eventListeners) {\n        eventListeners = [];\n        this._listeners[eventName] = eventListeners;\n      }\n      eventListeners.push(listener);\n    }\n  }, {\n    key: 'off',\n    value: function off(eventName, listener) {\n      var eventListeners = this._listeners[eventName];\n      var i = void 0;\n      if (!eventListeners || (i = eventListeners.indexOf(listener)) < 0) {\n        return;\n      }\n      eventListeners.splice(i, 1);\n    }\n  }, {\n    key: 'dispatch',\n    value: function dispatch(eventName) {\n      var eventListeners = this._listeners[eventName];\n      if (!eventListeners || eventListeners.length === 0) {\n        return;\n      }\n      var args = Array.prototype.slice.call(arguments, 1);\n      eventListeners.slice(0).forEach(function (listener) {\n        listener.apply(null, args);\n      });\n    }\n  }]);\n\n  return EventBus;\n}();\n\nfunction clamp(v, min, max) {\n  return Math.min(Math.max(v, min), max);\n}\n\nvar ProgressBar = function () {\n  function ProgressBar(id) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        height = _ref.height,\n        width = _ref.width,\n        units = _ref.units;\n\n    _classCallCheck(this, ProgressBar);\n\n    this.visible = true;\n    this.div = document.querySelector(id + ' .progress');\n    this.bar = this.div.parentNode;\n    this.height = height || 100;\n    this.width = width || 100;\n    this.units = units || '%';\n    this.div.style.height = this.height + this.units;\n    this.percent = 0;\n  }\n\n  _createClass(ProgressBar, [{\n    key: '_updateBar',\n    value: function _updateBar() {\n      if (this._indeterminate) {\n        this.div.classList.add('indeterminate');\n        this.div.style.width = this.width + this.units;\n        return;\n      }\n      this.div.classList.remove('indeterminate');\n      var progressSize = this.width * this._percent / 100;\n      this.div.style.width = progressSize + this.units;\n    }\n  }, {\n    key: 'setWidth',\n    value: function setWidth(viewer) {\n      if (!viewer) {\n        return;\n      }\n      var container = viewer.parentNode;\n      var scrollbarWidth = container.offsetWidth - viewer.offsetWidth;\n      if (scrollbarWidth > 0) {\n        this.bar.setAttribute('style', 'width: calc(100% - ' + scrollbarWidth + 'px);');\n      }\n    }\n  }, {\n    key: 'hide',\n    value: function hide() {\n      if (!this.visible) {\n        return;\n      }\n      this.visible = false;\n      this.bar.classList.add('hidden');\n      document.body.classList.remove('loadingInProgress');\n    }\n  }, {\n    key: 'show',\n    value: function show() {\n      if (this.visible) {\n        return;\n      }\n      this.visible = true;\n      document.body.classList.add('loadingInProgress');\n      this.bar.classList.remove('hidden');\n    }\n  }, {\n    key: 'percent',\n    get: function get() {\n      return this._percent;\n    },\n    set: function set(val) {\n      this._indeterminate = isNaN(val);\n      this._percent = clamp(val, 0, 100);\n      this._updateBar();\n    }\n  }]);\n\n  return ProgressBar;\n}();\n\nexports.CSS_UNITS = CSS_UNITS;\nexports.DEFAULT_SCALE_VALUE = DEFAULT_SCALE_VALUE;\nexports.DEFAULT_SCALE = DEFAULT_SCALE;\nexports.MIN_SCALE = MIN_SCALE;\nexports.MAX_SCALE = MAX_SCALE;\nexports.UNKNOWN_SCALE = UNKNOWN_SCALE;\nexports.MAX_AUTO_SCALE = MAX_AUTO_SCALE;\nexports.SCROLLBAR_PADDING = SCROLLBAR_PADDING;\nexports.VERTICAL_PADDING = VERTICAL_PADDING;\nexports.cloneObj = cloneObj;\nexports.RendererType = RendererType;\nexports.mozL10n = mozL10n;\nexports.NullL10n = NullL10n;\nexports.EventBus = EventBus;\nexports.ProgressBar = ProgressBar;\nexports.getPDFFileNameFromURL = getPDFFileNameFromURL;\nexports.noContextMenuHandler = noContextMenuHandler;\nexports.parseQueryString = parseQueryString;\nexports.getVisibleElements = getVisibleElements;\nexports.roundToDivide = roundToDivide;\nexports.approximateFraction = approximateFraction;\nexports.getOutputScale = getOutputScale;\nexports.scrollIntoView = scrollIntoView;\nexports.watchScroll = watchScroll;\nexports.binarySearchFirstItem = binarySearchFirstItem;\nexports.normalizeWheelEventDelta = normalizeWheelEventDelta;\nexports.animationStarted = animationStarted;\nexports.localized = localized;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar pdfjsLib;\nif (typeof window !== 'undefined' && window['pdfjs-dist/build/pdf']) {\n  pdfjsLib = window['pdfjs-dist/build/pdf'];\n} else {\n  pdfjsLib = require('../build/pdf.js');\n}\nmodule.exports = pdfjsLib;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getGlobalEventBus = exports.attachDOMEventsToEventBus = undefined;\n\nvar _ui_utils = __webpack_require__(0);\n\nfunction attachDOMEventsToEventBus(eventBus) {\n  eventBus.on('documentload', function () {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('documentload', true, true, {});\n    window.dispatchEvent(event);\n  });\n  eventBus.on('pagerendered', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('pagerendered', true, true, {\n      pageNumber: evt.pageNumber,\n      cssTransform: evt.cssTransform\n    });\n    evt.source.div.dispatchEvent(event);\n  });\n  eventBus.on('textlayerrendered', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('textlayerrendered', true, true, { pageNumber: evt.pageNumber });\n    evt.source.textLayerDiv.dispatchEvent(event);\n  });\n  eventBus.on('pagechange', function (evt) {\n    var event = document.createEvent('UIEvents');\n    event.initUIEvent('pagechange', true, true, window, 0);\n    event.pageNumber = evt.pageNumber;\n    evt.source.container.dispatchEvent(event);\n  });\n  eventBus.on('pagesinit', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('pagesinit', true, true, null);\n    evt.source.container.dispatchEvent(event);\n  });\n  eventBus.on('pagesloaded', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('pagesloaded', true, true, { pagesCount: evt.pagesCount });\n    evt.source.container.dispatchEvent(event);\n  });\n  eventBus.on('scalechange', function (evt) {\n    var event = document.createEvent('UIEvents');\n    event.initUIEvent('scalechange', true, true, window, 0);\n    event.scale = evt.scale;\n    event.presetValue = evt.presetValue;\n    evt.source.container.dispatchEvent(event);\n  });\n  eventBus.on('updateviewarea', function (evt) {\n    var event = document.createEvent('UIEvents');\n    event.initUIEvent('updateviewarea', true, true, window, 0);\n    event.location = evt.location;\n    evt.source.container.dispatchEvent(event);\n  });\n  eventBus.on('find', function (evt) {\n    if (evt.source === window) {\n      return;\n    }\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('find' + evt.type, true, true, {\n      query: evt.query,\n      phraseSearch: evt.phraseSearch,\n      caseSensitive: evt.caseSensitive,\n      highlightAll: evt.highlightAll,\n      findPrevious: evt.findPrevious\n    });\n    window.dispatchEvent(event);\n  });\n  eventBus.on('attachmentsloaded', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('attachmentsloaded', true, true, { attachmentsCount: evt.attachmentsCount });\n    evt.source.container.dispatchEvent(event);\n  });\n  eventBus.on('sidebarviewchanged', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('sidebarviewchanged', true, true, { view: evt.view });\n    evt.source.outerContainer.dispatchEvent(event);\n  });\n  eventBus.on('pagemode', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('pagemode', true, true, { mode: evt.mode });\n    evt.source.pdfViewer.container.dispatchEvent(event);\n  });\n  eventBus.on('namedaction', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('namedaction', true, true, { action: evt.action });\n    evt.source.pdfViewer.container.dispatchEvent(event);\n  });\n  eventBus.on('presentationmodechanged', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('presentationmodechanged', true, true, {\n      active: evt.active,\n      switchInProgress: evt.switchInProgress\n    });\n    window.dispatchEvent(event);\n  });\n  eventBus.on('outlineloaded', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('outlineloaded', true, true, { outlineCount: evt.outlineCount });\n    evt.source.container.dispatchEvent(event);\n  });\n}\nvar globalEventBus = null;\nfunction getGlobalEventBus() {\n  if (globalEventBus) {\n    return globalEventBus;\n  }\n  globalEventBus = new _ui_utils.EventBus();\n  attachDOMEventsToEventBus(globalEventBus);\n  return globalEventBus;\n}\nexports.attachDOMEventsToEventBus = attachDOMEventsToEventBus;\nexports.getGlobalEventBus = getGlobalEventBus;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar CLEANUP_TIMEOUT = 30000;\nvar RenderingStates = {\n  INITIAL: 0,\n  RUNNING: 1,\n  PAUSED: 2,\n  FINISHED: 3\n};\n\nvar PDFRenderingQueue = function () {\n  function PDFRenderingQueue() {\n    _classCallCheck(this, PDFRenderingQueue);\n\n    this.pdfViewer = null;\n    this.pdfThumbnailViewer = null;\n    this.onIdle = null;\n    this.highestPriorityPage = null;\n    this.idleTimeout = null;\n    this.printing = false;\n    this.isThumbnailViewEnabled = false;\n  }\n\n  _createClass(PDFRenderingQueue, [{\n    key: \"setViewer\",\n    value: function setViewer(pdfViewer) {\n      this.pdfViewer = pdfViewer;\n    }\n  }, {\n    key: \"setThumbnailViewer\",\n    value: function setThumbnailViewer(pdfThumbnailViewer) {\n      this.pdfThumbnailViewer = pdfThumbnailViewer;\n    }\n  }, {\n    key: \"isHighestPriority\",\n    value: function isHighestPriority(view) {\n      return this.highestPriorityPage === view.renderingId;\n    }\n  }, {\n    key: \"renderHighestPriority\",\n    value: function renderHighestPriority(currentlyVisiblePages) {\n      if (this.idleTimeout) {\n        clearTimeout(this.idleTimeout);\n        this.idleTimeout = null;\n      }\n      if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n        return;\n      }\n      if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\n        if (this.pdfThumbnailViewer.forceRendering()) {\n          return;\n        }\n      }\n      if (this.printing) {\n        return;\n      }\n      if (this.onIdle) {\n        this.idleTimeout = setTimeout(this.onIdle.bind(this), CLEANUP_TIMEOUT);\n      }\n    }\n  }, {\n    key: \"getHighestPriority\",\n    value: function getHighestPriority(visible, views, scrolledDown) {\n      var visibleViews = visible.views;\n      var numVisible = visibleViews.length;\n      if (numVisible === 0) {\n        return false;\n      }\n      for (var i = 0; i < numVisible; ++i) {\n        var view = visibleViews[i].view;\n        if (!this.isViewFinished(view)) {\n          return view;\n        }\n      }\n      if (scrolledDown) {\n        var nextPageIndex = visible.last.id;\n        if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n          return views[nextPageIndex];\n        }\n      } else {\n        var previousPageIndex = visible.first.id - 2;\n        if (views[previousPageIndex] && !this.isViewFinished(views[previousPageIndex])) {\n          return views[previousPageIndex];\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"isViewFinished\",\n    value: function isViewFinished(view) {\n      return view.renderingState === RenderingStates.FINISHED;\n    }\n  }, {\n    key: \"renderView\",\n    value: function renderView(view) {\n      var _this = this;\n\n      switch (view.renderingState) {\n        case RenderingStates.FINISHED:\n          return false;\n        case RenderingStates.PAUSED:\n          this.highestPriorityPage = view.renderingId;\n          view.resume();\n          break;\n        case RenderingStates.RUNNING:\n          this.highestPriorityPage = view.renderingId;\n          break;\n        case RenderingStates.INITIAL:\n          this.highestPriorityPage = view.renderingId;\n          var continueRendering = function continueRendering() {\n            _this.renderHighestPriority();\n          };\n          view.draw().then(continueRendering, continueRendering);\n          break;\n      }\n      return true;\n    }\n  }]);\n\n  return PDFRenderingQueue;\n}();\n\nexports.RenderingStates = RenderingStates;\nexports.PDFRenderingQueue = PDFRenderingQueue;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFPrintServiceFactory = exports.DefaultExternalServices = exports.PDFViewerApplication = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _ui_utils = __webpack_require__(0);\n\nvar _pdfjsLib = __webpack_require__(1);\n\nvar _pdf_cursor_tools = __webpack_require__(6);\n\nvar _pdf_rendering_queue = __webpack_require__(3);\n\nvar _pdf_sidebar = __webpack_require__(24);\n\nvar _pdf_viewer = __webpack_require__(27);\n\nvar _dom_events = __webpack_require__(2);\n\nvar _overlay_manager = __webpack_require__(15);\n\nvar _password_prompt = __webpack_require__(16);\n\nvar _pdf_attachment_viewer = __webpack_require__(17);\n\nvar _pdf_document_properties = __webpack_require__(18);\n\nvar _pdf_find_bar = __webpack_require__(19);\n\nvar _pdf_find_controller = __webpack_require__(7);\n\nvar _pdf_history = __webpack_require__(20);\n\nvar _pdf_link_service = __webpack_require__(5);\n\nvar _pdf_outline_viewer = __webpack_require__(21);\n\nvar _pdf_presentation_mode = __webpack_require__(23);\n\nvar _pdf_thumbnail_viewer = __webpack_require__(26);\n\nvar _secondary_toolbar = __webpack_require__(29);\n\nvar _toolbar = __webpack_require__(31);\n\nvar _view_history = __webpack_require__(32);\n\nvar DEFAULT_SCALE_DELTA = 1.1;\nvar DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT = 5000;\nfunction configure(PDFJS) {\n  PDFJS.imageResourcesPath = './images/';\n  PDFJS.workerSrc = '../build/pdf.worker.js';\n  PDFJS.cMapUrl = '../web/cmaps/';\n  PDFJS.cMapPacked = true;\n}\nvar DefaultExternalServices = {\n  updateFindControlState: function updateFindControlState(data) {},\n  initPassiveLoading: function initPassiveLoading(callbacks) {},\n  fallback: function fallback(data, callback) {},\n  reportTelemetry: function reportTelemetry(data) {},\n  createDownloadManager: function createDownloadManager() {\n    throw new Error('Not implemented: createDownloadManager');\n  },\n  createPreferences: function createPreferences() {\n    throw new Error('Not implemented: createPreferences');\n  },\n  createL10n: function createL10n() {\n    throw new Error('Not implemented: createL10n');\n  },\n\n  supportsIntegratedFind: false,\n  supportsDocumentFonts: true,\n  supportsDocumentColors: true,\n  supportedMouseWheelZoomModifierKeys: {\n    ctrlKey: true,\n    metaKey: true\n  }\n};\nvar PDFViewerApplication = {\n  initialBookmark: document.location.hash.substring(1),\n  initialDestination: null,\n  initialized: false,\n  fellback: false,\n  appConfig: null,\n  pdfDocument: null,\n  pdfLoadingTask: null,\n  printService: null,\n  pdfViewer: null,\n  pdfThumbnailViewer: null,\n  pdfRenderingQueue: null,\n  pdfPresentationMode: null,\n  pdfDocumentProperties: null,\n  pdfLinkService: null,\n  pdfHistory: null,\n  pdfSidebar: null,\n  pdfOutlineViewer: null,\n  pdfAttachmentViewer: null,\n  pdfCursorTools: null,\n  store: null,\n  downloadManager: null,\n  overlayManager: null,\n  preferences: null,\n  toolbar: null,\n  secondaryToolbar: null,\n  eventBus: null,\n  l10n: null,\n  isInitialViewSet: false,\n  downloadComplete: false,\n  viewerPrefs: {\n    sidebarViewOnLoad: _pdf_sidebar.SidebarView.NONE,\n    pdfBugEnabled: false,\n    showPreviousViewOnLoad: true,\n    defaultZoomValue: '',\n    disablePageMode: false,\n    disablePageLabels: false,\n    renderer: 'canvas',\n    enhanceTextSelection: false,\n    renderInteractiveForms: false,\n    enablePrintAutoRotate: false\n  },\n  isViewerEmbedded: window.parent !== window,\n  url: '',\n  baseUrl: '',\n  externalServices: DefaultExternalServices,\n  _boundEvents: {},\n  initialize: function initialize(appConfig) {\n    var _this = this;\n\n    this.preferences = this.externalServices.createPreferences();\n    configure(_pdfjsLib.PDFJS);\n    this.appConfig = appConfig;\n    return this._readPreferences().then(function () {\n      return _this._initializeL10n();\n    }).then(function () {\n      return _this._initializeViewerComponents();\n    }).then(function () {\n      _this.bindEvents();\n      _this.bindWindowEvents();\n      var appContainer = appConfig.appContainer || document.documentElement;\n      _this.l10n.translate(appContainer).then(function () {\n        _this.eventBus.dispatch('localized');\n      });\n      if (_this.isViewerEmbedded && !_pdfjsLib.PDFJS.isExternalLinkTargetSet()) {\n        _pdfjsLib.PDFJS.externalLinkTarget = _pdfjsLib.PDFJS.LinkTarget.TOP;\n      }\n      _this.initialized = true;\n    });\n  },\n  _readPreferences: function _readPreferences() {\n    var preferences = this.preferences,\n        viewerPrefs = this.viewerPrefs;\n\n    return Promise.all([preferences.get('enableWebGL').then(function resolved(value) {\n      _pdfjsLib.PDFJS.disableWebGL = !value;\n    }), preferences.get('sidebarViewOnLoad').then(function resolved(value) {\n      viewerPrefs['sidebarViewOnLoad'] = value;\n    }), preferences.get('pdfBugEnabled').then(function resolved(value) {\n      viewerPrefs['pdfBugEnabled'] = value;\n    }), preferences.get('showPreviousViewOnLoad').then(function resolved(value) {\n      viewerPrefs['showPreviousViewOnLoad'] = value;\n    }), preferences.get('defaultZoomValue').then(function resolved(value) {\n      viewerPrefs['defaultZoomValue'] = value;\n    }), preferences.get('enhanceTextSelection').then(function resolved(value) {\n      viewerPrefs['enhanceTextSelection'] = value;\n    }), preferences.get('disableTextLayer').then(function resolved(value) {\n      if (_pdfjsLib.PDFJS.disableTextLayer === true) {\n        return;\n      }\n      _pdfjsLib.PDFJS.disableTextLayer = value;\n    }), preferences.get('disableRange').then(function resolved(value) {\n      if (_pdfjsLib.PDFJS.disableRange === true) {\n        return;\n      }\n      _pdfjsLib.PDFJS.disableRange = value;\n    }), preferences.get('disableStream').then(function resolved(value) {\n      if (_pdfjsLib.PDFJS.disableStream === true) {\n        return;\n      }\n      _pdfjsLib.PDFJS.disableStream = value;\n    }), preferences.get('disableAutoFetch').then(function resolved(value) {\n      _pdfjsLib.PDFJS.disableAutoFetch = value;\n    }), preferences.get('disableFontFace').then(function resolved(value) {\n      if (_pdfjsLib.PDFJS.disableFontFace === true) {\n        return;\n      }\n      _pdfjsLib.PDFJS.disableFontFace = value;\n    }), preferences.get('useOnlyCssZoom').then(function resolved(value) {\n      _pdfjsLib.PDFJS.useOnlyCssZoom = value;\n    }), preferences.get('externalLinkTarget').then(function resolved(value) {\n      if (_pdfjsLib.PDFJS.isExternalLinkTargetSet()) {\n        return;\n      }\n      _pdfjsLib.PDFJS.externalLinkTarget = value;\n    }), preferences.get('renderer').then(function resolved(value) {\n      viewerPrefs['renderer'] = value;\n    }), preferences.get('renderInteractiveForms').then(function resolved(value) {\n      viewerPrefs['renderInteractiveForms'] = value;\n    }), preferences.get('disablePageMode').then(function resolved(value) {\n      viewerPrefs['disablePageMode'] = value;\n    }), preferences.get('disablePageLabels').then(function resolved(value) {\n      viewerPrefs['disablePageLabels'] = value;\n    }), preferences.get('enablePrintAutoRotate').then(function resolved(value) {\n      viewerPrefs['enablePrintAutoRotate'] = value;\n    })]).catch(function (reason) {});\n  },\n  _initializeL10n: function _initializeL10n() {\n    if (this.viewerPrefs['pdfBugEnabled']) {\n      var hash = document.location.hash.substring(1);\n      var hashParams = (0, _ui_utils.parseQueryString)(hash);\n      if ('locale' in hashParams) {\n        _pdfjsLib.PDFJS.locale = hashParams['locale'];\n      }\n    }\n    this.l10n = this.externalServices.createL10n();\n    return this.l10n.getDirection().then(function (dir) {\n      document.getElementsByTagName('html')[0].dir = dir;\n    });\n  },\n  _initializeViewerComponents: function _initializeViewerComponents() {\n    var _this2 = this;\n\n    var appConfig = this.appConfig;\n    return new Promise(function (resolve, reject) {\n      _this2.overlayManager = new _overlay_manager.OverlayManager();\n      var eventBus = appConfig.eventBus || (0, _dom_events.getGlobalEventBus)();\n      _this2.eventBus = eventBus;\n      var pdfRenderingQueue = new _pdf_rendering_queue.PDFRenderingQueue();\n      pdfRenderingQueue.onIdle = _this2.cleanup.bind(_this2);\n      _this2.pdfRenderingQueue = pdfRenderingQueue;\n      var pdfLinkService = new _pdf_link_service.PDFLinkService({ eventBus: eventBus });\n      _this2.pdfLinkService = pdfLinkService;\n      var downloadManager = _this2.externalServices.createDownloadManager();\n      _this2.downloadManager = downloadManager;\n      var container = appConfig.mainContainer;\n      var viewer = appConfig.viewerContainer;\n      _this2.pdfViewer = new _pdf_viewer.PDFViewer({\n        container: container,\n        viewer: viewer,\n        eventBus: eventBus,\n        renderingQueue: pdfRenderingQueue,\n        linkService: pdfLinkService,\n        downloadManager: downloadManager,\n        renderer: _this2.viewerPrefs['renderer'],\n        l10n: _this2.l10n,\n        enhanceTextSelection: _this2.viewerPrefs['enhanceTextSelection'],\n        renderInteractiveForms: _this2.viewerPrefs['renderInteractiveForms'],\n        enablePrintAutoRotate: _this2.viewerPrefs['enablePrintAutoRotate']\n      });\n      pdfRenderingQueue.setViewer(_this2.pdfViewer);\n      pdfLinkService.setViewer(_this2.pdfViewer);\n      var thumbnailContainer = appConfig.sidebar.thumbnailView;\n      _this2.pdfThumbnailViewer = new _pdf_thumbnail_viewer.PDFThumbnailViewer({\n        container: thumbnailContainer,\n        renderingQueue: pdfRenderingQueue,\n        linkService: pdfLinkService,\n        l10n: _this2.l10n\n      });\n      pdfRenderingQueue.setThumbnailViewer(_this2.pdfThumbnailViewer);\n      _this2.pdfHistory = new _pdf_history.PDFHistory({\n        linkService: pdfLinkService,\n        eventBus: eventBus\n      });\n      pdfLinkService.setHistory(_this2.pdfHistory);\n      _this2.findController = new _pdf_find_controller.PDFFindController({ pdfViewer: _this2.pdfViewer });\n      _this2.findController.onUpdateResultsCount = function (matchCount) {\n        if (_this2.supportsIntegratedFind) {\n          return;\n        }\n        _this2.findBar.updateResultsCount(matchCount);\n      };\n      _this2.findController.onUpdateState = function (state, previous, matchCount) {\n        if (_this2.supportsIntegratedFind) {\n          _this2.externalServices.updateFindControlState({\n            result: state,\n            findPrevious: previous\n          });\n        } else {\n          _this2.findBar.updateUIState(state, previous, matchCount);\n        }\n      };\n      _this2.pdfViewer.setFindController(_this2.findController);\n      var findBarConfig = Object.create(appConfig.findBar);\n      findBarConfig.findController = _this2.findController;\n      findBarConfig.eventBus = eventBus;\n      _this2.findBar = new _pdf_find_bar.PDFFindBar(findBarConfig, _this2.l10n);\n      _this2.pdfDocumentProperties = new _pdf_document_properties.PDFDocumentProperties(appConfig.documentProperties, _this2.overlayManager, _this2.l10n);\n      _this2.pdfCursorTools = new _pdf_cursor_tools.PDFCursorTools({\n        container: container,\n        eventBus: eventBus,\n        preferences: _this2.preferences\n      });\n      _this2.toolbar = new _toolbar.Toolbar(appConfig.toolbar, container, eventBus, _this2.l10n);\n      _this2.secondaryToolbar = new _secondary_toolbar.SecondaryToolbar(appConfig.secondaryToolbar, container, eventBus);\n      if (_this2.supportsFullscreen) {\n        _this2.pdfPresentationMode = new _pdf_presentation_mode.PDFPresentationMode({\n          container: container,\n          viewer: viewer,\n          pdfViewer: _this2.pdfViewer,\n          eventBus: eventBus,\n          contextMenuItems: appConfig.fullscreen\n        });\n      }\n      _this2.passwordPrompt = new _password_prompt.PasswordPrompt(appConfig.passwordOverlay, _this2.overlayManager, _this2.l10n);\n      _this2.pdfOutlineViewer = new _pdf_outline_viewer.PDFOutlineViewer({\n        container: appConfig.sidebar.outlineView,\n        eventBus: eventBus,\n        linkService: pdfLinkService\n      });\n      _this2.pdfAttachmentViewer = new _pdf_attachment_viewer.PDFAttachmentViewer({\n        container: appConfig.sidebar.attachmentsView,\n        eventBus: eventBus,\n        downloadManager: downloadManager\n      });\n      var sidebarConfig = Object.create(appConfig.sidebar);\n      sidebarConfig.pdfViewer = _this2.pdfViewer;\n      sidebarConfig.pdfThumbnailViewer = _this2.pdfThumbnailViewer;\n      sidebarConfig.pdfOutlineViewer = _this2.pdfOutlineViewer;\n      sidebarConfig.eventBus = eventBus;\n      _this2.pdfSidebar = new _pdf_sidebar.PDFSidebar(sidebarConfig, _this2.l10n);\n      _this2.pdfSidebar.onToggled = _this2.forceRendering.bind(_this2);\n      resolve(undefined);\n    });\n  },\n  run: function run(config) {\n    this.initialize(config).then(webViewerInitialized);\n  },\n  zoomIn: function zoomIn(ticks) {\n    var newScale = this.pdfViewer.currentScale;\n    do {\n      newScale = (newScale * DEFAULT_SCALE_DELTA).toFixed(2);\n      newScale = Math.ceil(newScale * 10) / 10;\n      newScale = Math.min(_ui_utils.MAX_SCALE, newScale);\n    } while (--ticks > 0 && newScale < _ui_utils.MAX_SCALE);\n    this.pdfViewer.currentScaleValue = newScale;\n  },\n  zoomOut: function zoomOut(ticks) {\n    var newScale = this.pdfViewer.currentScale;\n    do {\n      newScale = (newScale / DEFAULT_SCALE_DELTA).toFixed(2);\n      newScale = Math.floor(newScale * 10) / 10;\n      newScale = Math.max(_ui_utils.MIN_SCALE, newScale);\n    } while (--ticks > 0 && newScale > _ui_utils.MIN_SCALE);\n    this.pdfViewer.currentScaleValue = newScale;\n  },\n\n  get pagesCount() {\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\n  },\n  get pageRotation() {\n    return this.pdfViewer.pagesRotation;\n  },\n  set page(val) {\n    this.pdfViewer.currentPageNumber = val;\n  },\n  get page() {\n    return this.pdfViewer.currentPageNumber;\n  },\n  get printing() {\n    return !!this.printService;\n  },\n  get supportsPrinting() {\n    return PDFPrintServiceFactory.instance.supportsPrinting;\n  },\n  get supportsFullscreen() {\n    var support = void 0;\n    var doc = document.documentElement;\n    support = !!(doc.requestFullscreen || doc.mozRequestFullScreen || doc.webkitRequestFullScreen || doc.msRequestFullscreen);\n    if (document.fullscreenEnabled === false || document.mozFullScreenEnabled === false || document.webkitFullscreenEnabled === false || document.msFullscreenEnabled === false) {\n      support = false;\n    }\n    if (support && _pdfjsLib.PDFJS.disableFullscreen === true) {\n      support = false;\n    }\n    return (0, _pdfjsLib.shadow)(this, 'supportsFullscreen', support);\n  },\n  get supportsIntegratedFind() {\n    return this.externalServices.supportsIntegratedFind;\n  },\n  get supportsDocumentFonts() {\n    return this.externalServices.supportsDocumentFonts;\n  },\n  get supportsDocumentColors() {\n    return this.externalServices.supportsDocumentColors;\n  },\n  get loadingBar() {\n    var bar = new _ui_utils.ProgressBar('#loadingBar');\n    return (0, _pdfjsLib.shadow)(this, 'loadingBar', bar);\n  },\n  get supportedMouseWheelZoomModifierKeys() {\n    return this.externalServices.supportedMouseWheelZoomModifierKeys;\n  },\n  initPassiveLoading: function initPassiveLoading() {\n    throw new Error('Not implemented: initPassiveLoading');\n  },\n  setTitleUsingUrl: function setTitleUsingUrl(url) {\n    this.url = url;\n    this.baseUrl = url.split('#')[0];\n    var title = (0, _ui_utils.getPDFFileNameFromURL)(url, '');\n    if (!title) {\n      try {\n        title = decodeURIComponent((0, _pdfjsLib.getFilenameFromUrl)(url)) || url;\n      } catch (ex) {\n        title = url;\n      }\n    }\n    this.setTitle(title);\n  },\n  setTitle: function setTitle(title) {\n    if (this.isViewerEmbedded) {\n      return;\n    }\n    document.title = title;\n  },\n  close: function close() {\n    var errorWrapper = this.appConfig.errorWrapper.container;\n    errorWrapper.setAttribute('hidden', 'true');\n    if (!this.pdfLoadingTask) {\n      return Promise.resolve();\n    }\n    var promise = this.pdfLoadingTask.destroy();\n    this.pdfLoadingTask = null;\n    if (this.pdfDocument) {\n      this.pdfDocument = null;\n      this.pdfThumbnailViewer.setDocument(null);\n      this.pdfViewer.setDocument(null);\n      this.pdfLinkService.setDocument(null, null);\n      this.pdfDocumentProperties.setDocument(null, null);\n    }\n    this.store = null;\n    this.isInitialViewSet = false;\n    this.downloadComplete = false;\n    this.pdfSidebar.reset();\n    this.pdfOutlineViewer.reset();\n    this.pdfAttachmentViewer.reset();\n    this.findController.reset();\n    this.findBar.reset();\n    this.toolbar.reset();\n    this.secondaryToolbar.reset();\n    if (typeof PDFBug !== 'undefined') {\n      PDFBug.cleanup();\n    }\n    return promise;\n  },\n  open: function open(file, args) {\n    var _this3 = this;\n\n    if (arguments.length > 2 || typeof args === 'number') {\n      return Promise.reject(new Error('Call of open() with obsolete signature.'));\n    }\n    if (this.pdfLoadingTask) {\n      return this.close().then(function () {\n        _this3.preferences.reload();\n        return _this3.open(file, args);\n      });\n    }\n    var parameters = Object.create(null),\n        scale = void 0;\n    if (typeof file === 'string') {\n      this.setTitleUsingUrl(file);\n      parameters.url = file;\n    } else if (file && 'byteLength' in file) {\n      parameters.data = file;\n    } else if (file.url && file.originalUrl) {\n      this.setTitleUsingUrl(file.originalUrl);\n      parameters.url = file.url;\n    }\n    if (args) {\n      for (var prop in args) {\n        parameters[prop] = args[prop];\n      }\n      if (args.scale) {\n        scale = args.scale;\n      }\n      if (args.length) {\n        this.pdfDocumentProperties.setFileSize(args.length);\n      }\n    }\n    var loadingTask = (0, _pdfjsLib.getDocument)(parameters);\n    this.pdfLoadingTask = loadingTask;\n    loadingTask.onPassword = function (updateCallback, reason) {\n      _this3.passwordPrompt.setUpdateCallback(updateCallback, reason);\n      _this3.passwordPrompt.open();\n    };\n    loadingTask.onProgress = function (_ref) {\n      var loaded = _ref.loaded,\n          total = _ref.total;\n\n      _this3.progress(loaded / total);\n    };\n    loadingTask.onUnsupportedFeature = this.fallback.bind(this);\n    return loadingTask.promise.then(function (pdfDocument) {\n      _this3.load(pdfDocument, scale);\n    }, function (exception) {\n      var message = exception && exception.message;\n      var loadingErrorMessage = void 0;\n      if (exception instanceof _pdfjsLib.InvalidPDFException) {\n        loadingErrorMessage = _this3.l10n.get('invalid_file_error', null, 'Invalid or corrupted PDF file.');\n      } else if (exception instanceof _pdfjsLib.MissingPDFException) {\n        loadingErrorMessage = _this3.l10n.get('missing_file_error', null, 'Missing PDF file.');\n      } else if (exception instanceof _pdfjsLib.UnexpectedResponseException) {\n        loadingErrorMessage = _this3.l10n.get('unexpected_response_error', null, 'Unexpected server response.');\n      } else {\n        loadingErrorMessage = _this3.l10n.get('loading_error', null, 'An error occurred while loading the PDF.');\n      }\n      return loadingErrorMessage.then(function (msg) {\n        _this3.error(msg, { message: message });\n        throw new Error(msg);\n      });\n    });\n  },\n  download: function download() {\n    var _this4 = this;\n\n    function downloadByUrl() {\n      downloadManager.downloadUrl(url, filename);\n    }\n    var url = this.baseUrl;\n    var filename = (0, _ui_utils.getPDFFileNameFromURL)(this.url);\n    var downloadManager = this.downloadManager;\n    downloadManager.onerror = function (err) {\n      _this4.error('PDF failed to download: ' + err);\n    };\n    if (!this.pdfDocument || !this.downloadComplete) {\n      downloadByUrl();\n      return;\n    }\n    this.pdfDocument.getData().then(function (data) {\n      var blob = (0, _pdfjsLib.createBlob)(data, 'application/pdf');\n      downloadManager.download(blob, url, filename);\n    }).catch(downloadByUrl);\n  },\n  fallback: function fallback(featureId) {},\n  error: function error(message, moreInfo) {\n    var moreInfoText = [this.l10n.get('error_version_info', {\n      version: _pdfjsLib.version || '?',\n      build: _pdfjsLib.build || '?'\n    }, 'PDF.js v{{version}} (build: {{build}})')];\n    if (moreInfo) {\n      moreInfoText.push(this.l10n.get('error_message', { message: moreInfo.message }, 'Message: {{message}}'));\n      if (moreInfo.stack) {\n        moreInfoText.push(this.l10n.get('error_stack', { stack: moreInfo.stack }, 'Stack: {{stack}}'));\n      } else {\n        if (moreInfo.filename) {\n          moreInfoText.push(this.l10n.get('error_file', { file: moreInfo.filename }, 'File: {{file}}'));\n        }\n        if (moreInfo.lineNumber) {\n          moreInfoText.push(this.l10n.get('error_line', { line: moreInfo.lineNumber }, 'Line: {{line}}'));\n        }\n      }\n    }\n    var errorWrapperConfig = this.appConfig.errorWrapper;\n    var errorWrapper = errorWrapperConfig.container;\n    errorWrapper.removeAttribute('hidden');\n    var errorMessage = errorWrapperConfig.errorMessage;\n    errorMessage.textContent = message;\n    var closeButton = errorWrapperConfig.closeButton;\n    closeButton.onclick = function () {\n      errorWrapper.setAttribute('hidden', 'true');\n    };\n    var errorMoreInfo = errorWrapperConfig.errorMoreInfo;\n    var moreInfoButton = errorWrapperConfig.moreInfoButton;\n    var lessInfoButton = errorWrapperConfig.lessInfoButton;\n    moreInfoButton.onclick = function () {\n      errorMoreInfo.removeAttribute('hidden');\n      moreInfoButton.setAttribute('hidden', 'true');\n      lessInfoButton.removeAttribute('hidden');\n      errorMoreInfo.style.height = errorMoreInfo.scrollHeight + 'px';\n    };\n    lessInfoButton.onclick = function () {\n      errorMoreInfo.setAttribute('hidden', 'true');\n      moreInfoButton.removeAttribute('hidden');\n      lessInfoButton.setAttribute('hidden', 'true');\n    };\n    moreInfoButton.oncontextmenu = _ui_utils.noContextMenuHandler;\n    lessInfoButton.oncontextmenu = _ui_utils.noContextMenuHandler;\n    closeButton.oncontextmenu = _ui_utils.noContextMenuHandler;\n    moreInfoButton.removeAttribute('hidden');\n    lessInfoButton.setAttribute('hidden', 'true');\n    Promise.all(moreInfoText).then(function (parts) {\n      errorMoreInfo.value = parts.join('\\n');\n    });\n  },\n  progress: function progress(level) {\n    var _this5 = this;\n\n    if (this.downloadComplete) {\n      return;\n    }\n    var percent = Math.round(level * 100);\n    if (percent > this.loadingBar.percent || isNaN(percent)) {\n      this.loadingBar.percent = percent;\n      if (_pdfjsLib.PDFJS.disableAutoFetch && percent) {\n        if (this.disableAutoFetchLoadingBarTimeout) {\n          clearTimeout(this.disableAutoFetchLoadingBarTimeout);\n          this.disableAutoFetchLoadingBarTimeout = null;\n        }\n        this.loadingBar.show();\n        this.disableAutoFetchLoadingBarTimeout = setTimeout(function () {\n          _this5.loadingBar.hide();\n          _this5.disableAutoFetchLoadingBarTimeout = null;\n        }, DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT);\n      }\n    }\n  },\n  load: function load(pdfDocument, scale) {\n    var _this6 = this;\n\n    scale = scale || _ui_utils.UNKNOWN_SCALE;\n    this.pdfDocument = pdfDocument;\n    pdfDocument.getDownloadInfo().then(function () {\n      _this6.downloadComplete = true;\n      _this6.loadingBar.hide();\n      firstPagePromise.then(function () {\n        _this6.eventBus.dispatch('documentload', { source: _this6 });\n      });\n    });\n    var pageModePromise = pdfDocument.getPageMode().catch(function () {});\n    this.toolbar.setPagesCount(pdfDocument.numPages, false);\n    this.secondaryToolbar.setPagesCount(pdfDocument.numPages);\n    var id = this.documentFingerprint = pdfDocument.fingerprint;\n    var store = this.store = new _view_history.ViewHistory(id);\n    var baseDocumentUrl = void 0;\n    baseDocumentUrl = null;\n    this.pdfLinkService.setDocument(pdfDocument, baseDocumentUrl);\n    this.pdfDocumentProperties.setDocument(pdfDocument, this.url);\n    var pdfViewer = this.pdfViewer;\n    pdfViewer.setDocument(pdfDocument);\n    var firstPagePromise = pdfViewer.firstPagePromise;\n    var pagesPromise = pdfViewer.pagesPromise;\n    var onePageRendered = pdfViewer.onePageRendered;\n    var pdfThumbnailViewer = this.pdfThumbnailViewer;\n    pdfThumbnailViewer.setDocument(pdfDocument);\n    firstPagePromise.then(function (pdfPage) {\n      _this6.loadingBar.setWidth(_this6.appConfig.viewerContainer);\n      if (!_pdfjsLib.PDFJS.disableHistory && !_this6.isViewerEmbedded) {\n        if (!_this6.viewerPrefs['showPreviousViewOnLoad']) {\n          _this6.pdfHistory.clearHistoryState();\n        }\n        _this6.pdfHistory.initialize(_this6.documentFingerprint);\n        if (_this6.pdfHistory.initialDestination) {\n          _this6.initialDestination = _this6.pdfHistory.initialDestination;\n        } else if (_this6.pdfHistory.initialBookmark) {\n          _this6.initialBookmark = _this6.pdfHistory.initialBookmark;\n        }\n      }\n      var initialParams = {\n        destination: _this6.initialDestination,\n        bookmark: _this6.initialBookmark,\n        hash: null\n      };\n      var storePromise = store.getMultiple({\n        exists: false,\n        page: '1',\n        zoom: _ui_utils.DEFAULT_SCALE_VALUE,\n        scrollLeft: '0',\n        scrollTop: '0',\n        sidebarView: _pdf_sidebar.SidebarView.NONE\n      }).catch(function () {});\n      Promise.all([storePromise, pageModePromise]).then(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n            _ref3$ = _ref3[0],\n            values = _ref3$ === undefined ? {} : _ref3$,\n            pageMode = _ref3[1];\n\n        var hash = _this6.viewerPrefs['defaultZoomValue'] ? 'zoom=' + _this6.viewerPrefs['defaultZoomValue'] : null;\n        var sidebarView = _this6.viewerPrefs['sidebarViewOnLoad'];\n        if (values.exists && _this6.viewerPrefs['showPreviousViewOnLoad']) {\n          hash = 'page=' + values.page + '&zoom=' + (_this6.viewerPrefs['defaultZoomValue'] || values.zoom) + ',' + values.scrollLeft + ',' + values.scrollTop;\n          sidebarView = sidebarView || values.sidebarView | 0;\n        }\n        if (pageMode && !_this6.viewerPrefs['disablePageMode']) {\n          sidebarView = sidebarView || apiPageModeToSidebarView(pageMode);\n        }\n        return {\n          hash: hash,\n          sidebarView: sidebarView\n        };\n      }).then(function (_ref4) {\n        var hash = _ref4.hash,\n            sidebarView = _ref4.sidebarView;\n\n        _this6.setInitialView(hash, {\n          sidebarView: sidebarView,\n          scale: scale\n        });\n        initialParams.hash = hash;\n        if (!_this6.isViewerEmbedded) {\n          pdfViewer.focus();\n        }\n        return pagesPromise;\n      }).then(function () {\n        if (!initialParams.destination && !initialParams.bookmark && !initialParams.hash) {\n          return;\n        }\n        if (pdfViewer.hasEqualPageSizes) {\n          return;\n        }\n        _this6.initialDestination = initialParams.destination;\n        _this6.initialBookmark = initialParams.bookmark;\n        pdfViewer.currentScaleValue = pdfViewer.currentScaleValue;\n        _this6.setInitialView(initialParams.hash);\n      }).then(function () {\n        pdfViewer.update();\n      });\n    });\n    pdfDocument.getPageLabels().then(function (labels) {\n      if (!labels || _this6.viewerPrefs['disablePageLabels']) {\n        return;\n      }\n      var i = 0,\n          numLabels = labels.length;\n      if (numLabels !== _this6.pagesCount) {\n        console.error('The number of Page Labels does not match ' + 'the number of pages in the document.');\n        return;\n      }\n      while (i < numLabels && labels[i] === (i + 1).toString()) {\n        i++;\n      }\n      if (i === numLabels) {\n        return;\n      }\n      pdfViewer.setPageLabels(labels);\n      pdfThumbnailViewer.setPageLabels(labels);\n      _this6.toolbar.setPagesCount(pdfDocument.numPages, true);\n      _this6.toolbar.setPageNumber(pdfViewer.currentPageNumber, pdfViewer.currentPageLabel);\n    });\n    pagesPromise.then(function () {\n      if (!_this6.supportsPrinting) {\n        return;\n      }\n      pdfDocument.getJavaScript().then(function (javaScript) {\n        if (javaScript.length) {\n          console.warn('Warning: JavaScript is not supported');\n          _this6.fallback(_pdfjsLib.UNSUPPORTED_FEATURES.javaScript);\n        }\n        var regex = /\\bprint\\s*\\(/;\n        for (var i = 0, ii = javaScript.length; i < ii; i++) {\n          var js = javaScript[i];\n          if (js && regex.test(js)) {\n            setTimeout(function () {\n              window.print();\n            });\n            return;\n          }\n        }\n      });\n    });\n    Promise.all([onePageRendered, _ui_utils.animationStarted]).then(function () {\n      pdfDocument.getOutline().then(function (outline) {\n        _this6.pdfOutlineViewer.render({ outline: outline });\n      });\n      pdfDocument.getAttachments().then(function (attachments) {\n        _this6.pdfAttachmentViewer.render({ attachments: attachments });\n      });\n    });\n    pdfDocument.getMetadata().then(function (_ref5) {\n      var info = _ref5.info,\n          metadata = _ref5.metadata;\n\n      _this6.documentInfo = info;\n      _this6.metadata = metadata;\n      console.log('PDF ' + pdfDocument.fingerprint + ' [' + info.PDFFormatVersion + ' ' + (info.Producer || '-').trim() + ' / ' + (info.Creator || '-').trim() + ']' + ' (PDF.js: ' + (_pdfjsLib.version || '-') + (!_pdfjsLib.PDFJS.disableWebGL ? ' [WebGL]' : '') + ')');\n      var pdfTitle = void 0;\n      if (metadata && metadata.has('dc:title')) {\n        var title = metadata.get('dc:title');\n        if (title !== 'Untitled') {\n          pdfTitle = title;\n        }\n      }\n      if (!pdfTitle && info && info['Title']) {\n        pdfTitle = info['Title'];\n      }\n      if (pdfTitle) {\n        _this6.setTitle(pdfTitle + ' - ' + document.title);\n      }\n      if (info.IsAcroFormPresent) {\n        console.warn('Warning: AcroForm/XFA is not supported');\n        _this6.fallback(_pdfjsLib.UNSUPPORTED_FEATURES.forms);\n      }\n    });\n  },\n  setInitialView: function setInitialView(storedHash) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$scale = options.scale,\n        scale = _options$scale === undefined ? 0 : _options$scale,\n        _options$sidebarView = options.sidebarView,\n        sidebarView = _options$sidebarView === undefined ? _pdf_sidebar.SidebarView.NONE : _options$sidebarView;\n\n    this.isInitialViewSet = true;\n    this.pdfSidebar.setInitialView(sidebarView);\n    if (this.initialDestination) {\n      this.pdfLinkService.navigateTo(this.initialDestination);\n      this.initialDestination = null;\n    } else if (this.initialBookmark) {\n      this.pdfLinkService.setHash(this.initialBookmark);\n      this.pdfHistory.push({ hash: this.initialBookmark }, true);\n      this.initialBookmark = null;\n    } else if (storedHash) {\n      this.pdfLinkService.setHash(storedHash);\n    } else if (scale) {\n      this.pdfViewer.currentScaleValue = scale;\n      this.page = 1;\n    }\n    this.toolbar.setPageNumber(this.pdfViewer.currentPageNumber, this.pdfViewer.currentPageLabel);\n    this.secondaryToolbar.setPageNumber(this.pdfViewer.currentPageNumber);\n    if (!this.pdfViewer.currentScaleValue) {\n      this.pdfViewer.currentScaleValue = _ui_utils.DEFAULT_SCALE_VALUE;\n    }\n  },\n  cleanup: function cleanup() {\n    if (!this.pdfDocument) {\n      return;\n    }\n    this.pdfViewer.cleanup();\n    this.pdfThumbnailViewer.cleanup();\n    if (this.pdfViewer.renderer !== _ui_utils.RendererType.SVG) {\n      this.pdfDocument.cleanup();\n    }\n  },\n  forceRendering: function forceRendering() {\n    this.pdfRenderingQueue.printing = this.printing;\n    this.pdfRenderingQueue.isThumbnailViewEnabled = this.pdfSidebar.isThumbnailViewVisible;\n    this.pdfRenderingQueue.renderHighestPriority();\n  },\n  beforePrint: function beforePrint() {\n    var _this7 = this;\n\n    if (this.printService) {\n      return;\n    }\n    if (!this.supportsPrinting) {\n      this.l10n.get('printing_not_supported', null, 'Warning: Printing is not fully supported by ' + 'this browser.').then(function (printMessage) {\n        _this7.error(printMessage);\n      });\n      return;\n    }\n    if (!this.pdfViewer.pageViewsReady) {\n      this.l10n.get('printing_not_ready', null, 'Warning: The PDF is not fully loaded for printing.').then(function (notReadyMessage) {\n        window.alert(notReadyMessage);\n      });\n      return;\n    }\n    var pagesOverview = this.pdfViewer.getPagesOverview();\n    var printContainer = this.appConfig.printContainer;\n    var printService = PDFPrintServiceFactory.instance.createPrintService(this.pdfDocument, pagesOverview, printContainer, this.l10n);\n    this.printService = printService;\n    this.forceRendering();\n    printService.layout();\n  },\n\n  afterPrint: function pdfViewSetupAfterPrint() {\n    if (this.printService) {\n      this.printService.destroy();\n      this.printService = null;\n    }\n    this.forceRendering();\n  },\n  rotatePages: function rotatePages(delta) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    var pdfViewer = this.pdfViewer,\n        pdfThumbnailViewer = this.pdfThumbnailViewer;\n\n    var pageNumber = pdfViewer.currentPageNumber;\n    var newRotation = (pdfViewer.pagesRotation + 360 + delta) % 360;\n    pdfViewer.pagesRotation = newRotation;\n    pdfThumbnailViewer.pagesRotation = newRotation;\n    this.forceRendering();\n    pdfViewer.currentPageNumber = pageNumber;\n  },\n  requestPresentationMode: function requestPresentationMode() {\n    if (!this.pdfPresentationMode) {\n      return;\n    }\n    this.pdfPresentationMode.request();\n  },\n  bindEvents: function bindEvents() {\n    var eventBus = this.eventBus,\n        _boundEvents = this._boundEvents;\n\n    _boundEvents.beforePrint = this.beforePrint.bind(this);\n    _boundEvents.afterPrint = this.afterPrint.bind(this);\n    eventBus.on('resize', webViewerResize);\n    eventBus.on('hashchange', webViewerHashchange);\n    eventBus.on('beforeprint', _boundEvents.beforePrint);\n    eventBus.on('afterprint', _boundEvents.afterPrint);\n    eventBus.on('pagerendered', webViewerPageRendered);\n    eventBus.on('textlayerrendered', webViewerTextLayerRendered);\n    eventBus.on('updateviewarea', webViewerUpdateViewarea);\n    eventBus.on('pagechanging', webViewerPageChanging);\n    eventBus.on('scalechanging', webViewerScaleChanging);\n    eventBus.on('sidebarviewchanged', webViewerSidebarViewChanged);\n    eventBus.on('pagemode', webViewerPageMode);\n    eventBus.on('namedaction', webViewerNamedAction);\n    eventBus.on('presentationmodechanged', webViewerPresentationModeChanged);\n    eventBus.on('presentationmode', webViewerPresentationMode);\n    eventBus.on('openfile', webViewerOpenFile);\n    eventBus.on('print', webViewerPrint);\n    eventBus.on('download', webViewerDownload);\n    eventBus.on('firstpage', webViewerFirstPage);\n    eventBus.on('lastpage', webViewerLastPage);\n    eventBus.on('nextpage', webViewerNextPage);\n    eventBus.on('previouspage', webViewerPreviousPage);\n    eventBus.on('zoomin', webViewerZoomIn);\n    eventBus.on('zoomout', webViewerZoomOut);\n    eventBus.on('pagenumberchanged', webViewerPageNumberChanged);\n    eventBus.on('scalechanged', webViewerScaleChanged);\n    eventBus.on('rotatecw', webViewerRotateCw);\n    eventBus.on('rotateccw', webViewerRotateCcw);\n    eventBus.on('documentproperties', webViewerDocumentProperties);\n    eventBus.on('find', webViewerFind);\n    eventBus.on('findfromurlhash', webViewerFindFromUrlHash);\n    eventBus.on('fileinputchange', webViewerFileInputChange);\n  },\n  bindWindowEvents: function bindWindowEvents() {\n    var eventBus = this.eventBus,\n        _boundEvents = this._boundEvents;\n\n    _boundEvents.windowResize = function () {\n      eventBus.dispatch('resize');\n    };\n    _boundEvents.windowHashChange = function () {\n      eventBus.dispatch('hashchange', { hash: document.location.hash.substring(1) });\n    };\n    _boundEvents.windowBeforePrint = function () {\n      eventBus.dispatch('beforeprint');\n    };\n    _boundEvents.windowAfterPrint = function () {\n      eventBus.dispatch('afterprint');\n    };\n    window.addEventListener('wheel', webViewerWheel);\n    window.addEventListener('click', webViewerClick);\n    window.addEventListener('keydown', webViewerKeyDown);\n    window.addEventListener('resize', _boundEvents.windowResize);\n    window.addEventListener('hashchange', _boundEvents.windowHashChange);\n    window.addEventListener('beforeprint', _boundEvents.windowBeforePrint);\n    window.addEventListener('afterprint', _boundEvents.windowAfterPrint);\n    _boundEvents.windowChange = function (evt) {\n      var files = evt.target.files;\n      if (!files || files.length === 0) {\n        return;\n      }\n      eventBus.dispatch('fileinputchange', { fileInput: evt.target });\n    };\n    window.addEventListener('change', _boundEvents.windowChange);\n  },\n  unbindEvents: function unbindEvents() {\n    var eventBus = this.eventBus,\n        _boundEvents = this._boundEvents;\n\n    eventBus.off('resize', webViewerResize);\n    eventBus.off('hashchange', webViewerHashchange);\n    eventBus.off('beforeprint', _boundEvents.beforePrint);\n    eventBus.off('afterprint', _boundEvents.afterPrint);\n    eventBus.off('pagerendered', webViewerPageRendered);\n    eventBus.off('textlayerrendered', webViewerTextLayerRendered);\n    eventBus.off('updateviewarea', webViewerUpdateViewarea);\n    eventBus.off('pagechanging', webViewerPageChanging);\n    eventBus.off('scalechanging', webViewerScaleChanging);\n    eventBus.off('sidebarviewchanged', webViewerSidebarViewChanged);\n    eventBus.off('pagemode', webViewerPageMode);\n    eventBus.off('namedaction', webViewerNamedAction);\n    eventBus.off('presentationmodechanged', webViewerPresentationModeChanged);\n    eventBus.off('presentationmode', webViewerPresentationMode);\n    eventBus.off('openfile', webViewerOpenFile);\n    eventBus.off('print', webViewerPrint);\n    eventBus.off('download', webViewerDownload);\n    eventBus.off('firstpage', webViewerFirstPage);\n    eventBus.off('lastpage', webViewerLastPage);\n    eventBus.off('nextpage', webViewerNextPage);\n    eventBus.off('previouspage', webViewerPreviousPage);\n    eventBus.off('zoomin', webViewerZoomIn);\n    eventBus.off('zoomout', webViewerZoomOut);\n    eventBus.off('pagenumberchanged', webViewerPageNumberChanged);\n    eventBus.off('scalechanged', webViewerScaleChanged);\n    eventBus.off('rotatecw', webViewerRotateCw);\n    eventBus.off('rotateccw', webViewerRotateCcw);\n    eventBus.off('documentproperties', webViewerDocumentProperties);\n    eventBus.off('find', webViewerFind);\n    eventBus.off('findfromurlhash', webViewerFindFromUrlHash);\n    eventBus.off('fileinputchange', webViewerFileInputChange);\n    _boundEvents.beforePrint = null;\n    _boundEvents.afterPrint = null;\n  },\n  unbindWindowEvents: function unbindWindowEvents() {\n    var _boundEvents = this._boundEvents;\n\n    window.removeEventListener('wheel', webViewerWheel);\n    window.removeEventListener('click', webViewerClick);\n    window.removeEventListener('keydown', webViewerKeyDown);\n    window.removeEventListener('resize', _boundEvents.windowResize);\n    window.removeEventListener('hashchange', _boundEvents.windowHashChange);\n    window.removeEventListener('beforeprint', _boundEvents.windowBeforePrint);\n    window.removeEventListener('afterprint', _boundEvents.windowAfterPrint);\n    window.removeEventListener('change', _boundEvents.windowChange);\n    _boundEvents.windowChange = null;\n    _boundEvents.windowResize = null;\n    _boundEvents.windowHashChange = null;\n    _boundEvents.windowBeforePrint = null;\n    _boundEvents.windowAfterPrint = null;\n  }\n};\nvar validateFileURL = void 0;\n{\n  var HOSTED_VIEWER_ORIGINS = ['null', 'http://mozilla.github.io', 'https://mozilla.github.io'];\n  validateFileURL = function validateFileURL(file) {\n    if (file === undefined) {\n      return;\n    }\n    try {\n      var viewerOrigin = new URL(window.location.href).origin || 'null';\n      if (HOSTED_VIEWER_ORIGINS.indexOf(viewerOrigin) >= 0) {\n        return;\n      }\n      var fileOrigin = new URL(file, window.location.href).origin;\n      if (fileOrigin !== viewerOrigin) {\n        throw new Error('file origin does not match viewer\\'s');\n      }\n    } catch (ex) {\n      var message = ex && ex.message;\n      PDFViewerApplication.l10n.get('loading_error', null, 'An error occurred while loading the PDF.').then(function (loadingErrorMessage) {\n        PDFViewerApplication.error(loadingErrorMessage, { message: message });\n      });\n      throw ex;\n    }\n  };\n}\nfunction loadAndEnablePDFBug(enabledTabs) {\n  return new Promise(function (resolve, reject) {\n    var appConfig = PDFViewerApplication.appConfig;\n    var script = document.createElement('script');\n    script.src = appConfig.debuggerScriptPath;\n    script.onload = function () {\n      PDFBug.enable(enabledTabs);\n      PDFBug.init({\n        PDFJS: _pdfjsLib.PDFJS,\n        OPS: _pdfjsLib.OPS\n      }, appConfig.mainContainer);\n      resolve();\n    };\n    script.onerror = function () {\n      reject(new Error('Cannot load debugger at ' + script.src));\n    };\n    (document.getElementsByTagName('head')[0] || document.body).appendChild(script);\n  });\n}\nfunction webViewerInitialized() {\n  var appConfig = PDFViewerApplication.appConfig;\n  var file = void 0;\n  var queryString = document.location.search.substring(1);\n  var params = (0, _ui_utils.parseQueryString)(queryString);\n  file = 'file' in params ? params.file : appConfig.defaultUrl;\n  validateFileURL(file);\n  var waitForBeforeOpening = [];\n  var fileInput = document.createElement('input');\n  fileInput.id = appConfig.openFileInputName;\n  fileInput.className = 'fileInput';\n  fileInput.setAttribute('type', 'file');\n  fileInput.oncontextmenu = _ui_utils.noContextMenuHandler;\n  document.body.appendChild(fileInput);\n  if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {\n    appConfig.toolbar.openFile.setAttribute('hidden', 'true');\n    appConfig.secondaryToolbar.openFileButton.setAttribute('hidden', 'true');\n  } else {\n    fileInput.value = null;\n  }\n  if (PDFViewerApplication.viewerPrefs['pdfBugEnabled']) {\n    var hash = document.location.hash.substring(1);\n    var hashParams = (0, _ui_utils.parseQueryString)(hash);\n    if ('disableworker' in hashParams) {\n      _pdfjsLib.PDFJS.disableWorker = hashParams['disableworker'] === 'true';\n    }\n    if ('disablerange' in hashParams) {\n      _pdfjsLib.PDFJS.disableRange = hashParams['disablerange'] === 'true';\n    }\n    if ('disablestream' in hashParams) {\n      _pdfjsLib.PDFJS.disableStream = hashParams['disablestream'] === 'true';\n    }\n    if ('disableautofetch' in hashParams) {\n      _pdfjsLib.PDFJS.disableAutoFetch = hashParams['disableautofetch'] === 'true';\n    }\n    if ('disablefontface' in hashParams) {\n      _pdfjsLib.PDFJS.disableFontFace = hashParams['disablefontface'] === 'true';\n    }\n    if ('disablehistory' in hashParams) {\n      _pdfjsLib.PDFJS.disableHistory = hashParams['disablehistory'] === 'true';\n    }\n    if ('webgl' in hashParams) {\n      _pdfjsLib.PDFJS.disableWebGL = hashParams['webgl'] !== 'true';\n    }\n    if ('useonlycsszoom' in hashParams) {\n      _pdfjsLib.PDFJS.useOnlyCssZoom = hashParams['useonlycsszoom'] === 'true';\n    }\n    if ('verbosity' in hashParams) {\n      _pdfjsLib.PDFJS.verbosity = hashParams['verbosity'] | 0;\n    }\n    if ('ignorecurrentpositiononzoom' in hashParams) {\n      _pdfjsLib.PDFJS.ignoreCurrentPositionOnZoom = hashParams['ignorecurrentpositiononzoom'] === 'true';\n    }\n    if ('textlayer' in hashParams) {\n      switch (hashParams['textlayer']) {\n        case 'off':\n          _pdfjsLib.PDFJS.disableTextLayer = true;\n          break;\n        case 'visible':\n        case 'shadow':\n        case 'hover':\n          var viewer = appConfig.viewerContainer;\n          viewer.classList.add('textLayer-' + hashParams['textlayer']);\n          break;\n      }\n    }\n    if ('pdfbug' in hashParams) {\n      _pdfjsLib.PDFJS.pdfBug = true;\n      var pdfBug = hashParams['pdfbug'];\n      var enabled = pdfBug.split(',');\n      waitForBeforeOpening.push(loadAndEnablePDFBug(enabled));\n    }\n  }\n  if (!PDFViewerApplication.supportsPrinting) {\n    appConfig.toolbar.print.classList.add('hidden');\n    appConfig.secondaryToolbar.printButton.classList.add('hidden');\n  }\n  if (!PDFViewerApplication.supportsFullscreen) {\n    appConfig.toolbar.presentationModeButton.classList.add('hidden');\n    appConfig.secondaryToolbar.presentationModeButton.classList.add('hidden');\n  }\n  if (PDFViewerApplication.supportsIntegratedFind) {\n    appConfig.toolbar.viewFind.classList.add('hidden');\n  }\n  appConfig.sidebar.mainContainer.addEventListener('transitionend', function (evt) {\n    if (evt.target === this) {\n      PDFViewerApplication.eventBus.dispatch('resize');\n    }\n  }, true);\n  appConfig.sidebar.toggleButton.addEventListener('click', function () {\n    PDFViewerApplication.pdfSidebar.toggle();\n  });\n  Promise.all(waitForBeforeOpening).then(function () {\n    webViewerOpenFileViaURL(file);\n  }).catch(function (reason) {\n    PDFViewerApplication.l10n.get('loading_error', null, 'An error occurred while opening.').then(function (msg) {\n      PDFViewerApplication.error(msg, reason);\n    });\n  });\n}\nvar webViewerOpenFileViaURL = void 0;\n{\n  webViewerOpenFileViaURL = function webViewerOpenFileViaURL(file) {\n    if (file && file.lastIndexOf('file:', 0) === 0) {\n      PDFViewerApplication.setTitleUsingUrl(file);\n      var xhr = new XMLHttpRequest();\n      xhr.onload = function () {\n        PDFViewerApplication.open(new Uint8Array(xhr.response));\n      };\n      try {\n        xhr.open('GET', file);\n        xhr.responseType = 'arraybuffer';\n        xhr.send();\n      } catch (ex) {\n        PDFViewerApplication.l10n.get('loading_error', null, 'An error occurred while loading the PDF.').then(function (msg) {\n          PDFViewerApplication.error(msg, ex);\n        });\n      }\n      return;\n    }\n    if (file) {\n      PDFViewerApplication.open(file);\n    }\n  };\n}\nfunction webViewerPageRendered(evt) {\n  var pageNumber = evt.pageNumber;\n  var pageIndex = pageNumber - 1;\n  var pageView = PDFViewerApplication.pdfViewer.getPageView(pageIndex);\n  if (pageNumber === PDFViewerApplication.page) {\n    PDFViewerApplication.toolbar.updateLoadingIndicatorState(false);\n  }\n  if (!pageView) {\n    return;\n  }\n  if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) {\n    var thumbnailView = PDFViewerApplication.pdfThumbnailViewer.getThumbnail(pageIndex);\n    thumbnailView.setImage(pageView);\n  }\n  if (_pdfjsLib.PDFJS.pdfBug && Stats.enabled && pageView.stats) {\n    Stats.add(pageNumber, pageView.stats);\n  }\n  if (pageView.error) {\n    PDFViewerApplication.l10n.get('rendering_error', null, 'An error occurred while rendering the page.').then(function (msg) {\n      PDFViewerApplication.error(msg, pageView.error);\n    });\n  }\n}\nfunction webViewerTextLayerRendered(evt) {}\nfunction webViewerPageMode(evt) {\n  var mode = evt.mode,\n      view = void 0;\n  switch (mode) {\n    case 'thumbs':\n      view = _pdf_sidebar.SidebarView.THUMBS;\n      break;\n    case 'bookmarks':\n    case 'outline':\n      view = _pdf_sidebar.SidebarView.OUTLINE;\n      break;\n    case 'attachments':\n      view = _pdf_sidebar.SidebarView.ATTACHMENTS;\n      break;\n    case 'none':\n      view = _pdf_sidebar.SidebarView.NONE;\n      break;\n    default:\n      console.error('Invalid \"pagemode\" hash parameter: ' + mode);\n      return;\n  }\n  PDFViewerApplication.pdfSidebar.switchView(view, true);\n}\nfunction webViewerNamedAction(evt) {\n  var action = evt.action;\n  switch (action) {\n    case 'GoToPage':\n      PDFViewerApplication.appConfig.toolbar.pageNumber.select();\n      break;\n    case 'Find':\n      if (!PDFViewerApplication.supportsIntegratedFind) {\n        PDFViewerApplication.findBar.toggle();\n      }\n      break;\n  }\n}\nfunction webViewerPresentationModeChanged(evt) {\n  var active = evt.active,\n      switchInProgress = evt.switchInProgress;\n\n  PDFViewerApplication.pdfViewer.presentationModeState = switchInProgress ? _pdf_viewer.PresentationModeState.CHANGING : active ? _pdf_viewer.PresentationModeState.FULLSCREEN : _pdf_viewer.PresentationModeState.NORMAL;\n}\nfunction webViewerSidebarViewChanged(evt) {\n  PDFViewerApplication.pdfRenderingQueue.isThumbnailViewEnabled = PDFViewerApplication.pdfSidebar.isThumbnailViewVisible;\n  var store = PDFViewerApplication.store;\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    store.set('sidebarView', evt.view).catch(function () {});\n  }\n}\nfunction webViewerUpdateViewarea(evt) {\n  var location = evt.location,\n      store = PDFViewerApplication.store;\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    store.setMultiple({\n      'exists': true,\n      'page': location.pageNumber,\n      'zoom': location.scale,\n      'scrollLeft': location.left,\n      'scrollTop': location.top\n    }).catch(function () {});\n  }\n  var href = PDFViewerApplication.pdfLinkService.getAnchorUrl(location.pdfOpenParams);\n  PDFViewerApplication.appConfig.toolbar.viewBookmark.href = href;\n  PDFViewerApplication.appConfig.secondaryToolbar.viewBookmarkButton.href = href;\n  PDFViewerApplication.pdfHistory.updateCurrentBookmark(location.pdfOpenParams, location.pageNumber);\n  var currentPage = PDFViewerApplication.pdfViewer.getPageView(PDFViewerApplication.page - 1);\n  var loading = currentPage.renderingState !== _pdf_rendering_queue.RenderingStates.FINISHED;\n  PDFViewerApplication.toolbar.updateLoadingIndicatorState(loading);\n}\nfunction webViewerResize() {\n  var pdfDocument = PDFViewerApplication.pdfDocument,\n      pdfViewer = PDFViewerApplication.pdfViewer;\n\n  if (!pdfDocument) {\n    return;\n  }\n  var currentScaleValue = pdfViewer.currentScaleValue;\n  if (currentScaleValue === 'auto' || currentScaleValue === 'page-fit' || currentScaleValue === 'page-width') {\n    pdfViewer.currentScaleValue = currentScaleValue;\n  }\n  pdfViewer.update();\n}\nfunction webViewerHashchange(evt) {\n  if (PDFViewerApplication.pdfHistory.isHashChangeUnlocked) {\n    var hash = evt.hash;\n    if (!hash) {\n      return;\n    }\n    if (!PDFViewerApplication.isInitialViewSet) {\n      PDFViewerApplication.initialBookmark = hash;\n    } else {\n      PDFViewerApplication.pdfLinkService.setHash(hash);\n    }\n  }\n}\nvar webViewerFileInputChange = void 0;\n{\n  webViewerFileInputChange = function webViewerFileInputChange(evt) {\n    var file = evt.fileInput.files[0];\n    if (!_pdfjsLib.PDFJS.disableCreateObjectURL && URL.createObjectURL) {\n      PDFViewerApplication.open(URL.createObjectURL(file));\n    } else {\n      var fileReader = new FileReader();\n      fileReader.onload = function webViewerChangeFileReaderOnload(evt) {\n        var buffer = evt.target.result;\n        PDFViewerApplication.open(new Uint8Array(buffer));\n      };\n      fileReader.readAsArrayBuffer(file);\n    }\n    PDFViewerApplication.setTitleUsingUrl(file.name);\n    var appConfig = PDFViewerApplication.appConfig;\n    appConfig.toolbar.viewBookmark.setAttribute('hidden', 'true');\n    appConfig.secondaryToolbar.viewBookmarkButton.setAttribute('hidden', 'true');\n    appConfig.toolbar.download.setAttribute('hidden', 'true');\n    appConfig.secondaryToolbar.downloadButton.setAttribute('hidden', 'true');\n  };\n}\nfunction webViewerPresentationMode() {\n  PDFViewerApplication.requestPresentationMode();\n}\nfunction webViewerOpenFile() {\n  var openFileInputName = PDFViewerApplication.appConfig.openFileInputName;\n  document.getElementById(openFileInputName).click();\n}\nfunction webViewerPrint() {\n  window.print();\n}\nfunction webViewerDownload() {\n  PDFViewerApplication.download();\n}\nfunction webViewerFirstPage() {\n  if (PDFViewerApplication.pdfDocument) {\n    PDFViewerApplication.page = 1;\n  }\n}\nfunction webViewerLastPage() {\n  if (PDFViewerApplication.pdfDocument) {\n    PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n  }\n}\nfunction webViewerNextPage() {\n  PDFViewerApplication.page++;\n}\nfunction webViewerPreviousPage() {\n  PDFViewerApplication.page--;\n}\nfunction webViewerZoomIn() {\n  PDFViewerApplication.zoomIn();\n}\nfunction webViewerZoomOut() {\n  PDFViewerApplication.zoomOut();\n}\nfunction webViewerPageNumberChanged(evt) {\n  var pdfViewer = PDFViewerApplication.pdfViewer;\n  pdfViewer.currentPageLabel = evt.value;\n  if (evt.value !== pdfViewer.currentPageNumber.toString() && evt.value !== pdfViewer.currentPageLabel) {\n    PDFViewerApplication.toolbar.setPageNumber(pdfViewer.currentPageNumber, pdfViewer.currentPageLabel);\n  }\n}\nfunction webViewerScaleChanged(evt) {\n  PDFViewerApplication.pdfViewer.currentScaleValue = evt.value;\n}\nfunction webViewerRotateCw() {\n  PDFViewerApplication.rotatePages(90);\n}\nfunction webViewerRotateCcw() {\n  PDFViewerApplication.rotatePages(-90);\n}\nfunction webViewerDocumentProperties() {\n  PDFViewerApplication.pdfDocumentProperties.open();\n}\nfunction webViewerFind(evt) {\n  PDFViewerApplication.findController.executeCommand('find' + evt.type, {\n    query: evt.query,\n    phraseSearch: evt.phraseSearch,\n    caseSensitive: evt.caseSensitive,\n    highlightAll: evt.highlightAll,\n    findPrevious: evt.findPrevious\n  });\n}\nfunction webViewerFindFromUrlHash(evt) {\n  PDFViewerApplication.findController.executeCommand('find', {\n    query: evt.query,\n    phraseSearch: evt.phraseSearch,\n    caseSensitive: false,\n    highlightAll: true,\n    findPrevious: false\n  });\n}\nfunction webViewerScaleChanging(evt) {\n  PDFViewerApplication.toolbar.setPageScale(evt.presetValue, evt.scale);\n  PDFViewerApplication.pdfViewer.update();\n}\nfunction webViewerPageChanging(evt) {\n  var page = evt.pageNumber;\n  PDFViewerApplication.toolbar.setPageNumber(page, evt.pageLabel || null);\n  PDFViewerApplication.secondaryToolbar.setPageNumber(page);\n  if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) {\n    PDFViewerApplication.pdfThumbnailViewer.scrollThumbnailIntoView(page);\n  }\n  if (_pdfjsLib.PDFJS.pdfBug && Stats.enabled) {\n    var pageView = PDFViewerApplication.pdfViewer.getPageView(page - 1);\n    if (pageView.stats) {\n      Stats.add(page, pageView.stats);\n    }\n  }\n}\nvar zoomDisabled = false,\n    zoomDisabledTimeout = void 0;\nfunction webViewerWheel(evt) {\n  var pdfViewer = PDFViewerApplication.pdfViewer;\n  if (pdfViewer.isInPresentationMode) {\n    return;\n  }\n  if (evt.ctrlKey || evt.metaKey) {\n    var support = PDFViewerApplication.supportedMouseWheelZoomModifierKeys;\n    if (evt.ctrlKey && !support.ctrlKey || evt.metaKey && !support.metaKey) {\n      return;\n    }\n    evt.preventDefault();\n    if (zoomDisabled) {\n      return;\n    }\n    var previousScale = pdfViewer.currentScale;\n    var delta = (0, _ui_utils.normalizeWheelEventDelta)(evt);\n    var MOUSE_WHEEL_DELTA_PER_PAGE_SCALE = 3.0;\n    var ticks = delta * MOUSE_WHEEL_DELTA_PER_PAGE_SCALE;\n    if (ticks < 0) {\n      PDFViewerApplication.zoomOut(-ticks);\n    } else {\n      PDFViewerApplication.zoomIn(ticks);\n    }\n    var currentScale = pdfViewer.currentScale;\n    if (previousScale !== currentScale) {\n      var scaleCorrectionFactor = currentScale / previousScale - 1;\n      var rect = pdfViewer.container.getBoundingClientRect();\n      var dx = evt.clientX - rect.left;\n      var dy = evt.clientY - rect.top;\n      pdfViewer.container.scrollLeft += dx * scaleCorrectionFactor;\n      pdfViewer.container.scrollTop += dy * scaleCorrectionFactor;\n    }\n  } else {\n    zoomDisabled = true;\n    clearTimeout(zoomDisabledTimeout);\n    zoomDisabledTimeout = setTimeout(function () {\n      zoomDisabled = false;\n    }, 1000);\n  }\n}\nfunction webViewerClick(evt) {\n  if (!PDFViewerApplication.secondaryToolbar.isOpen) {\n    return;\n  }\n  var appConfig = PDFViewerApplication.appConfig;\n  if (PDFViewerApplication.pdfViewer.containsElement(evt.target) || appConfig.toolbar.container.contains(evt.target) && evt.target !== appConfig.secondaryToolbar.toggleButton) {\n    PDFViewerApplication.secondaryToolbar.close();\n  }\n}\nfunction webViewerKeyDown(evt) {\n  if (PDFViewerApplication.overlayManager.active) {\n    return;\n  }\n  var handled = false,\n      ensureViewerFocused = false;\n  var cmd = (evt.ctrlKey ? 1 : 0) | (evt.altKey ? 2 : 0) | (evt.shiftKey ? 4 : 0) | (evt.metaKey ? 8 : 0);\n  var pdfViewer = PDFViewerApplication.pdfViewer;\n  var isViewerInPresentationMode = pdfViewer && pdfViewer.isInPresentationMode;\n  if (cmd === 1 || cmd === 8 || cmd === 5 || cmd === 12) {\n    switch (evt.keyCode) {\n      case 70:\n        if (!PDFViewerApplication.supportsIntegratedFind) {\n          PDFViewerApplication.findBar.open();\n          handled = true;\n        }\n        break;\n      case 71:\n        if (!PDFViewerApplication.supportsIntegratedFind) {\n          var findState = PDFViewerApplication.findController.state;\n          if (findState) {\n            PDFViewerApplication.findController.executeCommand('findagain', {\n              query: findState.query,\n              phraseSearch: findState.phraseSearch,\n              caseSensitive: findState.caseSensitive,\n              highlightAll: findState.highlightAll,\n              findPrevious: cmd === 5 || cmd === 12\n            });\n          }\n          handled = true;\n        }\n        break;\n      case 61:\n      case 107:\n      case 187:\n      case 171:\n        if (!isViewerInPresentationMode) {\n          PDFViewerApplication.zoomIn();\n        }\n        handled = true;\n        break;\n      case 173:\n      case 109:\n      case 189:\n        if (!isViewerInPresentationMode) {\n          PDFViewerApplication.zoomOut();\n        }\n        handled = true;\n        break;\n      case 48:\n      case 96:\n        if (!isViewerInPresentationMode) {\n          setTimeout(function () {\n            pdfViewer.currentScaleValue = _ui_utils.DEFAULT_SCALE_VALUE;\n          });\n          handled = false;\n        }\n        break;\n      case 38:\n        if (isViewerInPresentationMode || PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page = 1;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n      case 40:\n        if (isViewerInPresentationMode || PDFViewerApplication.page < PDFViewerApplication.pagesCount) {\n          PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n    }\n  }\n  if (cmd === 1 || cmd === 8) {\n    switch (evt.keyCode) {\n      case 83:\n        PDFViewerApplication.download();\n        handled = true;\n        break;\n    }\n  }\n  if (cmd === 3 || cmd === 10) {\n    switch (evt.keyCode) {\n      case 80:\n        PDFViewerApplication.requestPresentationMode();\n        handled = true;\n        break;\n      case 71:\n        PDFViewerApplication.appConfig.toolbar.pageNumber.select();\n        handled = true;\n        break;\n    }\n  }\n  if (handled) {\n    if (ensureViewerFocused && !isViewerInPresentationMode) {\n      pdfViewer.focus();\n    }\n    evt.preventDefault();\n    return;\n  }\n  var curElement = document.activeElement || document.querySelector(':focus');\n  var curElementTagName = curElement && curElement.tagName.toUpperCase();\n  if (curElementTagName === 'INPUT' || curElementTagName === 'TEXTAREA' || curElementTagName === 'SELECT') {\n    if (evt.keyCode !== 27) {\n      return;\n    }\n  }\n  if (cmd === 0) {\n    switch (evt.keyCode) {\n      case 38:\n      case 33:\n      case 8:\n        if (!isViewerInPresentationMode && pdfViewer.currentScaleValue !== 'page-fit') {\n          break;\n        }\n      case 37:\n        if (pdfViewer.isHorizontalScrollbarEnabled) {\n          break;\n        }\n      case 75:\n      case 80:\n        if (PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page--;\n        }\n        handled = true;\n        break;\n      case 27:\n        if (PDFViewerApplication.secondaryToolbar.isOpen) {\n          PDFViewerApplication.secondaryToolbar.close();\n          handled = true;\n        }\n        if (!PDFViewerApplication.supportsIntegratedFind && PDFViewerApplication.findBar.opened) {\n          PDFViewerApplication.findBar.close();\n          handled = true;\n        }\n        break;\n      case 40:\n      case 34:\n      case 32:\n        if (!isViewerInPresentationMode && pdfViewer.currentScaleValue !== 'page-fit') {\n          break;\n        }\n      case 39:\n        if (pdfViewer.isHorizontalScrollbarEnabled) {\n          break;\n        }\n      case 74:\n      case 78:\n        if (PDFViewerApplication.page < PDFViewerApplication.pagesCount) {\n          PDFViewerApplication.page++;\n        }\n        handled = true;\n        break;\n      case 36:\n        if (isViewerInPresentationMode || PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page = 1;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n      case 35:\n        if (isViewerInPresentationMode || PDFViewerApplication.page < PDFViewerApplication.pagesCount) {\n          PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n      case 83:\n        PDFViewerApplication.pdfCursorTools.switchTool(_pdf_cursor_tools.CursorTool.SELECT);\n        break;\n      case 72:\n        PDFViewerApplication.pdfCursorTools.switchTool(_pdf_cursor_tools.CursorTool.HAND);\n        break;\n      case 82:\n        PDFViewerApplication.rotatePages(90);\n        break;\n    }\n  }\n  if (cmd === 4) {\n    switch (evt.keyCode) {\n      case 32:\n        if (!isViewerInPresentationMode && pdfViewer.currentScaleValue !== 'page-fit') {\n          break;\n        }\n        if (PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page--;\n        }\n        handled = true;\n        break;\n      case 82:\n        PDFViewerApplication.rotatePages(-90);\n        break;\n    }\n  }\n  if (!handled && !isViewerInPresentationMode) {\n    if (evt.keyCode >= 33 && evt.keyCode <= 40 || evt.keyCode === 32 && curElementTagName !== 'BUTTON') {\n      ensureViewerFocused = true;\n    }\n  }\n  if (cmd === 2) {\n    switch (evt.keyCode) {\n      case 37:\n        if (isViewerInPresentationMode) {\n          PDFViewerApplication.pdfHistory.back();\n          handled = true;\n        }\n        break;\n      case 39:\n        if (isViewerInPresentationMode) {\n          PDFViewerApplication.pdfHistory.forward();\n          handled = true;\n        }\n        break;\n    }\n  }\n  if (ensureViewerFocused && !pdfViewer.containsElement(curElement)) {\n    pdfViewer.focus();\n  }\n  if (handled) {\n    evt.preventDefault();\n  }\n}\nfunction apiPageModeToSidebarView(mode) {\n  switch (mode) {\n    case 'UseNone':\n      return _pdf_sidebar.SidebarView.NONE;\n    case 'UseThumbs':\n      return _pdf_sidebar.SidebarView.THUMBS;\n    case 'UseOutlines':\n      return _pdf_sidebar.SidebarView.OUTLINE;\n    case 'UseAttachments':\n      return _pdf_sidebar.SidebarView.ATTACHMENTS;\n    case 'UseOC':\n  }\n  return _pdf_sidebar.SidebarView.NONE;\n}\nvar PDFPrintServiceFactory = {\n  instance: {\n    supportsPrinting: false,\n    createPrintService: function createPrintService() {\n      throw new Error('Not implemented: createPrintService');\n    }\n  }\n};\nexports.PDFViewerApplication = PDFViewerApplication;\nexports.DefaultExternalServices = DefaultExternalServices;\nexports.PDFPrintServiceFactory = PDFPrintServiceFactory;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SimpleLinkService = exports.PDFLinkService = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dom_events = __webpack_require__(2);\n\nvar _ui_utils = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PDFLinkService = function () {\n  function PDFLinkService() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        eventBus = _ref.eventBus;\n\n    _classCallCheck(this, PDFLinkService);\n\n    this.eventBus = eventBus || (0, _dom_events.getGlobalEventBus)();\n    this.baseUrl = null;\n    this.pdfDocument = null;\n    this.pdfViewer = null;\n    this.pdfHistory = null;\n    this._pagesRefCache = null;\n  }\n\n  _createClass(PDFLinkService, [{\n    key: 'setDocument',\n    value: function setDocument(pdfDocument, baseUrl) {\n      this.baseUrl = baseUrl;\n      this.pdfDocument = pdfDocument;\n      this._pagesRefCache = Object.create(null);\n    }\n  }, {\n    key: 'setViewer',\n    value: function setViewer(pdfViewer) {\n      this.pdfViewer = pdfViewer;\n    }\n  }, {\n    key: 'setHistory',\n    value: function setHistory(pdfHistory) {\n      this.pdfHistory = pdfHistory;\n    }\n  }, {\n    key: 'navigateTo',\n    value: function navigateTo(dest) {\n      var _this = this;\n\n      var goToDestination = function goToDestination(_ref2) {\n        var namedDest = _ref2.namedDest,\n            explicitDest = _ref2.explicitDest;\n\n        var destRef = explicitDest[0],\n            pageNumber = void 0;\n        if (destRef instanceof Object) {\n          pageNumber = _this._cachedPageNumber(destRef);\n          if (pageNumber === null) {\n            _this.pdfDocument.getPageIndex(destRef).then(function (pageIndex) {\n              _this.cachePageRef(pageIndex + 1, destRef);\n              goToDestination({\n                namedDest: namedDest,\n                explicitDest: explicitDest\n              });\n            }).catch(function () {\n              console.error('PDFLinkService.navigateTo: \"' + destRef + '\" is not ' + ('a valid page reference, for dest=\"' + dest + '\".'));\n            });\n            return;\n          }\n        } else if ((destRef | 0) === destRef) {\n          pageNumber = destRef + 1;\n        } else {\n          console.error('PDFLinkService.navigateTo: \"' + destRef + '\" is not ' + ('a valid destination reference, for dest=\"' + dest + '\".'));\n          return;\n        }\n        if (!pageNumber || pageNumber < 1 || pageNumber > _this.pagesCount) {\n          console.error('PDFLinkService.navigateTo: \"' + pageNumber + '\" is not ' + ('a valid page number, for dest=\"' + dest + '\".'));\n          return;\n        }\n        _this.pdfViewer.scrollPageIntoView({\n          pageNumber: pageNumber,\n          destArray: explicitDest\n        });\n        if (_this.pdfHistory) {\n          _this.pdfHistory.push({\n            dest: explicitDest,\n            hash: namedDest,\n            page: pageNumber\n          });\n        }\n      };\n      new Promise(function (resolve, reject) {\n        if (typeof dest === 'string') {\n          _this.pdfDocument.getDestination(dest).then(function (destArray) {\n            resolve({\n              namedDest: dest,\n              explicitDest: destArray\n            });\n          });\n          return;\n        }\n        resolve({\n          namedDest: '',\n          explicitDest: dest\n        });\n      }).then(function (data) {\n        if (!(data.explicitDest instanceof Array)) {\n          console.error('PDFLinkService.navigateTo: \"' + data.explicitDest + '\" is' + (' not a valid destination array, for dest=\"' + dest + '\".'));\n          return;\n        }\n        goToDestination(data);\n      });\n    }\n  }, {\n    key: 'getDestinationHash',\n    value: function getDestinationHash(dest) {\n      if (typeof dest === 'string') {\n        return this.getAnchorUrl('#' + escape(dest));\n      }\n      if (dest instanceof Array) {\n        var str = JSON.stringify(dest);\n        return this.getAnchorUrl('#' + escape(str));\n      }\n      return this.getAnchorUrl('');\n    }\n  }, {\n    key: 'getAnchorUrl',\n    value: function getAnchorUrl(anchor) {\n      return (this.baseUrl || '') + anchor;\n    }\n  }, {\n    key: 'setHash',\n    value: function setHash(hash) {\n      var pageNumber = void 0,\n          dest = void 0;\n      if (hash.indexOf('=') >= 0) {\n        var params = (0, _ui_utils.parseQueryString)(hash);\n        if ('search' in params) {\n          this.eventBus.dispatch('findfromurlhash', {\n            source: this,\n            query: params['search'].replace(/\"/g, ''),\n            phraseSearch: params['phrase'] === 'true'\n          });\n        }\n        if ('nameddest' in params) {\n          if (this.pdfHistory) {\n            this.pdfHistory.updateNextHashParam(params.nameddest);\n          }\n          this.navigateTo(params.nameddest);\n          return;\n        }\n        if ('page' in params) {\n          pageNumber = params.page | 0 || 1;\n        }\n        if ('zoom' in params) {\n          var zoomArgs = params.zoom.split(',');\n          var zoomArg = zoomArgs[0];\n          var zoomArgNumber = parseFloat(zoomArg);\n          if (zoomArg.indexOf('Fit') === -1) {\n            dest = [null, { name: 'XYZ' }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null, zoomArgs.length > 2 ? zoomArgs[2] | 0 : null, zoomArgNumber ? zoomArgNumber / 100 : zoomArg];\n          } else {\n            if (zoomArg === 'Fit' || zoomArg === 'FitB') {\n              dest = [null, { name: zoomArg }];\n            } else if (zoomArg === 'FitH' || zoomArg === 'FitBH' || zoomArg === 'FitV' || zoomArg === 'FitBV') {\n              dest = [null, { name: zoomArg }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null];\n            } else if (zoomArg === 'FitR') {\n              if (zoomArgs.length !== 5) {\n                console.error('PDFLinkService.setHash: Not enough parameters for \"FitR\".');\n              } else {\n                dest = [null, { name: zoomArg }, zoomArgs[1] | 0, zoomArgs[2] | 0, zoomArgs[3] | 0, zoomArgs[4] | 0];\n              }\n            } else {\n              console.error('PDFLinkService.setHash: \"' + zoomArg + '\" is not ' + 'a valid zoom value.');\n            }\n          }\n        }\n        if (dest) {\n          this.pdfViewer.scrollPageIntoView({\n            pageNumber: pageNumber || this.page,\n            destArray: dest,\n            allowNegativeOffset: true\n          });\n        } else if (pageNumber) {\n          this.page = pageNumber;\n        }\n        if ('pagemode' in params) {\n          this.eventBus.dispatch('pagemode', {\n            source: this,\n            mode: params.pagemode\n          });\n        }\n      } else {\n        if (/^\\d+$/.test(hash) && hash <= this.pagesCount) {\n          console.warn('PDFLinkService_setHash: specifying a page number ' + 'directly after the hash symbol (#) is deprecated, ' + ('please use the \"#page=' + hash + '\" form instead.'));\n          this.page = hash | 0;\n        }\n        dest = unescape(hash);\n        try {\n          dest = JSON.parse(dest);\n          if (!(dest instanceof Array)) {\n            dest = dest.toString();\n          }\n        } catch (ex) {}\n        if (typeof dest === 'string' || isValidExplicitDestination(dest)) {\n          if (this.pdfHistory) {\n            this.pdfHistory.updateNextHashParam(dest);\n          }\n          this.navigateTo(dest);\n          return;\n        }\n        console.error('PDFLinkService.setHash: \"' + unescape(hash) + '\" is not ' + 'a valid destination.');\n      }\n    }\n  }, {\n    key: 'executeNamedAction',\n    value: function executeNamedAction(action) {\n      switch (action) {\n        case 'GoBack':\n          if (this.pdfHistory) {\n            this.pdfHistory.back();\n          }\n          break;\n        case 'GoForward':\n          if (this.pdfHistory) {\n            this.pdfHistory.forward();\n          }\n          break;\n        case 'NextPage':\n          if (this.page < this.pagesCount) {\n            this.page++;\n          }\n          break;\n        case 'PrevPage':\n          if (this.page > 1) {\n            this.page--;\n          }\n          break;\n        case 'LastPage':\n          this.page = this.pagesCount;\n          break;\n        case 'FirstPage':\n          this.page = 1;\n          break;\n        default:\n          break;\n      }\n      this.eventBus.dispatch('namedaction', {\n        source: this,\n        action: action\n      });\n    }\n  }, {\n    key: 'onFileAttachmentAnnotation',\n    value: function onFileAttachmentAnnotation(_ref3) {\n      var id = _ref3.id,\n          filename = _ref3.filename,\n          content = _ref3.content;\n\n      this.eventBus.dispatch('fileattachmentannotation', {\n        source: this,\n        id: id,\n        filename: filename,\n        content: content\n      });\n    }\n  }, {\n    key: 'cachePageRef',\n    value: function cachePageRef(pageNum, pageRef) {\n      var refStr = pageRef.num + ' ' + pageRef.gen + ' R';\n      this._pagesRefCache[refStr] = pageNum;\n    }\n  }, {\n    key: '_cachedPageNumber',\n    value: function _cachedPageNumber(pageRef) {\n      var refStr = pageRef.num + ' ' + pageRef.gen + ' R';\n      return this._pagesRefCache && this._pagesRefCache[refStr] || null;\n    }\n  }, {\n    key: 'pagesCount',\n    get: function get() {\n      return this.pdfDocument ? this.pdfDocument.numPages : 0;\n    }\n  }, {\n    key: 'page',\n    get: function get() {\n      return this.pdfViewer.currentPageNumber;\n    },\n    set: function set(value) {\n      this.pdfViewer.currentPageNumber = value;\n    }\n  }]);\n\n  return PDFLinkService;\n}();\n\nfunction isValidExplicitDestination(dest) {\n  if (!(dest instanceof Array)) {\n    return false;\n  }\n  var destLength = dest.length,\n      allowNull = true;\n  if (destLength < 2) {\n    return false;\n  }\n  var page = dest[0];\n  if (!((typeof page === 'undefined' ? 'undefined' : _typeof(page)) === 'object' && typeof page.num === 'number' && (page.num | 0) === page.num && typeof page.gen === 'number' && (page.gen | 0) === page.gen) && !(typeof page === 'number' && (page | 0) === page && page >= 0)) {\n    return false;\n  }\n  var zoom = dest[1];\n  if (!((typeof zoom === 'undefined' ? 'undefined' : _typeof(zoom)) === 'object' && typeof zoom.name === 'string')) {\n    return false;\n  }\n  switch (zoom.name) {\n    case 'XYZ':\n      if (destLength !== 5) {\n        return false;\n      }\n      break;\n    case 'Fit':\n    case 'FitB':\n      return destLength === 2;\n    case 'FitH':\n    case 'FitBH':\n    case 'FitV':\n    case 'FitBV':\n      if (destLength !== 3) {\n        return false;\n      }\n      break;\n    case 'FitR':\n      if (destLength !== 6) {\n        return false;\n      }\n      allowNull = false;\n      break;\n    default:\n      return false;\n  }\n  for (var i = 2; i < destLength; i++) {\n    var param = dest[i];\n    if (!(typeof param === 'number' || allowNull && param === null)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvar SimpleLinkService = function () {\n  function SimpleLinkService() {\n    _classCallCheck(this, SimpleLinkService);\n  }\n\n  _createClass(SimpleLinkService, [{\n    key: 'navigateTo',\n    value: function navigateTo(dest) {}\n  }, {\n    key: 'getDestinationHash',\n    value: function getDestinationHash(dest) {\n      return '#';\n    }\n  }, {\n    key: 'getAnchorUrl',\n    value: function getAnchorUrl(hash) {\n      return '#';\n    }\n  }, {\n    key: 'setHash',\n    value: function setHash(hash) {}\n  }, {\n    key: 'executeNamedAction',\n    value: function executeNamedAction(action) {}\n  }, {\n    key: 'onFileAttachmentAnnotation',\n    value: function onFileAttachmentAnnotation(_ref4) {\n      var id = _ref4.id,\n          filename = _ref4.filename,\n          content = _ref4.content;\n    }\n  }, {\n    key: 'cachePageRef',\n    value: function cachePageRef(pageNum, pageRef) {}\n  }, {\n    key: 'page',\n    get: function get() {\n      return 0;\n    },\n    set: function set(value) {}\n  }]);\n\n  return SimpleLinkService;\n}();\n\nexports.PDFLinkService = PDFLinkService;\nexports.SimpleLinkService = SimpleLinkService;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFCursorTools = exports.CursorTool = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _grab_to_pan = __webpack_require__(14);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar CursorTool = {\n  SELECT: 0,\n  HAND: 1,\n  ZOOM: 2\n};\n\nvar PDFCursorTools = function () {\n  function PDFCursorTools(_ref) {\n    var _this = this;\n\n    var container = _ref.container,\n        eventBus = _ref.eventBus,\n        preferences = _ref.preferences;\n\n    _classCallCheck(this, PDFCursorTools);\n\n    this.container = container;\n    this.eventBus = eventBus;\n    this.active = CursorTool.SELECT;\n    this.activeBeforePresentationMode = null;\n    this.handTool = new _grab_to_pan.GrabToPan({ element: this.container });\n    this._addEventListeners();\n    Promise.all([preferences.get('cursorToolOnLoad'), preferences.get('enableHandToolOnLoad')]).then(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          cursorToolPref = _ref3[0],\n          handToolPref = _ref3[1];\n\n      if (handToolPref === true) {\n        preferences.set('enableHandToolOnLoad', false);\n        if (cursorToolPref === CursorTool.SELECT) {\n          cursorToolPref = CursorTool.HAND;\n          preferences.set('cursorToolOnLoad', cursorToolPref).catch(function () {});\n        }\n      }\n      _this.switchTool(cursorToolPref);\n    }).catch(function () {});\n  }\n\n  _createClass(PDFCursorTools, [{\n    key: 'switchTool',\n    value: function switchTool(tool) {\n      var _this2 = this;\n\n      if (this.activeBeforePresentationMode !== null) {\n        return;\n      }\n      if (tool === this.active) {\n        return;\n      }\n      var disableActiveTool = function disableActiveTool() {\n        switch (_this2.active) {\n          case CursorTool.SELECT:\n            break;\n          case CursorTool.HAND:\n            _this2.handTool.deactivate();\n            break;\n          case CursorTool.ZOOM:\n        }\n      };\n      switch (tool) {\n        case CursorTool.SELECT:\n          disableActiveTool();\n          break;\n        case CursorTool.HAND:\n          disableActiveTool();\n          this.handTool.activate();\n          break;\n        case CursorTool.ZOOM:\n        default:\n          console.error('switchTool: \"' + tool + '\" is an unsupported value.');\n          return;\n      }\n      this.active = tool;\n      this._dispatchEvent();\n    }\n  }, {\n    key: '_dispatchEvent',\n    value: function _dispatchEvent() {\n      this.eventBus.dispatch('cursortoolchanged', {\n        source: this,\n        tool: this.active\n      });\n    }\n  }, {\n    key: '_addEventListeners',\n    value: function _addEventListeners() {\n      var _this3 = this;\n\n      this.eventBus.on('switchcursortool', function (evt) {\n        _this3.switchTool(evt.tool);\n      });\n      this.eventBus.on('presentationmodechanged', function (evt) {\n        if (evt.switchInProgress) {\n          return;\n        }\n        var previouslyActive = void 0;\n        if (evt.active) {\n          previouslyActive = _this3.active;\n          _this3.switchTool(CursorTool.SELECT);\n          _this3.activeBeforePresentationMode = previouslyActive;\n        } else {\n          previouslyActive = _this3.activeBeforePresentationMode;\n          _this3.activeBeforePresentationMode = null;\n          _this3.switchTool(previouslyActive);\n        }\n      });\n    }\n  }, {\n    key: 'activeTool',\n    get: function get() {\n      return this.active;\n    }\n  }]);\n\n  return PDFCursorTools;\n}();\n\nexports.CursorTool = CursorTool;\nexports.PDFCursorTools = PDFCursorTools;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFFindController = exports.FindState = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _pdfjsLib = __webpack_require__(1);\n\nvar _ui_utils = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FindState = {\n  FOUND: 0,\n  NOT_FOUND: 1,\n  WRAPPED: 2,\n  PENDING: 3\n};\nvar FIND_SCROLL_OFFSET_TOP = -50;\nvar FIND_SCROLL_OFFSET_LEFT = -400;\nvar FIND_TIMEOUT = 250;\nvar CHARACTERS_TO_NORMALIZE = {\n  '\\u2018': '\\'',\n  '\\u2019': '\\'',\n  '\\u201A': '\\'',\n  '\\u201B': '\\'',\n  '\\u201C': '\"',\n  '\\u201D': '\"',\n  '\\u201E': '\"',\n  '\\u201F': '\"',\n  '\\xBC': '1/4',\n  '\\xBD': '1/2',\n  '\\xBE': '3/4'\n};\n\nvar PDFFindController = function () {\n  function PDFFindController(_ref) {\n    var pdfViewer = _ref.pdfViewer;\n\n    _classCallCheck(this, PDFFindController);\n\n    this.pdfViewer = pdfViewer;\n    this.onUpdateResultsCount = null;\n    this.onUpdateState = null;\n    this.reset();\n    var replace = Object.keys(CHARACTERS_TO_NORMALIZE).join('');\n    this.normalizationRegex = new RegExp('[' + replace + ']', 'g');\n  }\n\n  _createClass(PDFFindController, [{\n    key: 'reset',\n    value: function reset() {\n      var _this = this;\n\n      this.startedTextExtraction = false;\n      this.extractTextPromises = [];\n      this.pendingFindMatches = Object.create(null);\n      this.active = false;\n      this.pageContents = [];\n      this.pageMatches = [];\n      this.pageMatchesLength = null;\n      this.matchCount = 0;\n      this.selected = {\n        pageIdx: -1,\n        matchIdx: -1\n      };\n      this.offset = {\n        pageIdx: null,\n        matchIdx: null\n      };\n      this.pagesToSearch = null;\n      this.resumePageIdx = null;\n      this.state = null;\n      this.dirtyMatch = false;\n      this.findTimeout = null;\n      this._firstPagePromise = new Promise(function (resolve) {\n        _this.resolveFirstPage = resolve;\n      });\n    }\n  }, {\n    key: 'normalize',\n    value: function normalize(text) {\n      return text.replace(this.normalizationRegex, function (ch) {\n        return CHARACTERS_TO_NORMALIZE[ch];\n      });\n    }\n  }, {\n    key: '_prepareMatches',\n    value: function _prepareMatches(matchesWithLength, matches, matchesLength) {\n      function isSubTerm(matchesWithLength, currentIndex) {\n        var currentElem = matchesWithLength[currentIndex];\n        var nextElem = matchesWithLength[currentIndex + 1];\n        if (currentIndex < matchesWithLength.length - 1 && currentElem.match === nextElem.match) {\n          currentElem.skipped = true;\n          return true;\n        }\n        for (var i = currentIndex - 1; i >= 0; i--) {\n          var prevElem = matchesWithLength[i];\n          if (prevElem.skipped) {\n            continue;\n          }\n          if (prevElem.match + prevElem.matchLength < currentElem.match) {\n            break;\n          }\n          if (prevElem.match + prevElem.matchLength >= currentElem.match + currentElem.matchLength) {\n            currentElem.skipped = true;\n            return true;\n          }\n        }\n        return false;\n      }\n      matchesWithLength.sort(function (a, b) {\n        return a.match === b.match ? a.matchLength - b.matchLength : a.match - b.match;\n      });\n      for (var i = 0, len = matchesWithLength.length; i < len; i++) {\n        if (isSubTerm(matchesWithLength, i)) {\n          continue;\n        }\n        matches.push(matchesWithLength[i].match);\n        matchesLength.push(matchesWithLength[i].matchLength);\n      }\n    }\n  }, {\n    key: 'calcFindPhraseMatch',\n    value: function calcFindPhraseMatch(query, pageIndex, pageContent) {\n      var matches = [];\n      var queryLen = query.length;\n      var matchIdx = -queryLen;\n      while (true) {\n        matchIdx = pageContent.indexOf(query, matchIdx + queryLen);\n        if (matchIdx === -1) {\n          break;\n        }\n        matches.push(matchIdx);\n      }\n      this.pageMatches[pageIndex] = matches;\n    }\n  }, {\n    key: 'calcFindWordMatch',\n    value: function calcFindWordMatch(query, pageIndex, pageContent) {\n      var matchesWithLength = [];\n      var queryArray = query.match(/\\S+/g);\n      for (var i = 0, len = queryArray.length; i < len; i++) {\n        var subquery = queryArray[i];\n        var subqueryLen = subquery.length;\n        var matchIdx = -subqueryLen;\n        while (true) {\n          matchIdx = pageContent.indexOf(subquery, matchIdx + subqueryLen);\n          if (matchIdx === -1) {\n            break;\n          }\n          matchesWithLength.push({\n            match: matchIdx,\n            matchLength: subqueryLen,\n            skipped: false\n          });\n        }\n      }\n      if (!this.pageMatchesLength) {\n        this.pageMatchesLength = [];\n      }\n      this.pageMatchesLength[pageIndex] = [];\n      this.pageMatches[pageIndex] = [];\n      this._prepareMatches(matchesWithLength, this.pageMatches[pageIndex], this.pageMatchesLength[pageIndex]);\n    }\n  }, {\n    key: 'calcFindMatch',\n    value: function calcFindMatch(pageIndex) {\n      var pageContent = this.normalize(this.pageContents[pageIndex]);\n      var query = this.normalize(this.state.query);\n      var caseSensitive = this.state.caseSensitive;\n      var phraseSearch = this.state.phraseSearch;\n      var queryLen = query.length;\n      if (queryLen === 0) {\n        return;\n      }\n      if (!caseSensitive) {\n        pageContent = pageContent.toLowerCase();\n        query = query.toLowerCase();\n      }\n      if (phraseSearch) {\n        this.calcFindPhraseMatch(query, pageIndex, pageContent);\n      } else {\n        this.calcFindWordMatch(query, pageIndex, pageContent);\n      }\n      this.updatePage(pageIndex);\n      if (this.resumePageIdx === pageIndex) {\n        this.resumePageIdx = null;\n        this.nextPageMatch();\n      }\n      if (this.pageMatches[pageIndex].length > 0) {\n        this.matchCount += this.pageMatches[pageIndex].length;\n        this.updateUIResultsCount();\n      }\n    }\n  }, {\n    key: 'extractText',\n    value: function extractText() {\n      var _this2 = this;\n\n      if (this.startedTextExtraction) {\n        return;\n      }\n      this.startedTextExtraction = true;\n      this.pageContents.length = 0;\n      var promise = Promise.resolve();\n\n      var _loop = function _loop(i, ii) {\n        var extractTextCapability = (0, _pdfjsLib.createPromiseCapability)();\n        _this2.extractTextPromises[i] = extractTextCapability.promise;\n        promise = promise.then(function () {\n          return _this2.pdfViewer.getPageTextContent(i).then(function (textContent) {\n            var textItems = textContent.items;\n            var strBuf = [];\n            for (var j = 0, jj = textItems.length; j < jj; j++) {\n              strBuf.push(textItems[j].str);\n            }\n            _this2.pageContents[i] = strBuf.join('');\n            extractTextCapability.resolve(i);\n          }, function (reason) {\n            console.error('Unable to get page ' + (i + 1) + ' text content', reason);\n            _this2.pageContents[i] = '';\n            extractTextCapability.resolve(i);\n          });\n        });\n      };\n\n      for (var i = 0, ii = this.pdfViewer.pagesCount; i < ii; i++) {\n        _loop(i, ii);\n      }\n    }\n  }, {\n    key: 'executeCommand',\n    value: function executeCommand(cmd, state) {\n      var _this3 = this;\n\n      if (this.state === null || cmd !== 'findagain') {\n        this.dirtyMatch = true;\n      }\n      this.state = state;\n      this.updateUIState(FindState.PENDING);\n      this._firstPagePromise.then(function () {\n        _this3.extractText();\n        clearTimeout(_this3.findTimeout);\n        if (cmd === 'find') {\n          _this3.findTimeout = setTimeout(_this3.nextMatch.bind(_this3), FIND_TIMEOUT);\n        } else {\n          _this3.nextMatch();\n        }\n      });\n    }\n  }, {\n    key: 'updatePage',\n    value: function updatePage(index) {\n      if (this.selected.pageIdx === index) {\n        this.pdfViewer.currentPageNumber = index + 1;\n      }\n      var page = this.pdfViewer.getPageView(index);\n      if (page.textLayer) {\n        page.textLayer.updateMatches();\n      }\n    }\n  }, {\n    key: 'nextMatch',\n    value: function nextMatch() {\n      var _this4 = this;\n\n      var previous = this.state.findPrevious;\n      var currentPageIndex = this.pdfViewer.currentPageNumber - 1;\n      var numPages = this.pdfViewer.pagesCount;\n      this.active = true;\n      if (this.dirtyMatch) {\n        this.dirtyMatch = false;\n        this.selected.pageIdx = this.selected.matchIdx = -1;\n        this.offset.pageIdx = currentPageIndex;\n        this.offset.matchIdx = null;\n        this.hadMatch = false;\n        this.resumePageIdx = null;\n        this.pageMatches = [];\n        this.matchCount = 0;\n        this.pageMatchesLength = null;\n        for (var i = 0; i < numPages; i++) {\n          this.updatePage(i);\n          if (!(i in this.pendingFindMatches)) {\n            this.pendingFindMatches[i] = true;\n            this.extractTextPromises[i].then(function (pageIdx) {\n              delete _this4.pendingFindMatches[pageIdx];\n              _this4.calcFindMatch(pageIdx);\n            });\n          }\n        }\n      }\n      if (this.state.query === '') {\n        this.updateUIState(FindState.FOUND);\n        return;\n      }\n      if (this.resumePageIdx) {\n        return;\n      }\n      var offset = this.offset;\n      this.pagesToSearch = numPages;\n      if (offset.matchIdx !== null) {\n        var numPageMatches = this.pageMatches[offset.pageIdx].length;\n        if (!previous && offset.matchIdx + 1 < numPageMatches || previous && offset.matchIdx > 0) {\n          this.hadMatch = true;\n          offset.matchIdx = previous ? offset.matchIdx - 1 : offset.matchIdx + 1;\n          this.updateMatch(true);\n          return;\n        }\n        this.advanceOffsetPage(previous);\n      }\n      this.nextPageMatch();\n    }\n  }, {\n    key: 'matchesReady',\n    value: function matchesReady(matches) {\n      var offset = this.offset;\n      var numMatches = matches.length;\n      var previous = this.state.findPrevious;\n      if (numMatches) {\n        this.hadMatch = true;\n        offset.matchIdx = previous ? numMatches - 1 : 0;\n        this.updateMatch(true);\n        return true;\n      }\n      this.advanceOffsetPage(previous);\n      if (offset.wrapped) {\n        offset.matchIdx = null;\n        if (this.pagesToSearch < 0) {\n          this.updateMatch(false);\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: 'updateMatchPosition',\n    value: function updateMatchPosition(pageIndex, matchIndex, elements, beginIdx) {\n      if (this.selected.matchIdx === matchIndex && this.selected.pageIdx === pageIndex) {\n        var spot = {\n          top: FIND_SCROLL_OFFSET_TOP,\n          left: FIND_SCROLL_OFFSET_LEFT\n        };\n        (0, _ui_utils.scrollIntoView)(elements[beginIdx], spot, true);\n      }\n    }\n  }, {\n    key: 'nextPageMatch',\n    value: function nextPageMatch() {\n      if (this.resumePageIdx !== null) {\n        console.error('There can only be one pending page.');\n      }\n      var matches = null;\n      do {\n        var pageIdx = this.offset.pageIdx;\n        matches = this.pageMatches[pageIdx];\n        if (!matches) {\n          this.resumePageIdx = pageIdx;\n          break;\n        }\n      } while (!this.matchesReady(matches));\n    }\n  }, {\n    key: 'advanceOffsetPage',\n    value: function advanceOffsetPage(previous) {\n      var offset = this.offset;\n      var numPages = this.extractTextPromises.length;\n      offset.pageIdx = previous ? offset.pageIdx - 1 : offset.pageIdx + 1;\n      offset.matchIdx = null;\n      this.pagesToSearch--;\n      if (offset.pageIdx >= numPages || offset.pageIdx < 0) {\n        offset.pageIdx = previous ? numPages - 1 : 0;\n        offset.wrapped = true;\n      }\n    }\n  }, {\n    key: 'updateMatch',\n    value: function updateMatch() {\n      var found = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var state = FindState.NOT_FOUND;\n      var wrapped = this.offset.wrapped;\n      this.offset.wrapped = false;\n      if (found) {\n        var previousPage = this.selected.pageIdx;\n        this.selected.pageIdx = this.offset.pageIdx;\n        this.selected.matchIdx = this.offset.matchIdx;\n        state = wrapped ? FindState.WRAPPED : FindState.FOUND;\n        if (previousPage !== -1 && previousPage !== this.selected.pageIdx) {\n          this.updatePage(previousPage);\n        }\n      }\n      this.updateUIState(state, this.state.findPrevious);\n      if (this.selected.pageIdx !== -1) {\n        this.updatePage(this.selected.pageIdx);\n      }\n    }\n  }, {\n    key: 'updateUIResultsCount',\n    value: function updateUIResultsCount() {\n      if (this.onUpdateResultsCount) {\n        this.onUpdateResultsCount(this.matchCount);\n      }\n    }\n  }, {\n    key: 'updateUIState',\n    value: function updateUIState(state, previous) {\n      if (this.onUpdateState) {\n        this.onUpdateState(state, previous, this.matchCount);\n      }\n    }\n  }]);\n\n  return PDFFindController;\n}();\n\nexports.FindState = FindState;\nexports.PDFFindController = PDFFindController;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GenericCom = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _app = __webpack_require__(4);\n\nvar _preferences = __webpack_require__(28);\n\nvar _download_manager = __webpack_require__(12);\n\nvar _genericl10n = __webpack_require__(13);\n\nvar _pdfjsLib = __webpack_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n;\nvar GenericCom = {};\n\nvar GenericPreferences = function (_BasePreferences) {\n  _inherits(GenericPreferences, _BasePreferences);\n\n  function GenericPreferences() {\n    _classCallCheck(this, GenericPreferences);\n\n    return _possibleConstructorReturn(this, (GenericPreferences.__proto__ || Object.getPrototypeOf(GenericPreferences)).apply(this, arguments));\n  }\n\n  _createClass(GenericPreferences, [{\n    key: '_writeToStorage',\n    value: function _writeToStorage(prefObj) {\n      return new Promise(function (resolve) {\n        localStorage.setItem('pdfjs.preferences', JSON.stringify(prefObj));\n        resolve();\n      });\n    }\n  }, {\n    key: '_readFromStorage',\n    value: function _readFromStorage(prefObj) {\n      return new Promise(function (resolve) {\n        var readPrefs = JSON.parse(localStorage.getItem('pdfjs.preferences'));\n        resolve(readPrefs);\n      });\n    }\n  }]);\n\n  return GenericPreferences;\n}(_preferences.BasePreferences);\n\nvar GenericExternalServices = Object.create(_app.DefaultExternalServices);\nGenericExternalServices.createDownloadManager = function () {\n  return new _download_manager.DownloadManager();\n};\nGenericExternalServices.createPreferences = function () {\n  return new GenericPreferences();\n};\nGenericExternalServices.createL10n = function () {\n  return new _genericl10n.GenericL10n(_pdfjsLib.PDFJS.locale);\n};\n_app.PDFViewerApplication.externalServices = GenericExternalServices;\nexports.GenericCom = GenericCom;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFPrintService = undefined;\n\nvar _ui_utils = __webpack_require__(0);\n\nvar _app = __webpack_require__(4);\n\nvar _pdfjsLib = __webpack_require__(1);\n\nvar activeService = null;\nvar overlayManager = null;\nfunction renderPage(activeServiceOnEntry, pdfDocument, pageNumber, size) {\n  var scratchCanvas = activeService.scratchCanvas;\n  var PRINT_RESOLUTION = 150;\n  var PRINT_UNITS = PRINT_RESOLUTION / 72.0;\n  scratchCanvas.width = Math.floor(size.width * PRINT_UNITS);\n  scratchCanvas.height = Math.floor(size.height * PRINT_UNITS);\n  var width = Math.floor(size.width * _ui_utils.CSS_UNITS) + 'px';\n  var height = Math.floor(size.height * _ui_utils.CSS_UNITS) + 'px';\n  var ctx = scratchCanvas.getContext('2d');\n  ctx.save();\n  ctx.fillStyle = 'rgb(255, 255, 255)';\n  ctx.fillRect(0, 0, scratchCanvas.width, scratchCanvas.height);\n  ctx.restore();\n  return pdfDocument.getPage(pageNumber).then(function (pdfPage) {\n    var renderContext = {\n      canvasContext: ctx,\n      transform: [PRINT_UNITS, 0, 0, PRINT_UNITS, 0, 0],\n      viewport: pdfPage.getViewport(1, size.rotation),\n      intent: 'print'\n    };\n    return pdfPage.render(renderContext).promise;\n  }).then(function () {\n    return {\n      width: width,\n      height: height\n    };\n  });\n}\nfunction PDFPrintService(pdfDocument, pagesOverview, printContainer, l10n) {\n  this.pdfDocument = pdfDocument;\n  this.pagesOverview = pagesOverview;\n  this.printContainer = printContainer;\n  this.l10n = l10n || _ui_utils.NullL10n;\n  this.currentPage = -1;\n  this.scratchCanvas = document.createElement('canvas');\n}\nPDFPrintService.prototype = {\n  layout: function layout() {\n    this.throwIfInactive();\n    var body = document.querySelector('body');\n    body.setAttribute('data-pdfjsprinting', true);\n    var hasEqualPageSizes = this.pagesOverview.every(function (size) {\n      return size.width === this.pagesOverview[0].width && size.height === this.pagesOverview[0].height;\n    }, this);\n    if (!hasEqualPageSizes) {\n      console.warn('Not all pages have the same size. The printed ' + 'result may be incorrect!');\n    }\n    this.pageStyleSheet = document.createElement('style');\n    var pageSize = this.pagesOverview[0];\n    this.pageStyleSheet.textContent = '@supports ((size:A4) and (size:1pt 1pt)) {' + '@page { size: ' + pageSize.width + 'pt ' + pageSize.height + 'pt;}' + '}';\n    body.appendChild(this.pageStyleSheet);\n  },\n  destroy: function destroy() {\n    if (activeService !== this) {\n      return;\n    }\n    this.printContainer.textContent = '';\n    if (this.pageStyleSheet && this.pageStyleSheet.parentNode) {\n      this.pageStyleSheet.parentNode.removeChild(this.pageStyleSheet);\n      this.pageStyleSheet = null;\n    }\n    this.scratchCanvas.width = this.scratchCanvas.height = 0;\n    this.scratchCanvas = null;\n    activeService = null;\n    ensureOverlay().then(function () {\n      if (overlayManager.active !== 'printServiceOverlay') {\n        return;\n      }\n      overlayManager.close('printServiceOverlay');\n    });\n  },\n  renderPages: function renderPages() {\n    var _this = this;\n\n    var pageCount = this.pagesOverview.length;\n    var renderNextPage = function renderNextPage(resolve, reject) {\n      _this.throwIfInactive();\n      if (++_this.currentPage >= pageCount) {\n        renderProgress(pageCount, pageCount, _this.l10n);\n        resolve();\n        return;\n      }\n      var index = _this.currentPage;\n      renderProgress(index, pageCount, _this.l10n);\n      renderPage(_this, _this.pdfDocument, index + 1, _this.pagesOverview[index]).then(_this.useRenderedPage.bind(_this)).then(function () {\n        renderNextPage(resolve, reject);\n      }, reject);\n    };\n    return new Promise(renderNextPage);\n  },\n  useRenderedPage: function useRenderedPage(printItem) {\n    this.throwIfInactive();\n    var img = document.createElement('img');\n    img.style.width = printItem.width;\n    img.style.height = printItem.height;\n    var scratchCanvas = this.scratchCanvas;\n    if ('toBlob' in scratchCanvas && !_pdfjsLib.PDFJS.disableCreateObjectURL) {\n      scratchCanvas.toBlob(function (blob) {\n        img.src = URL.createObjectURL(blob);\n      });\n    } else {\n      img.src = scratchCanvas.toDataURL();\n    }\n    var wrapper = document.createElement('div');\n    wrapper.appendChild(img);\n    this.printContainer.appendChild(wrapper);\n    return new Promise(function (resolve, reject) {\n      img.onload = resolve;\n      img.onerror = reject;\n    });\n  },\n  performPrint: function performPrint() {\n    var _this2 = this;\n\n    this.throwIfInactive();\n    return new Promise(function (resolve) {\n      setTimeout(function () {\n        if (!_this2.active) {\n          resolve();\n          return;\n        }\n        print.call(window);\n        setTimeout(resolve, 20);\n      }, 0);\n    });\n  },\n\n  get active() {\n    return this === activeService;\n  },\n  throwIfInactive: function throwIfInactive() {\n    if (!this.active) {\n      throw new Error('This print request was cancelled or completed.');\n    }\n  }\n};\nvar print = window.print;\nwindow.print = function print() {\n  if (activeService) {\n    console.warn('Ignored window.print() because of a pending print job.');\n    return;\n  }\n  ensureOverlay().then(function () {\n    if (activeService) {\n      overlayManager.open('printServiceOverlay');\n    }\n  });\n  try {\n    dispatchEvent('beforeprint');\n  } finally {\n    if (!activeService) {\n      console.error('Expected print service to be initialized.');\n      ensureOverlay().then(function () {\n        if (overlayManager.active === 'printServiceOverlay') {\n          overlayManager.close('printServiceOverlay');\n        }\n      });\n      return;\n    }\n    var activeServiceOnEntry = activeService;\n    activeService.renderPages().then(function () {\n      return activeServiceOnEntry.performPrint();\n    }).catch(function () {}).then(function () {\n      if (activeServiceOnEntry.active) {\n        abort();\n      }\n    });\n  }\n};\nfunction dispatchEvent(eventType) {\n  var event = document.createEvent('CustomEvent');\n  event.initCustomEvent(eventType, false, false, 'custom');\n  window.dispatchEvent(event);\n}\nfunction abort() {\n  if (activeService) {\n    activeService.destroy();\n    dispatchEvent('afterprint');\n  }\n}\nfunction renderProgress(index, total, l10n) {\n  var progressContainer = document.getElementById('printServiceOverlay');\n  var progress = Math.round(100 * index / total);\n  var progressBar = progressContainer.querySelector('progress');\n  var progressPerc = progressContainer.querySelector('.relative-progress');\n  progressBar.value = progress;\n  l10n.get('print_progress_percent', { progress: progress }, progress + '%').then(function (msg) {\n    progressPerc.textContent = msg;\n  });\n}\nvar hasAttachEvent = !!document.attachEvent;\nwindow.addEventListener('keydown', function (event) {\n  if (event.keyCode === 80 && (event.ctrlKey || event.metaKey) && !event.altKey && (!event.shiftKey || window.chrome || window.opera)) {\n    window.print();\n    if (hasAttachEvent) {\n      return;\n    }\n    event.preventDefault();\n    if (event.stopImmediatePropagation) {\n      event.stopImmediatePropagation();\n    } else {\n      event.stopPropagation();\n    }\n    return;\n  }\n}, true);\nif (hasAttachEvent) {\n  document.attachEvent('onkeydown', function (event) {\n    event = event || window.event;\n    if (event.keyCode === 80 && event.ctrlKey) {\n      event.keyCode = 0;\n      return false;\n    }\n  });\n}\nif ('onbeforeprint' in window) {\n  var stopPropagationIfNeeded = function stopPropagationIfNeeded(event) {\n    if (event.detail !== 'custom' && event.stopImmediatePropagation) {\n      event.stopImmediatePropagation();\n    }\n  };\n  window.addEventListener('beforeprint', stopPropagationIfNeeded);\n  window.addEventListener('afterprint', stopPropagationIfNeeded);\n}\nvar overlayPromise;\nfunction ensureOverlay() {\n  if (!overlayPromise) {\n    overlayManager = _app.PDFViewerApplication.overlayManager;\n    if (!overlayManager) {\n      throw new Error('The overlay manager has not yet been initialized.');\n    }\n    overlayPromise = overlayManager.register('printServiceOverlay', document.getElementById('printServiceOverlay'), abort, true);\n    document.getElementById('printCancel').onclick = abort;\n  }\n  return overlayPromise;\n}\n_app.PDFPrintServiceFactory.instance = {\n  supportsPrinting: true,\n  createPrintService: function createPrintService(pdfDocument, pagesOverview, printContainer, l10n) {\n    if (activeService) {\n      throw new Error('The print service is created and active.');\n    }\n    activeService = new PDFPrintService(pdfDocument, pagesOverview, printContainer, l10n);\n    return activeService;\n  }\n};\nexports.PDFPrintService = PDFPrintService;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\ndocument.webL10n = function (window, document, undefined) {\n  var gL10nData = {};\n  var gTextData = '';\n  var gTextProp = 'textContent';\n  var gLanguage = '';\n  var gMacros = {};\n  var gReadyState = 'loading';\n  var gAsyncResourceLoading = true;\n  function getL10nResourceLinks() {\n    return document.querySelectorAll('link[type=\"application/l10n\"]');\n  }\n  function getL10nDictionary() {\n    var script = document.querySelector('script[type=\"application/l10n\"]');\n    return script ? JSON.parse(script.innerHTML) : null;\n  }\n  function getTranslatableChildren(element) {\n    return element ? element.querySelectorAll('*[data-l10n-id]') : [];\n  }\n  function getL10nAttributes(element) {\n    if (!element) return {};\n    var l10nId = element.getAttribute('data-l10n-id');\n    var l10nArgs = element.getAttribute('data-l10n-args');\n    var args = {};\n    if (l10nArgs) {\n      try {\n        args = JSON.parse(l10nArgs);\n      } catch (e) {\n        console.warn('could not parse arguments for #' + l10nId);\n      }\n    }\n    return {\n      id: l10nId,\n      args: args\n    };\n  }\n  function fireL10nReadyEvent(lang) {\n    var evtObject = document.createEvent('Event');\n    evtObject.initEvent('localized', true, false);\n    evtObject.language = lang;\n    document.dispatchEvent(evtObject);\n  }\n  function xhrLoadText(url, onSuccess, onFailure) {\n    onSuccess = onSuccess || function _onSuccess(data) {};\n    onFailure = onFailure || function _onFailure() {};\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, gAsyncResourceLoading);\n    if (xhr.overrideMimeType) {\n      xhr.overrideMimeType('text/plain; charset=utf-8');\n    }\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState == 4) {\n        if (xhr.status == 200 || xhr.status === 0) {\n          onSuccess(xhr.responseText);\n        } else {\n          onFailure();\n        }\n      }\n    };\n    xhr.onerror = onFailure;\n    xhr.ontimeout = onFailure;\n    try {\n      xhr.send(null);\n    } catch (e) {\n      onFailure();\n    }\n  }\n  function parseResource(href, lang, successCallback, failureCallback) {\n    var baseURL = href.replace(/[^\\/]*$/, '') || './';\n    function evalString(text) {\n      if (text.lastIndexOf('\\\\') < 0) return text;\n      return text.replace(/\\\\\\\\/g, '\\\\').replace(/\\\\n/g, '\\n').replace(/\\\\r/g, '\\r').replace(/\\\\t/g, '\\t').replace(/\\\\b/g, '\\b').replace(/\\\\f/g, '\\f').replace(/\\\\{/g, '{').replace(/\\\\}/g, '}').replace(/\\\\\"/g, '\"').replace(/\\\\'/g, \"'\");\n    }\n    function parseProperties(text, parsedPropertiesCallback) {\n      var dictionary = {};\n      var reBlank = /^\\s*|\\s*$/;\n      var reComment = /^\\s*#|^\\s*$/;\n      var reSection = /^\\s*\\[(.*)\\]\\s*$/;\n      var reImport = /^\\s*@import\\s+url\\((.*)\\)\\s*$/i;\n      var reSplit = /^([^=\\s]*)\\s*=\\s*(.+)$/;\n      function parseRawLines(rawText, extendedSyntax, parsedRawLinesCallback) {\n        var entries = rawText.replace(reBlank, '').split(/[\\r\\n]+/);\n        var currentLang = '*';\n        var genericLang = lang.split('-', 1)[0];\n        var skipLang = false;\n        var match = '';\n        function nextEntry() {\n          while (true) {\n            if (!entries.length) {\n              parsedRawLinesCallback();\n              return;\n            }\n            var line = entries.shift();\n            if (reComment.test(line)) continue;\n            if (extendedSyntax) {\n              match = reSection.exec(line);\n              if (match) {\n                currentLang = match[1].toLowerCase();\n                skipLang = currentLang !== '*' && currentLang !== lang && currentLang !== genericLang;\n                continue;\n              } else if (skipLang) {\n                continue;\n              }\n              match = reImport.exec(line);\n              if (match) {\n                loadImport(baseURL + match[1], nextEntry);\n                return;\n              }\n            }\n            var tmp = line.match(reSplit);\n            if (tmp && tmp.length == 3) {\n              dictionary[tmp[1]] = evalString(tmp[2]);\n            }\n          }\n        }\n        nextEntry();\n      }\n      function loadImport(url, callback) {\n        xhrLoadText(url, function (content) {\n          parseRawLines(content, false, callback);\n        }, function () {\n          console.warn(url + ' not found.');\n          callback();\n        });\n      }\n      parseRawLines(text, true, function () {\n        parsedPropertiesCallback(dictionary);\n      });\n    }\n    xhrLoadText(href, function (response) {\n      gTextData += response;\n      parseProperties(response, function (data) {\n        for (var key in data) {\n          var id,\n              prop,\n              index = key.lastIndexOf('.');\n          if (index > 0) {\n            id = key.substring(0, index);\n            prop = key.substr(index + 1);\n          } else {\n            id = key;\n            prop = gTextProp;\n          }\n          if (!gL10nData[id]) {\n            gL10nData[id] = {};\n          }\n          gL10nData[id][prop] = data[key];\n        }\n        if (successCallback) {\n          successCallback();\n        }\n      });\n    }, failureCallback);\n  }\n  function loadLocale(lang, callback) {\n    if (lang) {\n      lang = lang.toLowerCase();\n    }\n    callback = callback || function _callback() {};\n    clear();\n    gLanguage = lang;\n    var langLinks = getL10nResourceLinks();\n    var langCount = langLinks.length;\n    if (langCount === 0) {\n      var dict = getL10nDictionary();\n      if (dict && dict.locales && dict.default_locale) {\n        console.log('using the embedded JSON directory, early way out');\n        gL10nData = dict.locales[lang];\n        if (!gL10nData) {\n          var defaultLocale = dict.default_locale.toLowerCase();\n          for (var anyCaseLang in dict.locales) {\n            anyCaseLang = anyCaseLang.toLowerCase();\n            if (anyCaseLang === lang) {\n              gL10nData = dict.locales[lang];\n              break;\n            } else if (anyCaseLang === defaultLocale) {\n              gL10nData = dict.locales[defaultLocale];\n            }\n          }\n        }\n        callback();\n      } else {\n        console.log('no resource to load, early way out');\n      }\n      fireL10nReadyEvent(lang);\n      gReadyState = 'complete';\n      return;\n    }\n    var onResourceLoaded = null;\n    var gResourceCount = 0;\n    onResourceLoaded = function onResourceLoaded() {\n      gResourceCount++;\n      if (gResourceCount >= langCount) {\n        callback();\n        fireL10nReadyEvent(lang);\n        gReadyState = 'complete';\n      }\n    };\n    function L10nResourceLink(link) {\n      var href = link.href;\n      this.load = function (lang, callback) {\n        parseResource(href, lang, callback, function () {\n          console.warn(href + ' not found.');\n          console.warn('\"' + lang + '\" resource not found');\n          gLanguage = '';\n          callback();\n        });\n      };\n    }\n    for (var i = 0; i < langCount; i++) {\n      var resource = new L10nResourceLink(langLinks[i]);\n      resource.load(lang, onResourceLoaded);\n    }\n  }\n  function clear() {\n    gL10nData = {};\n    gTextData = '';\n    gLanguage = '';\n  }\n  function getPluralRules(lang) {\n    var locales2rules = {\n      'af': 3,\n      'ak': 4,\n      'am': 4,\n      'ar': 1,\n      'asa': 3,\n      'az': 0,\n      'be': 11,\n      'bem': 3,\n      'bez': 3,\n      'bg': 3,\n      'bh': 4,\n      'bm': 0,\n      'bn': 3,\n      'bo': 0,\n      'br': 20,\n      'brx': 3,\n      'bs': 11,\n      'ca': 3,\n      'cgg': 3,\n      'chr': 3,\n      'cs': 12,\n      'cy': 17,\n      'da': 3,\n      'de': 3,\n      'dv': 3,\n      'dz': 0,\n      'ee': 3,\n      'el': 3,\n      'en': 3,\n      'eo': 3,\n      'es': 3,\n      'et': 3,\n      'eu': 3,\n      'fa': 0,\n      'ff': 5,\n      'fi': 3,\n      'fil': 4,\n      'fo': 3,\n      'fr': 5,\n      'fur': 3,\n      'fy': 3,\n      'ga': 8,\n      'gd': 24,\n      'gl': 3,\n      'gsw': 3,\n      'gu': 3,\n      'guw': 4,\n      'gv': 23,\n      'ha': 3,\n      'haw': 3,\n      'he': 2,\n      'hi': 4,\n      'hr': 11,\n      'hu': 0,\n      'id': 0,\n      'ig': 0,\n      'ii': 0,\n      'is': 3,\n      'it': 3,\n      'iu': 7,\n      'ja': 0,\n      'jmc': 3,\n      'jv': 0,\n      'ka': 0,\n      'kab': 5,\n      'kaj': 3,\n      'kcg': 3,\n      'kde': 0,\n      'kea': 0,\n      'kk': 3,\n      'kl': 3,\n      'km': 0,\n      'kn': 0,\n      'ko': 0,\n      'ksb': 3,\n      'ksh': 21,\n      'ku': 3,\n      'kw': 7,\n      'lag': 18,\n      'lb': 3,\n      'lg': 3,\n      'ln': 4,\n      'lo': 0,\n      'lt': 10,\n      'lv': 6,\n      'mas': 3,\n      'mg': 4,\n      'mk': 16,\n      'ml': 3,\n      'mn': 3,\n      'mo': 9,\n      'mr': 3,\n      'ms': 0,\n      'mt': 15,\n      'my': 0,\n      'nah': 3,\n      'naq': 7,\n      'nb': 3,\n      'nd': 3,\n      'ne': 3,\n      'nl': 3,\n      'nn': 3,\n      'no': 3,\n      'nr': 3,\n      'nso': 4,\n      'ny': 3,\n      'nyn': 3,\n      'om': 3,\n      'or': 3,\n      'pa': 3,\n      'pap': 3,\n      'pl': 13,\n      'ps': 3,\n      'pt': 3,\n      'rm': 3,\n      'ro': 9,\n      'rof': 3,\n      'ru': 11,\n      'rwk': 3,\n      'sah': 0,\n      'saq': 3,\n      'se': 7,\n      'seh': 3,\n      'ses': 0,\n      'sg': 0,\n      'sh': 11,\n      'shi': 19,\n      'sk': 12,\n      'sl': 14,\n      'sma': 7,\n      'smi': 7,\n      'smj': 7,\n      'smn': 7,\n      'sms': 7,\n      'sn': 3,\n      'so': 3,\n      'sq': 3,\n      'sr': 11,\n      'ss': 3,\n      'ssy': 3,\n      'st': 3,\n      'sv': 3,\n      'sw': 3,\n      'syr': 3,\n      'ta': 3,\n      'te': 3,\n      'teo': 3,\n      'th': 0,\n      'ti': 4,\n      'tig': 3,\n      'tk': 3,\n      'tl': 4,\n      'tn': 3,\n      'to': 0,\n      'tr': 0,\n      'ts': 3,\n      'tzm': 22,\n      'uk': 11,\n      'ur': 3,\n      've': 3,\n      'vi': 0,\n      'vun': 3,\n      'wa': 4,\n      'wae': 3,\n      'wo': 0,\n      'xh': 3,\n      'xog': 3,\n      'yo': 0,\n      'zh': 0,\n      'zu': 3\n    };\n    function isIn(n, list) {\n      return list.indexOf(n) !== -1;\n    }\n    function isBetween(n, start, end) {\n      return start <= n && n <= end;\n    }\n    var pluralRules = {\n      '0': function _(n) {\n        return 'other';\n      },\n      '1': function _(n) {\n        if (isBetween(n % 100, 3, 10)) return 'few';\n        if (n === 0) return 'zero';\n        if (isBetween(n % 100, 11, 99)) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '2': function _(n) {\n        if (n !== 0 && n % 10 === 0) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '3': function _(n) {\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '4': function _(n) {\n        if (isBetween(n, 0, 1)) return 'one';\n        return 'other';\n      },\n      '5': function _(n) {\n        if (isBetween(n, 0, 2) && n != 2) return 'one';\n        return 'other';\n      },\n      '6': function _(n) {\n        if (n === 0) return 'zero';\n        if (n % 10 == 1 && n % 100 != 11) return 'one';\n        return 'other';\n      },\n      '7': function _(n) {\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '8': function _(n) {\n        if (isBetween(n, 3, 6)) return 'few';\n        if (isBetween(n, 7, 10)) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '9': function _(n) {\n        if (n === 0 || n != 1 && isBetween(n % 100, 1, 19)) return 'few';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '10': function _(n) {\n        if (isBetween(n % 10, 2, 9) && !isBetween(n % 100, 11, 19)) return 'few';\n        if (n % 10 == 1 && !isBetween(n % 100, 11, 19)) return 'one';\n        return 'other';\n      },\n      '11': function _(n) {\n        if (isBetween(n % 10, 2, 4) && !isBetween(n % 100, 12, 14)) return 'few';\n        if (n % 10 === 0 || isBetween(n % 10, 5, 9) || isBetween(n % 100, 11, 14)) return 'many';\n        if (n % 10 == 1 && n % 100 != 11) return 'one';\n        return 'other';\n      },\n      '12': function _(n) {\n        if (isBetween(n, 2, 4)) return 'few';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '13': function _(n) {\n        if (isBetween(n % 10, 2, 4) && !isBetween(n % 100, 12, 14)) return 'few';\n        if (n != 1 && isBetween(n % 10, 0, 1) || isBetween(n % 10, 5, 9) || isBetween(n % 100, 12, 14)) return 'many';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '14': function _(n) {\n        if (isBetween(n % 100, 3, 4)) return 'few';\n        if (n % 100 == 2) return 'two';\n        if (n % 100 == 1) return 'one';\n        return 'other';\n      },\n      '15': function _(n) {\n        if (n === 0 || isBetween(n % 100, 2, 10)) return 'few';\n        if (isBetween(n % 100, 11, 19)) return 'many';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '16': function _(n) {\n        if (n % 10 == 1 && n != 11) return 'one';\n        return 'other';\n      },\n      '17': function _(n) {\n        if (n == 3) return 'few';\n        if (n === 0) return 'zero';\n        if (n == 6) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '18': function _(n) {\n        if (n === 0) return 'zero';\n        if (isBetween(n, 0, 2) && n !== 0 && n != 2) return 'one';\n        return 'other';\n      },\n      '19': function _(n) {\n        if (isBetween(n, 2, 10)) return 'few';\n        if (isBetween(n, 0, 1)) return 'one';\n        return 'other';\n      },\n      '20': function _(n) {\n        if ((isBetween(n % 10, 3, 4) || n % 10 == 9) && !(isBetween(n % 100, 10, 19) || isBetween(n % 100, 70, 79) || isBetween(n % 100, 90, 99))) return 'few';\n        if (n % 1000000 === 0 && n !== 0) return 'many';\n        if (n % 10 == 2 && !isIn(n % 100, [12, 72, 92])) return 'two';\n        if (n % 10 == 1 && !isIn(n % 100, [11, 71, 91])) return 'one';\n        return 'other';\n      },\n      '21': function _(n) {\n        if (n === 0) return 'zero';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '22': function _(n) {\n        if (isBetween(n, 0, 1) || isBetween(n, 11, 99)) return 'one';\n        return 'other';\n      },\n      '23': function _(n) {\n        if (isBetween(n % 10, 1, 2) || n % 20 === 0) return 'one';\n        return 'other';\n      },\n      '24': function _(n) {\n        if (isBetween(n, 3, 10) || isBetween(n, 13, 19)) return 'few';\n        if (isIn(n, [2, 12])) return 'two';\n        if (isIn(n, [1, 11])) return 'one';\n        return 'other';\n      }\n    };\n    var index = locales2rules[lang.replace(/-.*$/, '')];\n    if (!(index in pluralRules)) {\n      console.warn('plural form unknown for [' + lang + ']');\n      return function () {\n        return 'other';\n      };\n    }\n    return pluralRules[index];\n  }\n  gMacros.plural = function (str, param, key, prop) {\n    var n = parseFloat(param);\n    if (isNaN(n)) return str;\n    if (prop != gTextProp) return str;\n    if (!gMacros._pluralRules) {\n      gMacros._pluralRules = getPluralRules(gLanguage);\n    }\n    var index = '[' + gMacros._pluralRules(n) + ']';\n    if (n === 0 && key + '[zero]' in gL10nData) {\n      str = gL10nData[key + '[zero]'][prop];\n    } else if (n == 1 && key + '[one]' in gL10nData) {\n      str = gL10nData[key + '[one]'][prop];\n    } else if (n == 2 && key + '[two]' in gL10nData) {\n      str = gL10nData[key + '[two]'][prop];\n    } else if (key + index in gL10nData) {\n      str = gL10nData[key + index][prop];\n    } else if (key + '[other]' in gL10nData) {\n      str = gL10nData[key + '[other]'][prop];\n    }\n    return str;\n  };\n  function getL10nData(key, args, fallback) {\n    var data = gL10nData[key];\n    if (!data) {\n      console.warn('#' + key + ' is undefined.');\n      if (!fallback) {\n        return null;\n      }\n      data = fallback;\n    }\n    var rv = {};\n    for (var prop in data) {\n      var str = data[prop];\n      str = substIndexes(str, args, key, prop);\n      str = substArguments(str, args, key);\n      rv[prop] = str;\n    }\n    return rv;\n  }\n  function substIndexes(str, args, key, prop) {\n    var reIndex = /\\{\\[\\s*([a-zA-Z]+)\\(([a-zA-Z]+)\\)\\s*\\]\\}/;\n    var reMatch = reIndex.exec(str);\n    if (!reMatch || !reMatch.length) return str;\n    var macroName = reMatch[1];\n    var paramName = reMatch[2];\n    var param;\n    if (args && paramName in args) {\n      param = args[paramName];\n    } else if (paramName in gL10nData) {\n      param = gL10nData[paramName];\n    }\n    if (macroName in gMacros) {\n      var macro = gMacros[macroName];\n      str = macro(str, param, key, prop);\n    }\n    return str;\n  }\n  function substArguments(str, args, key) {\n    var reArgs = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\n    return str.replace(reArgs, function (matched_text, arg) {\n      if (args && arg in args) {\n        return args[arg];\n      }\n      if (arg in gL10nData) {\n        return gL10nData[arg];\n      }\n      console.log('argument {{' + arg + '}} for #' + key + ' is undefined.');\n      return matched_text;\n    });\n  }\n  function translateElement(element) {\n    var l10n = getL10nAttributes(element);\n    if (!l10n.id) return;\n    var data = getL10nData(l10n.id, l10n.args);\n    if (!data) {\n      console.warn('#' + l10n.id + ' is undefined.');\n      return;\n    }\n    if (data[gTextProp]) {\n      if (getChildElementCount(element) === 0) {\n        element[gTextProp] = data[gTextProp];\n      } else {\n        var children = element.childNodes;\n        var found = false;\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (children[i].nodeType === 3 && /\\S/.test(children[i].nodeValue)) {\n            if (found) {\n              children[i].nodeValue = '';\n            } else {\n              children[i].nodeValue = data[gTextProp];\n              found = true;\n            }\n          }\n        }\n        if (!found) {\n          var textNode = document.createTextNode(data[gTextProp]);\n          element.insertBefore(textNode, element.firstChild);\n        }\n      }\n      delete data[gTextProp];\n    }\n    for (var k in data) {\n      element[k] = data[k];\n    }\n  }\n  function getChildElementCount(element) {\n    if (element.children) {\n      return element.children.length;\n    }\n    if (typeof element.childElementCount !== 'undefined') {\n      return element.childElementCount;\n    }\n    var count = 0;\n    for (var i = 0; i < element.childNodes.length; i++) {\n      count += element.nodeType === 1 ? 1 : 0;\n    }\n    return count;\n  }\n  function translateFragment(element) {\n    element = element || document.documentElement;\n    var children = getTranslatableChildren(element);\n    var elementCount = children.length;\n    for (var i = 0; i < elementCount; i++) {\n      translateElement(children[i]);\n    }\n    translateElement(element);\n  }\n  return {\n    get: function get(key, args, fallbackString) {\n      var index = key.lastIndexOf('.');\n      var prop = gTextProp;\n      if (index > 0) {\n        prop = key.substr(index + 1);\n        key = key.substring(0, index);\n      }\n      var fallback;\n      if (fallbackString) {\n        fallback = {};\n        fallback[prop] = fallbackString;\n      }\n      var data = getL10nData(key, args, fallback);\n      if (data && prop in data) {\n        return data[prop];\n      }\n      return '{{' + key + '}}';\n    },\n    getData: function getData() {\n      return gL10nData;\n    },\n    getText: function getText() {\n      return gTextData;\n    },\n    getLanguage: function getLanguage() {\n      return gLanguage;\n    },\n    setLanguage: function setLanguage(lang, callback) {\n      loadLocale(lang, function () {\n        if (callback) callback();\n      });\n    },\n    getDirection: function getDirection() {\n      var rtlList = ['ar', 'he', 'fa', 'ps', 'ur'];\n      var shortCode = gLanguage.split('-', 1)[0];\n      return rtlList.indexOf(shortCode) >= 0 ? 'rtl' : 'ltr';\n    },\n    translate: translateFragment,\n    getReadyState: function getReadyState() {\n      return gReadyState;\n    },\n    ready: function ready(callback) {\n      if (!callback) {\n        return;\n      } else if (gReadyState == 'complete' || gReadyState == 'interactive') {\n        window.setTimeout(function () {\n          callback();\n        });\n      } else if (document.addEventListener) {\n        document.addEventListener('localized', function once() {\n          document.removeEventListener('localized', once);\n          callback();\n        });\n      }\n    }\n  };\n}(window, document);\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultAnnotationLayerFactory = exports.AnnotationLayerBuilder = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _pdfjsLib = __webpack_require__(1);\n\nvar _ui_utils = __webpack_require__(0);\n\nvar _pdf_link_service = __webpack_require__(5);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationLayerBuilder = function () {\n  function AnnotationLayerBuilder(_ref) {\n    var pageDiv = _ref.pageDiv,\n        pdfPage = _ref.pdfPage,\n        linkService = _ref.linkService,\n        downloadManager = _ref.downloadManager,\n        _ref$renderInteractiv = _ref.renderInteractiveForms,\n        renderInteractiveForms = _ref$renderInteractiv === undefined ? false : _ref$renderInteractiv,\n        _ref$l10n = _ref.l10n,\n        l10n = _ref$l10n === undefined ? _ui_utils.NullL10n : _ref$l10n;\n\n    _classCallCheck(this, AnnotationLayerBuilder);\n\n    this.pageDiv = pageDiv;\n    this.pdfPage = pdfPage;\n    this.linkService = linkService;\n    this.downloadManager = downloadManager;\n    this.renderInteractiveForms = renderInteractiveForms;\n    this.l10n = l10n;\n    this.div = null;\n  }\n\n  _createClass(AnnotationLayerBuilder, [{\n    key: 'render',\n    value: function render(viewport) {\n      var _this = this;\n\n      var intent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'display';\n\n      this.pdfPage.getAnnotations({ intent: intent }).then(function (annotations) {\n        var parameters = {\n          viewport: viewport.clone({ dontFlip: true }),\n          div: _this.div,\n          annotations: annotations,\n          page: _this.pdfPage,\n          renderInteractiveForms: _this.renderInteractiveForms,\n          linkService: _this.linkService,\n          downloadManager: _this.downloadManager\n        };\n        if (_this.div) {\n          _pdfjsLib.AnnotationLayer.update(parameters);\n        } else {\n          if (annotations.length === 0) {\n            return;\n          }\n          _this.div = document.createElement('div');\n          _this.div.className = 'annotationLayer';\n          _this.pageDiv.appendChild(_this.div);\n          parameters.div = _this.div;\n          _pdfjsLib.AnnotationLayer.render(parameters);\n          _this.l10n.translate(_this.div);\n        }\n      });\n    }\n  }, {\n    key: 'hide',\n    value: function hide() {\n      if (!this.div) {\n        return;\n      }\n      this.div.setAttribute('hidden', 'true');\n    }\n  }]);\n\n  return AnnotationLayerBuilder;\n}();\n\nvar DefaultAnnotationLayerFactory = function () {\n  function DefaultAnnotationLayerFactory() {\n    _classCallCheck(this, DefaultAnnotationLayerFactory);\n  }\n\n  _createClass(DefaultAnnotationLayerFactory, [{\n    key: 'createAnnotationLayerBuilder',\n    value: function createAnnotationLayerBuilder(pageDiv, pdfPage) {\n      var renderInteractiveForms = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var l10n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _ui_utils.NullL10n;\n\n      return new AnnotationLayerBuilder({\n        pageDiv: pageDiv,\n        pdfPage: pdfPage,\n        renderInteractiveForms: renderInteractiveForms,\n        linkService: new _pdf_link_service.SimpleLinkService(),\n        l10n: l10n\n      });\n    }\n  }]);\n\n  return DefaultAnnotationLayerFactory;\n}();\n\nexports.AnnotationLayerBuilder = AnnotationLayerBuilder;\nexports.DefaultAnnotationLayerFactory = DefaultAnnotationLayerFactory;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DownloadManager = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _pdfjsLib = __webpack_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n;\nfunction _download(blobUrl, filename) {\n  var a = document.createElement('a');\n  if (a.click) {\n    a.href = blobUrl;\n    a.target = '_parent';\n    if ('download' in a) {\n      a.download = filename;\n    }\n    (document.body || document.documentElement).appendChild(a);\n    a.click();\n    a.parentNode.removeChild(a);\n  } else {\n    if (window.top === window && blobUrl.split('#')[0] === window.location.href.split('#')[0]) {\n      var padCharacter = blobUrl.indexOf('?') === -1 ? '?' : '&';\n      blobUrl = blobUrl.replace(/#|$/, padCharacter + '$&');\n    }\n    window.open(blobUrl, '_parent');\n  }\n}\n\nvar DownloadManager = function () {\n  function DownloadManager() {\n    _classCallCheck(this, DownloadManager);\n  }\n\n  _createClass(DownloadManager, [{\n    key: 'downloadUrl',\n    value: function downloadUrl(url, filename) {\n      if (!(0, _pdfjsLib.createValidAbsoluteUrl)(url, 'http://example.com')) {\n        return;\n      }\n      _download(url + '#pdfjs.action=download', filename);\n    }\n  }, {\n    key: 'downloadData',\n    value: function downloadData(data, filename, contentType) {\n      if (navigator.msSaveBlob) {\n        return navigator.msSaveBlob(new Blob([data], { type: contentType }), filename);\n      }\n      var blobUrl = (0, _pdfjsLib.createObjectURL)(data, contentType, _pdfjsLib.PDFJS.disableCreateObjectURL);\n      _download(blobUrl, filename);\n    }\n  }, {\n    key: 'download',\n    value: function download(blob, url, filename) {\n      if (navigator.msSaveBlob) {\n        if (!navigator.msSaveBlob(blob, filename)) {\n          this.downloadUrl(url, filename);\n        }\n        return;\n      }\n      if (_pdfjsLib.PDFJS.disableCreateObjectURL) {\n        this.downloadUrl(url, filename);\n        return;\n      }\n      var blobUrl = URL.createObjectURL(blob);\n      _download(blobUrl, filename);\n    }\n  }]);\n\n  return DownloadManager;\n}();\n\nexports.DownloadManager = DownloadManager;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GenericL10n = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(10);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar webL10n = document.webL10n;\n\nvar GenericL10n = function () {\n  function GenericL10n(lang) {\n    _classCallCheck(this, GenericL10n);\n\n    this._lang = lang;\n    this._ready = new Promise(function (resolve, reject) {\n      webL10n.setLanguage(lang, function () {\n        resolve(webL10n);\n      });\n    });\n  }\n\n  _createClass(GenericL10n, [{\n    key: 'getDirection',\n    value: function getDirection() {\n      return this._ready.then(function (l10n) {\n        return l10n.getDirection();\n      });\n    }\n  }, {\n    key: 'get',\n    value: function get(property, args, fallback) {\n      return this._ready.then(function (l10n) {\n        return l10n.get(property, args, fallback);\n      });\n    }\n  }, {\n    key: 'translate',\n    value: function translate(element) {\n      return this._ready.then(function (l10n) {\n        return l10n.translate(element);\n      });\n    }\n  }]);\n\n  return GenericL10n;\n}();\n\nexports.GenericL10n = GenericL10n;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction GrabToPan(options) {\n  this.element = options.element;\n  this.document = options.element.ownerDocument;\n  if (typeof options.ignoreTarget === 'function') {\n    this.ignoreTarget = options.ignoreTarget;\n  }\n  this.onActiveChanged = options.onActiveChanged;\n  this.activate = this.activate.bind(this);\n  this.deactivate = this.deactivate.bind(this);\n  this.toggle = this.toggle.bind(this);\n  this._onmousedown = this._onmousedown.bind(this);\n  this._onmousemove = this._onmousemove.bind(this);\n  this._endPan = this._endPan.bind(this);\n  var overlay = this.overlay = document.createElement('div');\n  overlay.className = 'grab-to-pan-grabbing';\n}\nGrabToPan.prototype = {\n  CSS_CLASS_GRAB: 'grab-to-pan-grab',\n  activate: function GrabToPan_activate() {\n    if (!this.active) {\n      this.active = true;\n      this.element.addEventListener('mousedown', this._onmousedown, true);\n      this.element.classList.add(this.CSS_CLASS_GRAB);\n      if (this.onActiveChanged) {\n        this.onActiveChanged(true);\n      }\n    }\n  },\n  deactivate: function GrabToPan_deactivate() {\n    if (this.active) {\n      this.active = false;\n      this.element.removeEventListener('mousedown', this._onmousedown, true);\n      this._endPan();\n      this.element.classList.remove(this.CSS_CLASS_GRAB);\n      if (this.onActiveChanged) {\n        this.onActiveChanged(false);\n      }\n    }\n  },\n  toggle: function GrabToPan_toggle() {\n    if (this.active) {\n      this.deactivate();\n    } else {\n      this.activate();\n    }\n  },\n  ignoreTarget: function GrabToPan_ignoreTarget(node) {\n    return node[matchesSelector]('a[href], a[href] *, input, textarea, button, button *, select, option');\n  },\n  _onmousedown: function GrabToPan__onmousedown(event) {\n    if (event.button !== 0 || this.ignoreTarget(event.target)) {\n      return;\n    }\n    if (event.originalTarget) {\n      try {\n        event.originalTarget.tagName;\n      } catch (e) {\n        return;\n      }\n    }\n    this.scrollLeftStart = this.element.scrollLeft;\n    this.scrollTopStart = this.element.scrollTop;\n    this.clientXStart = event.clientX;\n    this.clientYStart = event.clientY;\n    this.document.addEventListener('mousemove', this._onmousemove, true);\n    this.document.addEventListener('mouseup', this._endPan, true);\n    this.element.addEventListener('scroll', this._endPan, true);\n    event.preventDefault();\n    event.stopPropagation();\n    var focusedElement = document.activeElement;\n    if (focusedElement && !focusedElement.contains(event.target)) {\n      focusedElement.blur();\n    }\n  },\n  _onmousemove: function GrabToPan__onmousemove(event) {\n    this.element.removeEventListener('scroll', this._endPan, true);\n    if (isLeftMouseReleased(event)) {\n      this._endPan();\n      return;\n    }\n    var xDiff = event.clientX - this.clientXStart;\n    var yDiff = event.clientY - this.clientYStart;\n    var scrollTop = this.scrollTopStart - yDiff;\n    var scrollLeft = this.scrollLeftStart - xDiff;\n    if (this.element.scrollTo) {\n      this.element.scrollTo({\n        top: scrollTop,\n        left: scrollLeft,\n        behavior: 'instant'\n      });\n    } else {\n      this.element.scrollTop = scrollTop;\n      this.element.scrollLeft = scrollLeft;\n    }\n    if (!this.overlay.parentNode) {\n      document.body.appendChild(this.overlay);\n    }\n  },\n  _endPan: function GrabToPan__endPan() {\n    this.element.removeEventListener('scroll', this._endPan, true);\n    this.document.removeEventListener('mousemove', this._onmousemove, true);\n    this.document.removeEventListener('mouseup', this._endPan, true);\n    this.overlay.remove();\n  }\n};\nvar matchesSelector;\n['webkitM', 'mozM', 'msM', 'oM', 'm'].some(function (prefix) {\n  var name = prefix + 'atches';\n  if (name in document.documentElement) {\n    matchesSelector = name;\n  }\n  name += 'Selector';\n  if (name in document.documentElement) {\n    matchesSelector = name;\n  }\n  return matchesSelector;\n});\nvar isNotIEorIsIE10plus = !document.documentMode || document.documentMode > 9;\nvar chrome = window.chrome;\nvar isChrome15OrOpera15plus = chrome && (chrome.webstore || chrome.app);\nvar isSafari6plus = /Apple/.test(navigator.vendor) && /Version\\/([6-9]\\d*|[1-5]\\d+)/.test(navigator.userAgent);\nfunction isLeftMouseReleased(event) {\n  if ('buttons' in event && isNotIEorIsIE10plus) {\n    return !(event.buttons & 1);\n  }\n  if (isChrome15OrOpera15plus || isSafari6plus) {\n    return event.which === 0;\n  }\n}\nexports.GrabToPan = GrabToPan;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar OverlayManager = function () {\n  function OverlayManager() {\n    _classCallCheck(this, OverlayManager);\n\n    this._overlays = {};\n    this._active = null;\n    this._keyDownBound = this._keyDown.bind(this);\n  }\n\n  _createClass(OverlayManager, [{\n    key: 'register',\n    value: function register(name, element) {\n      var _this = this;\n\n      var callerCloseMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var canForceClose = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      return new Promise(function (resolve) {\n        var container = void 0;\n        if (!name || !element || !(container = element.parentNode)) {\n          throw new Error('Not enough parameters.');\n        } else if (_this._overlays[name]) {\n          throw new Error('The overlay is already registered.');\n        }\n        _this._overlays[name] = {\n          element: element,\n          container: container,\n          callerCloseMethod: callerCloseMethod,\n          canForceClose: canForceClose\n        };\n        resolve();\n      });\n    }\n  }, {\n    key: 'unregister',\n    value: function unregister(name) {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        if (!_this2._overlays[name]) {\n          throw new Error('The overlay does not exist.');\n        } else if (_this2._active === name) {\n          throw new Error('The overlay cannot be removed while it is active.');\n        }\n        delete _this2._overlays[name];\n        resolve();\n      });\n    }\n  }, {\n    key: 'open',\n    value: function open(name) {\n      var _this3 = this;\n\n      return new Promise(function (resolve) {\n        if (!_this3._overlays[name]) {\n          throw new Error('The overlay does not exist.');\n        } else if (_this3._active) {\n          if (_this3._overlays[name].canForceClose) {\n            _this3._closeThroughCaller();\n          } else if (_this3._active === name) {\n            throw new Error('The overlay is already active.');\n          } else {\n            throw new Error('Another overlay is currently active.');\n          }\n        }\n        _this3._active = name;\n        _this3._overlays[_this3._active].element.classList.remove('hidden');\n        _this3._overlays[_this3._active].container.classList.remove('hidden');\n        window.addEventListener('keydown', _this3._keyDownBound);\n        resolve();\n      });\n    }\n  }, {\n    key: 'close',\n    value: function close(name) {\n      var _this4 = this;\n\n      return new Promise(function (resolve) {\n        if (!_this4._overlays[name]) {\n          throw new Error('The overlay does not exist.');\n        } else if (!_this4._active) {\n          throw new Error('The overlay is currently not active.');\n        } else if (_this4._active !== name) {\n          throw new Error('Another overlay is currently active.');\n        }\n        _this4._overlays[_this4._active].container.classList.add('hidden');\n        _this4._overlays[_this4._active].element.classList.add('hidden');\n        _this4._active = null;\n        window.removeEventListener('keydown', _this4._keyDownBound);\n        resolve();\n      });\n    }\n  }, {\n    key: '_keyDown',\n    value: function _keyDown(evt) {\n      if (this._active && evt.keyCode === 27) {\n        this._closeThroughCaller();\n        evt.preventDefault();\n      }\n    }\n  }, {\n    key: '_closeThroughCaller',\n    value: function _closeThroughCaller() {\n      if (this._overlays[this._active].callerCloseMethod) {\n        this._overlays[this._active].callerCloseMethod();\n      }\n      if (this._active) {\n        this.close(this._active);\n      }\n    }\n  }, {\n    key: 'active',\n    get: function get() {\n      return this._active;\n    }\n  }]);\n\n  return OverlayManager;\n}();\n\nexports.OverlayManager = OverlayManager;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PasswordPrompt = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ui_utils = __webpack_require__(0);\n\nvar _pdfjsLib = __webpack_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PasswordPrompt = function () {\n  function PasswordPrompt(options, overlayManager) {\n    var _this = this;\n\n    var l10n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _ui_utils.NullL10n;\n\n    _classCallCheck(this, PasswordPrompt);\n\n    this.overlayName = options.overlayName;\n    this.container = options.container;\n    this.label = options.label;\n    this.input = options.input;\n    this.submitButton = options.submitButton;\n    this.cancelButton = options.cancelButton;\n    this.overlayManager = overlayManager;\n    this.l10n = l10n;\n    this.updateCallback = null;\n    this.reason = null;\n    this.submitButton.addEventListener('click', this.verify.bind(this));\n    this.cancelButton.addEventListener('click', this.close.bind(this));\n    this.input.addEventListener('keydown', function (e) {\n      if (e.keyCode === 13) {\n        _this.verify();\n      }\n    });\n    this.overlayManager.register(this.overlayName, this.container, this.close.bind(this), true);\n  }\n\n  _createClass(PasswordPrompt, [{\n    key: 'open',\n    value: function open() {\n      var _this2 = this;\n\n      this.overlayManager.open(this.overlayName).then(function () {\n        _this2.input.focus();\n        var promptString = void 0;\n        if (_this2.reason === _pdfjsLib.PasswordResponses.INCORRECT_PASSWORD) {\n          promptString = _this2.l10n.get('password_invalid', null, 'Invalid password. Please try again.');\n        } else {\n          promptString = _this2.l10n.get('password_label', null, 'Enter the password to open this PDF file.');\n        }\n        promptString.then(function (msg) {\n          _this2.label.textContent = msg;\n        });\n      });\n    }\n  }, {\n    key: 'close',\n    value: function close() {\n      var _this3 = this;\n\n      this.overlayManager.close(this.overlayName).then(function () {\n        _this3.input.value = '';\n      });\n    }\n  }, {\n    key: 'verify',\n    value: function verify() {\n      var password = this.input.value;\n      if (password && password.length > 0) {\n        this.close();\n        return this.updateCallback(password);\n      }\n    }\n  }, {\n    key: 'setUpdateCallback',\n    value: function setUpdateCallback(updateCallback, reason) {\n      this.updateCallback = updateCallback;\n      this.reason = reason;\n    }\n  }]);\n\n  return PasswordPrompt;\n}();\n\nexports.PasswordPrompt = PasswordPrompt;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFAttachmentViewer = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _pdfjsLib = __webpack_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PDFAttachmentViewer = function () {\n  function PDFAttachmentViewer(_ref) {\n    var container = _ref.container,\n        eventBus = _ref.eventBus,\n        downloadManager = _ref.downloadManager;\n\n    _classCallCheck(this, PDFAttachmentViewer);\n\n    this.attachments = null;\n    this.container = container;\n    this.eventBus = eventBus;\n    this.downloadManager = downloadManager;\n    this._renderedCapability = (0, _pdfjsLib.createPromiseCapability)();\n    this.eventBus.on('fileattachmentannotation', this._appendAttachment.bind(this));\n  }\n\n  _createClass(PDFAttachmentViewer, [{\n    key: 'reset',\n    value: function reset() {\n      var keepRenderedCapability = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      this.attachments = null;\n      this.container.textContent = '';\n      if (!keepRenderedCapability) {\n        this._renderedCapability = (0, _pdfjsLib.createPromiseCapability)();\n      }\n    }\n  }, {\n    key: '_dispatchEvent',\n    value: function _dispatchEvent(attachmentsCount) {\n      this.eventBus.dispatch('attachmentsloaded', {\n        source: this,\n        attachmentsCount: attachmentsCount\n      });\n      this._renderedCapability.resolve();\n    }\n  }, {\n    key: '_bindPdfLink',\n    value: function _bindPdfLink(button, content, filename) {\n      if (_pdfjsLib.PDFJS.disableCreateObjectURL) {\n        throw new Error('bindPdfLink: ' + 'Unsupported \"PDFJS.disableCreateObjectURL\" value.');\n      }\n      var blobUrl = void 0;\n      button.onclick = function () {\n        if (!blobUrl) {\n          blobUrl = (0, _pdfjsLib.createObjectURL)(content, 'application/pdf');\n        }\n        var viewerUrl = void 0;\n        viewerUrl = '?file=' + encodeURIComponent(blobUrl + '#' + filename);\n        window.open(viewerUrl);\n        return false;\n      };\n    }\n  }, {\n    key: '_bindLink',\n    value: function _bindLink(button, content, filename) {\n      var _this = this;\n\n      button.onclick = function () {\n        _this.downloadManager.downloadData(content, filename, '');\n        return false;\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render(_ref2) {\n      var attachments = _ref2.attachments,\n          _ref2$keepRenderedCap = _ref2.keepRenderedCapability,\n          keepRenderedCapability = _ref2$keepRenderedCap === undefined ? false : _ref2$keepRenderedCap;\n\n      var attachmentsCount = 0;\n      if (this.attachments) {\n        this.reset(keepRenderedCapability === true);\n      }\n      this.attachments = attachments || null;\n      if (!attachments) {\n        this._dispatchEvent(attachmentsCount);\n        return;\n      }\n      var names = Object.keys(attachments).sort(function (a, b) {\n        return a.toLowerCase().localeCompare(b.toLowerCase());\n      });\n      attachmentsCount = names.length;\n      for (var i = 0; i < attachmentsCount; i++) {\n        var item = attachments[names[i]];\n        var filename = (0, _pdfjsLib.removeNullCharacters)((0, _pdfjsLib.getFilenameFromUrl)(item.filename));\n        var div = document.createElement('div');\n        div.className = 'attachmentsItem';\n        var button = document.createElement('button');\n        button.textContent = filename;\n        if (/\\.pdf$/i.test(filename) && !_pdfjsLib.PDFJS.disableCreateObjectURL) {\n          this._bindPdfLink(button, item.content, filename);\n        } else {\n          this._bindLink(button, item.content, filename);\n        }\n        div.appendChild(button);\n        this.container.appendChild(div);\n      }\n      this._dispatchEvent(attachmentsCount);\n    }\n  }, {\n    key: '_appendAttachment',\n    value: function _appendAttachment(_ref3) {\n      var _this2 = this;\n\n      var id = _ref3.id,\n          filename = _ref3.filename,\n          content = _ref3.content;\n\n      this._renderedCapability.promise.then(function () {\n        var attachments = _this2.attachments;\n        if (!attachments) {\n          attachments = Object.create(null);\n        } else {\n          for (var name in attachments) {\n            if (id === name) {\n              return;\n            }\n          }\n        }\n        attachments[id] = {\n          filename: filename,\n          content: content\n        };\n        _this2.render({\n          attachments: attachments,\n          keepRenderedCapability: true\n        });\n      });\n    }\n  }]);\n\n  return PDFAttachmentViewer;\n}();\n\nexports.PDFAttachmentViewer = PDFAttachmentViewer;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocumentProperties = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ui_utils = __webpack_require__(0);\n\nvar _pdfjsLib = __webpack_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DEFAULT_FIELD_CONTENT = '-';\n\nvar PDFDocumentProperties = function () {\n  function PDFDocumentProperties(_ref, overlayManager) {\n    var overlayName = _ref.overlayName,\n        fields = _ref.fields,\n        container = _ref.container,\n        closeButton = _ref.closeButton;\n    var l10n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _ui_utils.NullL10n;\n\n    _classCallCheck(this, PDFDocumentProperties);\n\n    this.overlayName = overlayName;\n    this.fields = fields;\n    this.container = container;\n    this.overlayManager = overlayManager;\n    this.l10n = l10n;\n    this._reset();\n    if (closeButton) {\n      closeButton.addEventListener('click', this.close.bind(this));\n    }\n    this.overlayManager.register(this.overlayName, this.container, this.close.bind(this));\n  }\n\n  _createClass(PDFDocumentProperties, [{\n    key: 'open',\n    value: function open() {\n      var _this = this;\n\n      var freezeFieldData = function freezeFieldData(data) {\n        Object.defineProperty(_this, 'fieldData', {\n          value: Object.freeze(data),\n          writable: false,\n          enumerable: true,\n          configurable: true\n        });\n      };\n      Promise.all([this.overlayManager.open(this.overlayName), this._dataAvailableCapability.promise]).then(function () {\n        if (_this.fieldData) {\n          _this._updateUI();\n          return;\n        }\n        _this.pdfDocument.getMetadata().then(function (_ref2) {\n          var info = _ref2.info,\n              metadata = _ref2.metadata;\n\n          return Promise.all([info, metadata, _this._parseFileSize(_this.maybeFileSize), _this._parseDate(info.CreationDate), _this._parseDate(info.ModDate)]);\n        }).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 5),\n              info = _ref4[0],\n              metadata = _ref4[1],\n              fileSize = _ref4[2],\n              creationDate = _ref4[3],\n              modificationDate = _ref4[4];\n\n          freezeFieldData({\n            'fileName': (0, _ui_utils.getPDFFileNameFromURL)(_this.url),\n            'fileSize': fileSize,\n            'title': info.Title,\n            'author': info.Author,\n            'subject': info.Subject,\n            'keywords': info.Keywords,\n            'creationDate': creationDate,\n            'modificationDate': modificationDate,\n            'creator': info.Creator,\n            'producer': info.Producer,\n            'version': info.PDFFormatVersion,\n            'pageCount': _this.pdfDocument.numPages\n          });\n          _this._updateUI();\n          return _this.pdfDocument.getDownloadInfo();\n        }).then(function (_ref5) {\n          var length = _ref5.length;\n\n          return _this._parseFileSize(length);\n        }).then(function (fileSize) {\n          var data = (0, _ui_utils.cloneObj)(_this.fieldData);\n          data['fileSize'] = fileSize;\n          freezeFieldData(data);\n          _this._updateUI();\n        });\n      });\n    }\n  }, {\n    key: 'close',\n    value: function close() {\n      this.overlayManager.close(this.overlayName);\n    }\n  }, {\n    key: 'setDocument',\n    value: function setDocument(pdfDocument, url) {\n      if (this.pdfDocument) {\n        this._reset();\n        this._updateUI(true);\n      }\n      if (!pdfDocument) {\n        return;\n      }\n      this.pdfDocument = pdfDocument;\n      this.url = url;\n      this._dataAvailableCapability.resolve();\n    }\n  }, {\n    key: 'setFileSize',\n    value: function setFileSize(fileSize) {\n      if (typeof fileSize === 'number' && fileSize > 0) {\n        this.maybeFileSize = fileSize;\n      }\n    }\n  }, {\n    key: '_reset',\n    value: function _reset() {\n      this.pdfDocument = null;\n      this.url = null;\n      this.maybeFileSize = 0;\n      delete this.fieldData;\n      this._dataAvailableCapability = (0, _pdfjsLib.createPromiseCapability)();\n    }\n  }, {\n    key: '_updateUI',\n    value: function _updateUI() {\n      var reset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (reset || !this.fieldData) {\n        for (var id in this.fields) {\n          this.fields[id].textContent = DEFAULT_FIELD_CONTENT;\n        }\n        return;\n      }\n      if (this.overlayManager.active !== this.overlayName) {\n        return;\n      }\n      for (var _id in this.fields) {\n        var content = this.fieldData[_id];\n        this.fields[_id].textContent = content || content === 0 ? content : DEFAULT_FIELD_CONTENT;\n      }\n    }\n  }, {\n    key: '_parseFileSize',\n    value: function _parseFileSize() {\n      var fileSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      var kb = fileSize / 1024;\n      if (!kb) {\n        return Promise.resolve(undefined);\n      } else if (kb < 1024) {\n        return this.l10n.get('document_properties_kb', {\n          size_kb: (+kb.toPrecision(3)).toLocaleString(),\n          size_b: fileSize.toLocaleString()\n        }, '{{size_kb}} KB ({{size_b}} bytes)');\n      }\n      return this.l10n.get('document_properties_mb', {\n        size_mb: (+(kb / 1024).toPrecision(3)).toLocaleString(),\n        size_b: fileSize.toLocaleString()\n      }, '{{size_mb}} MB ({{size_b}} bytes)');\n    }\n  }, {\n    key: '_parseDate',\n    value: function _parseDate(inputDate) {\n      if (!inputDate) {\n        return;\n      }\n      var dateToParse = inputDate;\n      if (dateToParse.substring(0, 2) === 'D:') {\n        dateToParse = dateToParse.substring(2);\n      }\n      var year = parseInt(dateToParse.substring(0, 4), 10);\n      var month = parseInt(dateToParse.substring(4, 6), 10) - 1;\n      var day = parseInt(dateToParse.substring(6, 8), 10);\n      var hours = parseInt(dateToParse.substring(8, 10), 10);\n      var minutes = parseInt(dateToParse.substring(10, 12), 10);\n      var seconds = parseInt(dateToParse.substring(12, 14), 10);\n      var utRel = dateToParse.substring(14, 15);\n      var offsetHours = parseInt(dateToParse.substring(15, 17), 10);\n      var offsetMinutes = parseInt(dateToParse.substring(18, 20), 10);\n      if (utRel === '-') {\n        hours += offsetHours;\n        minutes += offsetMinutes;\n      } else if (utRel === '+') {\n        hours -= offsetHours;\n        minutes -= offsetMinutes;\n      }\n      var date = new Date(Date.UTC(year, month, day, hours, minutes, seconds));\n      var dateString = date.toLocaleDateString();\n      var timeString = date.toLocaleTimeString();\n      return this.l10n.get('document_properties_date_string', {\n        date: dateString,\n        time: timeString\n      }, '{{date}}, {{time}}');\n    }\n  }]);\n\n  return PDFDocumentProperties;\n}();\n\nexports.PDFDocumentProperties = PDFDocumentProperties;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFFindBar = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _pdf_find_controller = __webpack_require__(7);\n\nvar _ui_utils = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PDFFindBar = function () {\n  function PDFFindBar(options) {\n    var _this = this;\n\n    var l10n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _ui_utils.NullL10n;\n\n    _classCallCheck(this, PDFFindBar);\n\n    this.opened = false;\n    this.bar = options.bar || null;\n    this.toggleButton = options.toggleButton || null;\n    this.findField = options.findField || null;\n    this.highlightAll = options.highlightAllCheckbox || null;\n    this.caseSensitive = options.caseSensitiveCheckbox || null;\n    this.findMsg = options.findMsg || null;\n    this.findResultsCount = options.findResultsCount || null;\n    this.findStatusIcon = options.findStatusIcon || null;\n    this.findPreviousButton = options.findPreviousButton || null;\n    this.findNextButton = options.findNextButton || null;\n    this.findController = options.findController || null;\n    this.eventBus = options.eventBus;\n    this.l10n = l10n;\n    if (this.findController === null) {\n      throw new Error('PDFFindBar cannot be used without a ' + 'PDFFindController instance.');\n    }\n    this.toggleButton.addEventListener('click', function () {\n      _this.toggle();\n    });\n    this.findField.addEventListener('input', function () {\n      _this.dispatchEvent('');\n    });\n    this.bar.addEventListener('keydown', function (e) {\n      switch (e.keyCode) {\n        case 13:\n          if (e.target === _this.findField) {\n            _this.dispatchEvent('again', e.shiftKey);\n          }\n          break;\n        case 27:\n          _this.close();\n          break;\n      }\n    });\n    this.findPreviousButton.addEventListener('click', function () {\n      _this.dispatchEvent('again', true);\n    });\n    this.findNextButton.addEventListener('click', function () {\n      _this.dispatchEvent('again', false);\n    });\n    this.highlightAll.addEventListener('click', function () {\n      _this.dispatchEvent('highlightallchange');\n    });\n    this.caseSensitive.addEventListener('click', function () {\n      _this.dispatchEvent('casesensitivitychange');\n    });\n    this.eventBus.on('resize', this._adjustWidth.bind(this));\n  }\n\n  _createClass(PDFFindBar, [{\n    key: 'reset',\n    value: function reset() {\n      this.updateUIState();\n    }\n  }, {\n    key: 'dispatchEvent',\n    value: function dispatchEvent(type, findPrev) {\n      this.eventBus.dispatch('find', {\n        source: this,\n        type: type,\n        query: this.findField.value,\n        caseSensitive: this.caseSensitive.checked,\n        phraseSearch: true,\n        highlightAll: this.highlightAll.checked,\n        findPrevious: findPrev\n      });\n    }\n  }, {\n    key: 'updateUIState',\n    value: function updateUIState(state, previous, matchCount) {\n      var _this2 = this;\n\n      var notFound = false;\n      var findMsg = '';\n      var status = '';\n      switch (state) {\n        case _pdf_find_controller.FindState.FOUND:\n          break;\n        case _pdf_find_controller.FindState.PENDING:\n          status = 'pending';\n          break;\n        case _pdf_find_controller.FindState.NOT_FOUND:\n          findMsg = this.l10n.get('find_not_found', null, 'Phrase not found');\n          notFound = true;\n          break;\n        case _pdf_find_controller.FindState.WRAPPED:\n          if (previous) {\n            findMsg = this.l10n.get('find_reached_top', null, 'Reached top of document, continued from bottom');\n          } else {\n            findMsg = this.l10n.get('find_reached_bottom', null, 'Reached end of document, continued from top');\n          }\n          break;\n      }\n      if (notFound) {\n        this.findField.classList.add('notFound');\n      } else {\n        this.findField.classList.remove('notFound');\n      }\n      this.findField.setAttribute('data-status', status);\n      Promise.resolve(findMsg).then(function (msg) {\n        _this2.findMsg.textContent = msg;\n        _this2._adjustWidth();\n      });\n      this.updateResultsCount(matchCount);\n    }\n  }, {\n    key: 'updateResultsCount',\n    value: function updateResultsCount(matchCount) {\n      if (!this.findResultsCount) {\n        return;\n      }\n      if (!matchCount) {\n        this.findResultsCount.classList.add('hidden');\n        this.findResultsCount.textContent = '';\n      } else {\n        this.findResultsCount.textContent = matchCount.toLocaleString();\n        this.findResultsCount.classList.remove('hidden');\n      }\n      this._adjustWidth();\n    }\n  }, {\n    key: 'open',\n    value: function open() {\n      if (!this.opened) {\n        this.opened = true;\n        this.toggleButton.classList.add('toggled');\n        this.bar.classList.remove('hidden');\n      }\n      this.findField.select();\n      this.findField.focus();\n      this._adjustWidth();\n    }\n  }, {\n    key: 'close',\n    value: function close() {\n      if (!this.opened) {\n        return;\n      }\n      this.opened = false;\n      this.toggleButton.classList.remove('toggled');\n      this.bar.classList.add('hidden');\n      this.findController.active = false;\n    }\n  }, {\n    key: 'toggle',\n    value: function toggle() {\n      if (this.opened) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n  }, {\n    key: '_adjustWidth',\n    value: function _adjustWidth() {\n      if (!this.opened) {\n        return;\n      }\n      this.bar.classList.remove('wrapContainers');\n      var findbarHeight = this.bar.clientHeight;\n      var inputContainerHeight = this.bar.firstElementChild.clientHeight;\n      if (findbarHeight > inputContainerHeight) {\n        this.bar.classList.add('wrapContainers');\n      }\n    }\n  }]);\n\n  return PDFFindBar;\n}();\n\nexports.PDFFindBar = PDFFindBar;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFHistory = undefined;\n\nvar _dom_events = __webpack_require__(2);\n\nfunction PDFHistory(options) {\n  this.linkService = options.linkService;\n  this.eventBus = options.eventBus || (0, _dom_events.getGlobalEventBus)();\n  this.initialized = false;\n  this.initialDestination = null;\n  this.initialBookmark = null;\n}\nPDFHistory.prototype = {\n  initialize: function pdfHistoryInitialize(fingerprint) {\n    this.initialized = true;\n    this.reInitialized = false;\n    this.allowHashChange = true;\n    this.historyUnlocked = true;\n    this.isViewerInPresentationMode = false;\n    this.previousHash = window.location.hash.substring(1);\n    this.currentBookmark = '';\n    this.currentPage = 0;\n    this.updatePreviousBookmark = false;\n    this.previousBookmark = '';\n    this.previousPage = 0;\n    this.nextHashParam = '';\n    this.fingerprint = fingerprint;\n    this.currentUid = this.uid = 0;\n    this.current = {};\n    var state = window.history.state;\n    if (this._isStateObjectDefined(state)) {\n      if (state.target.dest) {\n        this.initialDestination = state.target.dest;\n      } else {\n        this.initialBookmark = state.target.hash;\n      }\n      this.currentUid = state.uid;\n      this.uid = state.uid + 1;\n      this.current = state.target;\n    } else {\n      if (state && state.fingerprint && this.fingerprint !== state.fingerprint) {\n        this.reInitialized = true;\n      }\n      this._pushOrReplaceState({ fingerprint: this.fingerprint }, true);\n    }\n    var self = this;\n    window.addEventListener('popstate', function pdfHistoryPopstate(evt) {\n      if (!self.historyUnlocked) {\n        return;\n      }\n      if (evt.state) {\n        self._goTo(evt.state);\n        return;\n      }\n      if (self.uid === 0) {\n        var previousParams = self.previousHash && self.currentBookmark && self.previousHash !== self.currentBookmark ? {\n          hash: self.currentBookmark,\n          page: self.currentPage\n        } : { page: 1 };\n        replacePreviousHistoryState(previousParams, function () {\n          updateHistoryWithCurrentHash();\n        });\n      } else {\n        updateHistoryWithCurrentHash();\n      }\n    });\n    function updateHistoryWithCurrentHash() {\n      self.previousHash = window.location.hash.slice(1);\n      self._pushToHistory({ hash: self.previousHash }, false, true);\n      self._updatePreviousBookmark();\n    }\n    function replacePreviousHistoryState(params, callback) {\n      self.historyUnlocked = false;\n      self.allowHashChange = false;\n      window.addEventListener('popstate', rewriteHistoryAfterBack);\n      history.back();\n      function rewriteHistoryAfterBack() {\n        window.removeEventListener('popstate', rewriteHistoryAfterBack);\n        window.addEventListener('popstate', rewriteHistoryAfterForward);\n        self._pushToHistory(params, false, true);\n        history.forward();\n      }\n      function rewriteHistoryAfterForward() {\n        window.removeEventListener('popstate', rewriteHistoryAfterForward);\n        self.allowHashChange = true;\n        self.historyUnlocked = true;\n        callback();\n      }\n    }\n    function pdfHistoryBeforeUnload() {\n      var previousParams = self._getPreviousParams(null, true);\n      if (previousParams) {\n        var replacePrevious = !self.current.dest && self.current.hash !== self.previousHash;\n        self._pushToHistory(previousParams, false, replacePrevious);\n        self._updatePreviousBookmark();\n      }\n      window.removeEventListener('beforeunload', pdfHistoryBeforeUnload);\n    }\n    window.addEventListener('beforeunload', pdfHistoryBeforeUnload);\n    window.addEventListener('pageshow', function pdfHistoryPageShow(evt) {\n      window.addEventListener('beforeunload', pdfHistoryBeforeUnload);\n    });\n    self.eventBus.on('presentationmodechanged', function (e) {\n      self.isViewerInPresentationMode = e.active;\n    });\n  },\n  clearHistoryState: function pdfHistory_clearHistoryState() {\n    this._pushOrReplaceState(null, true);\n  },\n  _isStateObjectDefined: function pdfHistory_isStateObjectDefined(state) {\n    return state && state.uid >= 0 && state.fingerprint && this.fingerprint === state.fingerprint && state.target && state.target.hash ? true : false;\n  },\n  _pushOrReplaceState: function pdfHistory_pushOrReplaceState(stateObj, replace) {\n    if (replace) {\n      window.history.replaceState(stateObj, '', document.URL);\n    } else {\n      window.history.pushState(stateObj, '', document.URL);\n    }\n  },\n  get isHashChangeUnlocked() {\n    if (!this.initialized) {\n      return true;\n    }\n    return this.allowHashChange;\n  },\n  _updatePreviousBookmark: function pdfHistory_updatePreviousBookmark() {\n    if (this.updatePreviousBookmark && this.currentBookmark && this.currentPage) {\n      this.previousBookmark = this.currentBookmark;\n      this.previousPage = this.currentPage;\n      this.updatePreviousBookmark = false;\n    }\n  },\n  updateCurrentBookmark: function pdfHistoryUpdateCurrentBookmark(bookmark, pageNum) {\n    if (this.initialized) {\n      this.currentBookmark = bookmark.substring(1);\n      this.currentPage = pageNum | 0;\n      this._updatePreviousBookmark();\n    }\n  },\n  updateNextHashParam: function pdfHistoryUpdateNextHashParam(param) {\n    if (this.initialized) {\n      this.nextHashParam = param;\n    }\n  },\n  push: function pdfHistoryPush(params, isInitialBookmark) {\n    if (!(this.initialized && this.historyUnlocked)) {\n      return;\n    }\n    if (params.dest && !params.hash) {\n      params.hash = this.current.hash && this.current.dest && this.current.dest === params.dest ? this.current.hash : this.linkService.getDestinationHash(params.dest).split('#')[1];\n    }\n    if (params.page) {\n      params.page |= 0;\n    }\n    if (isInitialBookmark) {\n      var target = window.history.state.target;\n      if (!target) {\n        this._pushToHistory(params, false);\n        this.previousHash = window.location.hash.substring(1);\n      }\n      this.updatePreviousBookmark = this.nextHashParam ? false : true;\n      if (target) {\n        this._updatePreviousBookmark();\n      }\n      return;\n    }\n    if (this.nextHashParam) {\n      if (this.nextHashParam === params.hash) {\n        this.nextHashParam = null;\n        this.updatePreviousBookmark = true;\n        return;\n      }\n      this.nextHashParam = null;\n    }\n    if (params.hash) {\n      if (this.current.hash) {\n        if (this.current.hash !== params.hash) {\n          this._pushToHistory(params, true);\n        } else {\n          if (!this.current.page && params.page) {\n            this._pushToHistory(params, false, true);\n          }\n          this.updatePreviousBookmark = true;\n        }\n      } else {\n        this._pushToHistory(params, true);\n      }\n    } else if (this.current.page && params.page && this.current.page !== params.page) {\n      this._pushToHistory(params, true);\n    }\n  },\n  _getPreviousParams: function pdfHistory_getPreviousParams(onlyCheckPage, beforeUnload) {\n    if (!(this.currentBookmark && this.currentPage)) {\n      return null;\n    } else if (this.updatePreviousBookmark) {\n      this.updatePreviousBookmark = false;\n    }\n    if (this.uid > 0 && !(this.previousBookmark && this.previousPage)) {\n      return null;\n    }\n    if (!this.current.dest && !onlyCheckPage || beforeUnload) {\n      if (this.previousBookmark === this.currentBookmark) {\n        return null;\n      }\n    } else if (this.current.page || onlyCheckPage) {\n      if (this.previousPage === this.currentPage) {\n        return null;\n      }\n    } else {\n      return null;\n    }\n    var params = {\n      hash: this.currentBookmark,\n      page: this.currentPage\n    };\n    if (this.isViewerInPresentationMode) {\n      params.hash = null;\n    }\n    return params;\n  },\n  _stateObj: function pdfHistory_stateObj(params) {\n    return {\n      fingerprint: this.fingerprint,\n      uid: this.uid,\n      target: params\n    };\n  },\n  _pushToHistory: function pdfHistory_pushToHistory(params, addPrevious, overwrite) {\n    if (!this.initialized) {\n      return;\n    }\n    if (!params.hash && params.page) {\n      params.hash = 'page=' + params.page;\n    }\n    if (addPrevious && !overwrite) {\n      var previousParams = this._getPreviousParams();\n      if (previousParams) {\n        var replacePrevious = !this.current.dest && this.current.hash !== this.previousHash;\n        this._pushToHistory(previousParams, false, replacePrevious);\n      }\n    }\n    this._pushOrReplaceState(this._stateObj(params), overwrite || this.uid === 0);\n    this.currentUid = this.uid++;\n    this.current = params;\n    this.updatePreviousBookmark = true;\n  },\n  _goTo: function pdfHistory_goTo(state) {\n    if (!(this.initialized && this.historyUnlocked && this._isStateObjectDefined(state))) {\n      return;\n    }\n    if (!this.reInitialized && state.uid < this.currentUid) {\n      var previousParams = this._getPreviousParams(true);\n      if (previousParams) {\n        this._pushToHistory(this.current, false);\n        this._pushToHistory(previousParams, false);\n        this.currentUid = state.uid;\n        window.history.back();\n        return;\n      }\n    }\n    this.historyUnlocked = false;\n    if (state.target.dest) {\n      this.linkService.navigateTo(state.target.dest);\n    } else {\n      this.linkService.setHash(state.target.hash);\n    }\n    this.currentUid = state.uid;\n    if (state.uid > this.uid) {\n      this.uid = state.uid;\n    }\n    this.current = state.target;\n    this.updatePreviousBookmark = true;\n    var currentHash = window.location.hash.substring(1);\n    if (this.previousHash !== currentHash) {\n      this.allowHashChange = false;\n    }\n    this.previousHash = currentHash;\n    this.historyUnlocked = true;\n  },\n  back: function pdfHistoryBack() {\n    this.go(-1);\n  },\n  forward: function pdfHistoryForward() {\n    this.go(1);\n  },\n  go: function pdfHistoryGo(direction) {\n    if (this.initialized && this.historyUnlocked) {\n      var state = window.history.state;\n      if (direction === -1 && state && state.uid > 0) {\n        window.history.back();\n      } else if (direction === 1 && state && state.uid < this.uid - 1) {\n        window.history.forward();\n      }\n    }\n  }\n};\nexports.PDFHistory = PDFHistory;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFOutlineViewer = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _pdfjsLib = __webpack_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DEFAULT_TITLE = '\\u2013';\n\nvar PDFOutlineViewer = function () {\n  function PDFOutlineViewer(_ref) {\n    var container = _ref.container,\n        linkService = _ref.linkService,\n        eventBus = _ref.eventBus;\n\n    _classCallCheck(this, PDFOutlineViewer);\n\n    this.outline = null;\n    this.lastToggleIsShow = true;\n    this.container = container;\n    this.linkService = linkService;\n    this.eventBus = eventBus;\n  }\n\n  _createClass(PDFOutlineViewer, [{\n    key: 'reset',\n    value: function reset() {\n      this.outline = null;\n      this.lastToggleIsShow = true;\n      this.container.textContent = '';\n      this.container.classList.remove('outlineWithDeepNesting');\n    }\n  }, {\n    key: '_dispatchEvent',\n    value: function _dispatchEvent(outlineCount) {\n      this.eventBus.dispatch('outlineloaded', {\n        source: this,\n        outlineCount: outlineCount\n      });\n    }\n  }, {\n    key: '_bindLink',\n    value: function _bindLink(element, item) {\n      var _this = this;\n\n      if (item.url) {\n        (0, _pdfjsLib.addLinkAttributes)(element, {\n          url: item.url,\n          target: item.newWindow ? _pdfjsLib.PDFJS.LinkTarget.BLANK : undefined\n        });\n        return;\n      }\n      var destination = item.dest;\n      element.href = this.linkService.getDestinationHash(destination);\n      element.onclick = function () {\n        if (destination) {\n          _this.linkService.navigateTo(destination);\n        }\n        return false;\n      };\n    }\n  }, {\n    key: '_setStyles',\n    value: function _setStyles(element, item) {\n      var styleStr = '';\n      if (item.bold) {\n        styleStr += 'font-weight: bold;';\n      }\n      if (item.italic) {\n        styleStr += 'font-style: italic;';\n      }\n      if (styleStr) {\n        element.setAttribute('style', styleStr);\n      }\n    }\n  }, {\n    key: '_addToggleButton',\n    value: function _addToggleButton(div) {\n      var _this2 = this;\n\n      var toggler = document.createElement('div');\n      toggler.className = 'outlineItemToggler';\n      toggler.onclick = function (evt) {\n        evt.stopPropagation();\n        toggler.classList.toggle('outlineItemsHidden');\n        if (evt.shiftKey) {\n          var shouldShowAll = !toggler.classList.contains('outlineItemsHidden');\n          _this2._toggleOutlineItem(div, shouldShowAll);\n        }\n      };\n      div.insertBefore(toggler, div.firstChild);\n    }\n  }, {\n    key: '_toggleOutlineItem',\n    value: function _toggleOutlineItem(root, show) {\n      this.lastToggleIsShow = show;\n      var togglers = root.querySelectorAll('.outlineItemToggler');\n      for (var i = 0, ii = togglers.length; i < ii; ++i) {\n        togglers[i].classList[show ? 'remove' : 'add']('outlineItemsHidden');\n      }\n    }\n  }, {\n    key: 'toggleOutlineTree',\n    value: function toggleOutlineTree() {\n      if (!this.outline) {\n        return;\n      }\n      this._toggleOutlineItem(this.container, !this.lastToggleIsShow);\n    }\n  }, {\n    key: 'render',\n    value: function render(_ref2) {\n      var outline = _ref2.outline;\n\n      var outlineCount = 0;\n      if (this.outline) {\n        this.reset();\n      }\n      this.outline = outline || null;\n      if (!outline) {\n        this._dispatchEvent(outlineCount);\n        return;\n      }\n      var fragment = document.createDocumentFragment();\n      var queue = [{\n        parent: fragment,\n        items: this.outline\n      }];\n      var hasAnyNesting = false;\n      while (queue.length > 0) {\n        var levelData = queue.shift();\n        for (var i = 0, len = levelData.items.length; i < len; i++) {\n          var item = levelData.items[i];\n          var div = document.createElement('div');\n          div.className = 'outlineItem';\n          var element = document.createElement('a');\n          this._bindLink(element, item);\n          this._setStyles(element, item);\n          element.textContent = (0, _pdfjsLib.removeNullCharacters)(item.title) || DEFAULT_TITLE;\n          div.appendChild(element);\n          if (item.items.length > 0) {\n            hasAnyNesting = true;\n            this._addToggleButton(div);\n            var itemsDiv = document.createElement('div');\n            itemsDiv.className = 'outlineItems';\n            div.appendChild(itemsDiv);\n            queue.push({\n              parent: itemsDiv,\n              items: item.items\n            });\n          }\n          levelData.parent.appendChild(div);\n          outlineCount++;\n        }\n      }\n      if (hasAnyNesting) {\n        this.container.classList.add('outlineWithDeepNesting');\n      }\n      this.container.appendChild(fragment);\n      this._dispatchEvent(outlineCount);\n    }\n  }]);\n\n  return PDFOutlineViewer;\n}();\n\nexports.PDFOutlineViewer = PDFOutlineViewer;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFPageView = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ui_utils = __webpack_require__(0);\n\nvar _pdfjsLib = __webpack_require__(1);\n\nvar _dom_events = __webpack_require__(2);\n\nvar _pdf_rendering_queue = __webpack_require__(3);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PDFPageView = function () {\n  function PDFPageView(options) {\n    _classCallCheck(this, PDFPageView);\n\n    var container = options.container;\n    var defaultViewport = options.defaultViewport;\n    this.id = options.id;\n    this.renderingId = 'page' + this.id;\n    this.pdfPage = null;\n    this.pageLabel = null;\n    this.rotation = 0;\n    this.scale = options.scale || _ui_utils.DEFAULT_SCALE;\n    this.viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n    this.hasRestrictedScaling = false;\n    this.enhanceTextSelection = options.enhanceTextSelection || false;\n    this.renderInteractiveForms = options.renderInteractiveForms || false;\n    this.eventBus = options.eventBus || (0, _dom_events.getGlobalEventBus)();\n    this.renderingQueue = options.renderingQueue;\n    this.textLayerFactory = options.textLayerFactory;\n    this.annotationLayerFactory = options.annotationLayerFactory;\n    this.renderer = options.renderer || _ui_utils.RendererType.CANVAS;\n    this.l10n = options.l10n || _ui_utils.NullL10n;\n    this.paintTask = null;\n    this.paintedViewportMap = new WeakMap();\n    this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n    this.resume = null;\n    this.error = null;\n    this.onBeforeDraw = null;\n    this.onAfterDraw = null;\n    this.annotationLayer = null;\n    this.textLayer = null;\n    this.zoomLayer = null;\n    var div = document.createElement('div');\n    div.className = 'page';\n    div.style.width = Math.floor(this.viewport.width) + 'px';\n    div.style.height = Math.floor(this.viewport.height) + 'px';\n    div.setAttribute('data-page-number', this.id);\n    this.div = div;\n    container.appendChild(div);\n  }\n\n  _createClass(PDFPageView, [{\n    key: 'setPdfPage',\n    value: function setPdfPage(pdfPage) {\n      this.pdfPage = pdfPage;\n      this.pdfPageRotate = pdfPage.rotate;\n      var totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n      this.viewport = pdfPage.getViewport(this.scale * _ui_utils.CSS_UNITS, totalRotation);\n      this.stats = pdfPage.stats;\n      this.reset();\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.reset();\n      if (this.pdfPage) {\n        this.pdfPage.cleanup();\n        this.pdfPage = null;\n      }\n    }\n  }, {\n    key: '_resetZoomLayer',\n    value: function _resetZoomLayer() {\n      var removeFromDOM = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!this.zoomLayer) {\n        return;\n      }\n      var zoomLayerCanvas = this.zoomLayer.firstChild;\n      this.paintedViewportMap.delete(zoomLayerCanvas);\n      zoomLayerCanvas.width = 0;\n      zoomLayerCanvas.height = 0;\n      if (removeFromDOM) {\n        this.zoomLayer.remove();\n      }\n      this.zoomLayer = null;\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      var keepZoomLayer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var keepAnnotations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      this.cancelRendering();\n      var div = this.div;\n      div.style.width = Math.floor(this.viewport.width) + 'px';\n      div.style.height = Math.floor(this.viewport.height) + 'px';\n      var childNodes = div.childNodes;\n      var currentZoomLayerNode = keepZoomLayer && this.zoomLayer || null;\n      var currentAnnotationNode = keepAnnotations && this.annotationLayer && this.annotationLayer.div || null;\n      for (var i = childNodes.length - 1; i >= 0; i--) {\n        var node = childNodes[i];\n        if (currentZoomLayerNode === node || currentAnnotationNode === node) {\n          continue;\n        }\n        div.removeChild(node);\n      }\n      div.removeAttribute('data-loaded');\n      if (currentAnnotationNode) {\n        this.annotationLayer.hide();\n      } else {\n        this.annotationLayer = null;\n      }\n      if (!currentZoomLayerNode) {\n        if (this.canvas) {\n          this.paintedViewportMap.delete(this.canvas);\n          this.canvas.width = 0;\n          this.canvas.height = 0;\n          delete this.canvas;\n        }\n        this._resetZoomLayer();\n      }\n      if (this.svg) {\n        this.paintedViewportMap.delete(this.svg);\n        delete this.svg;\n      }\n      this.loadingIconDiv = document.createElement('div');\n      this.loadingIconDiv.className = 'loadingIcon';\n      div.appendChild(this.loadingIconDiv);\n    }\n  }, {\n    key: 'update',\n    value: function update(scale, rotation) {\n      this.scale = scale || this.scale;\n      if (typeof rotation !== 'undefined') {\n        this.rotation = rotation;\n      }\n      var totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n      this.viewport = this.viewport.clone({\n        scale: this.scale * _ui_utils.CSS_UNITS,\n        rotation: totalRotation\n      });\n      if (this.svg) {\n        this.cssTransform(this.svg, true);\n        this.eventBus.dispatch('pagerendered', {\n          source: this,\n          pageNumber: this.id,\n          cssTransform: true\n        });\n        return;\n      }\n      var isScalingRestricted = false;\n      if (this.canvas && _pdfjsLib.PDFJS.maxCanvasPixels > 0) {\n        var outputScale = this.outputScale;\n        if ((Math.floor(this.viewport.width) * outputScale.sx | 0) * (Math.floor(this.viewport.height) * outputScale.sy | 0) > _pdfjsLib.PDFJS.maxCanvasPixels) {\n          isScalingRestricted = true;\n        }\n      }\n      if (this.canvas) {\n        if (_pdfjsLib.PDFJS.useOnlyCssZoom || this.hasRestrictedScaling && isScalingRestricted) {\n          this.cssTransform(this.canvas, true);\n          this.eventBus.dispatch('pagerendered', {\n            source: this,\n            pageNumber: this.id,\n            cssTransform: true\n          });\n          return;\n        }\n        if (!this.zoomLayer && !this.canvas.hasAttribute('hidden')) {\n          this.zoomLayer = this.canvas.parentNode;\n          this.zoomLayer.style.position = 'absolute';\n        }\n      }\n      if (this.zoomLayer) {\n        this.cssTransform(this.zoomLayer.firstChild);\n      }\n      this.reset(true, true);\n    }\n  }, {\n    key: 'cancelRendering',\n    value: function cancelRendering() {\n      if (this.paintTask) {\n        this.paintTask.cancel();\n        this.paintTask = null;\n      }\n      this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n      this.resume = null;\n      if (this.textLayer) {\n        this.textLayer.cancel();\n        this.textLayer = null;\n      }\n    }\n  }, {\n    key: 'cssTransform',\n    value: function cssTransform(target) {\n      var redrawAnnotations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var width = this.viewport.width;\n      var height = this.viewport.height;\n      var div = this.div;\n      target.style.width = target.parentNode.style.width = div.style.width = Math.floor(width) + 'px';\n      target.style.height = target.parentNode.style.height = div.style.height = Math.floor(height) + 'px';\n      var relativeRotation = this.viewport.rotation - this.paintedViewportMap.get(target).rotation;\n      var absRotation = Math.abs(relativeRotation);\n      var scaleX = 1,\n          scaleY = 1;\n      if (absRotation === 90 || absRotation === 270) {\n        scaleX = height / width;\n        scaleY = width / height;\n      }\n      var cssTransform = 'rotate(' + relativeRotation + 'deg) ' + 'scale(' + scaleX + ',' + scaleY + ')';\n      _pdfjsLib.CustomStyle.setProp('transform', target, cssTransform);\n      if (this.textLayer) {\n        var textLayerViewport = this.textLayer.viewport;\n        var textRelativeRotation = this.viewport.rotation - textLayerViewport.rotation;\n        var textAbsRotation = Math.abs(textRelativeRotation);\n        var scale = width / textLayerViewport.width;\n        if (textAbsRotation === 90 || textAbsRotation === 270) {\n          scale = width / textLayerViewport.height;\n        }\n        var textLayerDiv = this.textLayer.textLayerDiv;\n        var transX = void 0,\n            transY = void 0;\n        switch (textAbsRotation) {\n          case 0:\n            transX = transY = 0;\n            break;\n          case 90:\n            transX = 0;\n            transY = '-' + textLayerDiv.style.height;\n            break;\n          case 180:\n            transX = '-' + textLayerDiv.style.width;\n            transY = '-' + textLayerDiv.style.height;\n            break;\n          case 270:\n            transX = '-' + textLayerDiv.style.width;\n            transY = 0;\n            break;\n          default:\n            console.error('Bad rotation value.');\n            break;\n        }\n        _pdfjsLib.CustomStyle.setProp('transform', textLayerDiv, 'rotate(' + textAbsRotation + 'deg) ' + 'scale(' + scale + ', ' + scale + ') ' + 'translate(' + transX + ', ' + transY + ')');\n        _pdfjsLib.CustomStyle.setProp('transformOrigin', textLayerDiv, '0% 0%');\n      }\n      if (redrawAnnotations && this.annotationLayer) {\n        this.annotationLayer.render(this.viewport, 'display');\n      }\n    }\n  }, {\n    key: 'getPagePoint',\n    value: function getPagePoint(x, y) {\n      return this.viewport.convertToPdfPoint(x, y);\n    }\n  }, {\n    key: 'draw',\n    value: function draw() {\n      var _this = this;\n\n      if (this.renderingState !== _pdf_rendering_queue.RenderingStates.INITIAL) {\n        console.error('Must be in new state before drawing');\n        this.reset();\n      }\n      if (!this.pdfPage) {\n        this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n        return Promise.reject(new Error('Page is not loaded'));\n      }\n      this.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n      var pdfPage = this.pdfPage;\n      var div = this.div;\n      var canvasWrapper = document.createElement('div');\n      canvasWrapper.style.width = div.style.width;\n      canvasWrapper.style.height = div.style.height;\n      canvasWrapper.classList.add('canvasWrapper');\n      if (this.annotationLayer && this.annotationLayer.div) {\n        div.insertBefore(canvasWrapper, this.annotationLayer.div);\n      } else {\n        div.appendChild(canvasWrapper);\n      }\n      var textLayer = null;\n      if (this.textLayerFactory) {\n        var textLayerDiv = document.createElement('div');\n        textLayerDiv.className = 'textLayer';\n        textLayerDiv.style.width = canvasWrapper.style.width;\n        textLayerDiv.style.height = canvasWrapper.style.height;\n        if (this.annotationLayer && this.annotationLayer.div) {\n          div.insertBefore(textLayerDiv, this.annotationLayer.div);\n        } else {\n          div.appendChild(textLayerDiv);\n        }\n        textLayer = this.textLayerFactory.createTextLayerBuilder(textLayerDiv, this.id - 1, this.viewport, this.enhanceTextSelection);\n      }\n      this.textLayer = textLayer;\n      var renderContinueCallback = null;\n      if (this.renderingQueue) {\n        renderContinueCallback = function renderContinueCallback(cont) {\n          if (!_this.renderingQueue.isHighestPriority(_this)) {\n            _this.renderingState = _pdf_rendering_queue.RenderingStates.PAUSED;\n            _this.resume = function () {\n              _this.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n              cont();\n            };\n            return;\n          }\n          cont();\n        };\n      }\n      var finishPaintTask = function finishPaintTask(error) {\n        if (paintTask === _this.paintTask) {\n          _this.paintTask = null;\n        }\n        if (error === 'cancelled' || error instanceof _pdfjsLib.RenderingCancelledException) {\n          _this.error = null;\n          return Promise.resolve(undefined);\n        }\n        _this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n        if (_this.loadingIconDiv) {\n          div.removeChild(_this.loadingIconDiv);\n          delete _this.loadingIconDiv;\n        }\n        _this._resetZoomLayer(true);\n        _this.error = error;\n        _this.stats = pdfPage.stats;\n        if (_this.onAfterDraw) {\n          _this.onAfterDraw();\n        }\n        _this.eventBus.dispatch('pagerendered', {\n          source: _this,\n          pageNumber: _this.id,\n          cssTransform: false\n        });\n        if (error) {\n          return Promise.reject(error);\n        }\n        return Promise.resolve(undefined);\n      };\n      var paintTask = this.renderer === _ui_utils.RendererType.SVG ? this.paintOnSvg(canvasWrapper) : this.paintOnCanvas(canvasWrapper);\n      paintTask.onRenderContinue = renderContinueCallback;\n      this.paintTask = paintTask;\n      var resultPromise = paintTask.promise.then(function () {\n        return finishPaintTask(null).then(function () {\n          if (textLayer) {\n            var readableStream = pdfPage.streamTextContent({ normalizeWhitespace: true });\n            textLayer.setTextContentStream(readableStream);\n            textLayer.render();\n          }\n        });\n      }, function (reason) {\n        return finishPaintTask(reason);\n      });\n      if (this.annotationLayerFactory) {\n        if (!this.annotationLayer) {\n          this.annotationLayer = this.annotationLayerFactory.createAnnotationLayerBuilder(div, pdfPage, this.renderInteractiveForms, this.l10n);\n        }\n        this.annotationLayer.render(this.viewport, 'display');\n      }\n      div.setAttribute('data-loaded', true);\n      if (this.onBeforeDraw) {\n        this.onBeforeDraw();\n      }\n      return resultPromise;\n    }\n  }, {\n    key: 'paintOnCanvas',\n    value: function paintOnCanvas(canvasWrapper) {\n      var renderCapability = (0, _pdfjsLib.createPromiseCapability)();\n      var result = {\n        promise: renderCapability.promise,\n        onRenderContinue: function onRenderContinue(cont) {\n          cont();\n        },\n        cancel: function cancel() {\n          renderTask.cancel();\n        }\n      };\n      var viewport = this.viewport;\n      var canvas = document.createElement('canvas');\n      canvas.id = this.renderingId;\n      canvas.setAttribute('hidden', 'hidden');\n      var isCanvasHidden = true;\n      var showCanvas = function showCanvas() {\n        if (isCanvasHidden) {\n          canvas.removeAttribute('hidden');\n          isCanvasHidden = false;\n        }\n      };\n      canvasWrapper.appendChild(canvas);\n      this.canvas = canvas;\n      canvas.mozOpaque = true;\n      var ctx = canvas.getContext('2d', { alpha: false });\n      var outputScale = (0, _ui_utils.getOutputScale)(ctx);\n      this.outputScale = outputScale;\n      if (_pdfjsLib.PDFJS.useOnlyCssZoom) {\n        var actualSizeViewport = viewport.clone({ scale: _ui_utils.CSS_UNITS });\n        outputScale.sx *= actualSizeViewport.width / viewport.width;\n        outputScale.sy *= actualSizeViewport.height / viewport.height;\n        outputScale.scaled = true;\n      }\n      if (_pdfjsLib.PDFJS.maxCanvasPixels > 0) {\n        var pixelsInViewport = viewport.width * viewport.height;\n        var maxScale = Math.sqrt(_pdfjsLib.PDFJS.maxCanvasPixels / pixelsInViewport);\n        if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\n          outputScale.sx = maxScale;\n          outputScale.sy = maxScale;\n          outputScale.scaled = true;\n          this.hasRestrictedScaling = true;\n        } else {\n          this.hasRestrictedScaling = false;\n        }\n      }\n      var sfx = (0, _ui_utils.approximateFraction)(outputScale.sx);\n      var sfy = (0, _ui_utils.approximateFraction)(outputScale.sy);\n      canvas.width = (0, _ui_utils.roundToDivide)(viewport.width * outputScale.sx, sfx[0]);\n      canvas.height = (0, _ui_utils.roundToDivide)(viewport.height * outputScale.sy, sfy[0]);\n      canvas.style.width = (0, _ui_utils.roundToDivide)(viewport.width, sfx[1]) + 'px';\n      canvas.style.height = (0, _ui_utils.roundToDivide)(viewport.height, sfy[1]) + 'px';\n      this.paintedViewportMap.set(canvas, viewport);\n      var transform = !outputScale.scaled ? null : [outputScale.sx, 0, 0, outputScale.sy, 0, 0];\n      var renderContext = {\n        canvasContext: ctx,\n        transform: transform,\n        viewport: this.viewport,\n        renderInteractiveForms: this.renderInteractiveForms\n      };\n      var renderTask = this.pdfPage.render(renderContext);\n      renderTask.onContinue = function (cont) {\n        showCanvas();\n        if (result.onRenderContinue) {\n          result.onRenderContinue(cont);\n        } else {\n          cont();\n        }\n      };\n      renderTask.promise.then(function () {\n        showCanvas();\n        renderCapability.resolve(undefined);\n      }, function (error) {\n        showCanvas();\n        renderCapability.reject(error);\n      });\n      return result;\n    }\n  }, {\n    key: 'paintOnSvg',\n    value: function paintOnSvg(wrapper) {\n      var _this2 = this;\n\n      var cancelled = false;\n      var ensureNotCancelled = function ensureNotCancelled() {\n        if (cancelled) {\n          if (_pdfjsLib.PDFJS.pdfjsNext) {\n            throw new _pdfjsLib.RenderingCancelledException('Rendering cancelled, page ' + _this2.id, 'svg');\n          } else {\n            throw 'cancelled';\n          }\n        }\n      };\n      var pdfPage = this.pdfPage;\n      var actualSizeViewport = this.viewport.clone({ scale: _ui_utils.CSS_UNITS });\n      var promise = pdfPage.getOperatorList().then(function (opList) {\n        ensureNotCancelled();\n        var svgGfx = new _pdfjsLib.SVGGraphics(pdfPage.commonObjs, pdfPage.objs);\n        return svgGfx.getSVG(opList, actualSizeViewport).then(function (svg) {\n          ensureNotCancelled();\n          _this2.svg = svg;\n          _this2.paintedViewportMap.set(svg, actualSizeViewport);\n          svg.style.width = wrapper.style.width;\n          svg.style.height = wrapper.style.height;\n          _this2.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n          wrapper.appendChild(svg);\n        });\n      });\n      return {\n        promise: promise,\n        onRenderContinue: function onRenderContinue(cont) {\n          cont();\n        },\n        cancel: function cancel() {\n          cancelled = true;\n        }\n      };\n    }\n  }, {\n    key: 'setPageLabel',\n    value: function setPageLabel(label) {\n      this.pageLabel = typeof label === 'string' ? label : null;\n      if (this.pageLabel !== null) {\n        this.div.setAttribute('data-page-label', this.pageLabel);\n      } else {\n        this.div.removeAttribute('data-page-label');\n      }\n    }\n  }, {\n    key: 'width',\n    get: function get() {\n      return this.viewport.width;\n    }\n  }, {\n    key: 'height',\n    get: function get() {\n      return this.viewport.height;\n    }\n  }]);\n\n  return PDFPageView;\n}();\n\nexports.PDFPageView = PDFPageView;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFPresentationMode = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ui_utils = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS = 1500;\nvar DELAY_BEFORE_HIDING_CONTROLS = 3000;\nvar ACTIVE_SELECTOR = 'pdfPresentationMode';\nvar CONTROLS_SELECTOR = 'pdfPresentationModeControls';\nvar MOUSE_SCROLL_COOLDOWN_TIME = 50;\nvar PAGE_SWITCH_THRESHOLD = 0.1;\nvar SWIPE_MIN_DISTANCE_THRESHOLD = 50;\nvar SWIPE_ANGLE_THRESHOLD = Math.PI / 6;\n\nvar PDFPresentationMode = function () {\n  function PDFPresentationMode(_ref) {\n    var _this = this;\n\n    var container = _ref.container,\n        _ref$viewer = _ref.viewer,\n        viewer = _ref$viewer === undefined ? null : _ref$viewer,\n        pdfViewer = _ref.pdfViewer,\n        eventBus = _ref.eventBus,\n        _ref$contextMenuItems = _ref.contextMenuItems,\n        contextMenuItems = _ref$contextMenuItems === undefined ? null : _ref$contextMenuItems;\n\n    _classCallCheck(this, PDFPresentationMode);\n\n    this.container = container;\n    this.viewer = viewer || container.firstElementChild;\n    this.pdfViewer = pdfViewer;\n    this.eventBus = eventBus;\n    this.active = false;\n    this.args = null;\n    this.contextMenuOpen = false;\n    this.mouseScrollTimeStamp = 0;\n    this.mouseScrollDelta = 0;\n    this.touchSwipeState = null;\n    if (contextMenuItems) {\n      contextMenuItems.contextFirstPage.addEventListener('click', function () {\n        _this.contextMenuOpen = false;\n        _this.eventBus.dispatch('firstpage');\n      });\n      contextMenuItems.contextLastPage.addEventListener('click', function () {\n        _this.contextMenuOpen = false;\n        _this.eventBus.dispatch('lastpage');\n      });\n      contextMenuItems.contextPageRotateCw.addEventListener('click', function () {\n        _this.contextMenuOpen = false;\n        _this.eventBus.dispatch('rotatecw');\n      });\n      contextMenuItems.contextPageRotateCcw.addEventListener('click', function () {\n        _this.contextMenuOpen = false;\n        _this.eventBus.dispatch('rotateccw');\n      });\n    }\n  }\n\n  _createClass(PDFPresentationMode, [{\n    key: 'request',\n    value: function request() {\n      if (this.switchInProgress || this.active || !this.viewer.hasChildNodes()) {\n        return false;\n      }\n      this._addFullscreenChangeListeners();\n      this._setSwitchInProgress();\n      this._notifyStateChange();\n      if (this.container.requestFullscreen) {\n        this.container.requestFullscreen();\n      } else if (this.container.mozRequestFullScreen) {\n        this.container.mozRequestFullScreen();\n      } else if (this.container.webkitRequestFullscreen) {\n        this.container.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n      } else if (this.container.msRequestFullscreen) {\n        this.container.msRequestFullscreen();\n      } else {\n        return false;\n      }\n      this.args = {\n        page: this.pdfViewer.currentPageNumber,\n        previousScale: this.pdfViewer.currentScaleValue\n      };\n      return true;\n    }\n  }, {\n    key: '_mouseWheel',\n    value: function _mouseWheel(evt) {\n      if (!this.active) {\n        return;\n      }\n      evt.preventDefault();\n      var delta = (0, _ui_utils.normalizeWheelEventDelta)(evt);\n      var currentTime = new Date().getTime();\n      var storedTime = this.mouseScrollTimeStamp;\n      if (currentTime > storedTime && currentTime - storedTime < MOUSE_SCROLL_COOLDOWN_TIME) {\n        return;\n      }\n      if (this.mouseScrollDelta > 0 && delta < 0 || this.mouseScrollDelta < 0 && delta > 0) {\n        this._resetMouseScrollState();\n      }\n      this.mouseScrollDelta += delta;\n      if (Math.abs(this.mouseScrollDelta) >= PAGE_SWITCH_THRESHOLD) {\n        var totalDelta = this.mouseScrollDelta;\n        this._resetMouseScrollState();\n        var success = totalDelta > 0 ? this._goToPreviousPage() : this._goToNextPage();\n        if (success) {\n          this.mouseScrollTimeStamp = currentTime;\n        }\n      }\n    }\n  }, {\n    key: '_goToPreviousPage',\n    value: function _goToPreviousPage() {\n      var page = this.pdfViewer.currentPageNumber;\n      if (page <= 1) {\n        return false;\n      }\n      this.pdfViewer.currentPageNumber = page - 1;\n      return true;\n    }\n  }, {\n    key: '_goToNextPage',\n    value: function _goToNextPage() {\n      var page = this.pdfViewer.currentPageNumber;\n      if (page >= this.pdfViewer.pagesCount) {\n        return false;\n      }\n      this.pdfViewer.currentPageNumber = page + 1;\n      return true;\n    }\n  }, {\n    key: '_notifyStateChange',\n    value: function _notifyStateChange() {\n      this.eventBus.dispatch('presentationmodechanged', {\n        source: this,\n        active: this.active,\n        switchInProgress: !!this.switchInProgress\n      });\n    }\n  }, {\n    key: '_setSwitchInProgress',\n    value: function _setSwitchInProgress() {\n      var _this2 = this;\n\n      if (this.switchInProgress) {\n        clearTimeout(this.switchInProgress);\n      }\n      this.switchInProgress = setTimeout(function () {\n        _this2._removeFullscreenChangeListeners();\n        delete _this2.switchInProgress;\n        _this2._notifyStateChange();\n      }, DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS);\n    }\n  }, {\n    key: '_resetSwitchInProgress',\n    value: function _resetSwitchInProgress() {\n      if (this.switchInProgress) {\n        clearTimeout(this.switchInProgress);\n        delete this.switchInProgress;\n      }\n    }\n  }, {\n    key: '_enter',\n    value: function _enter() {\n      var _this3 = this;\n\n      this.active = true;\n      this._resetSwitchInProgress();\n      this._notifyStateChange();\n      this.container.classList.add(ACTIVE_SELECTOR);\n      setTimeout(function () {\n        _this3.pdfViewer.currentPageNumber = _this3.args.page;\n        _this3.pdfViewer.currentScaleValue = 'page-fit';\n      }, 0);\n      this._addWindowListeners();\n      this._showControls();\n      this.contextMenuOpen = false;\n      this.container.setAttribute('contextmenu', 'viewerContextMenu');\n      window.getSelection().removeAllRanges();\n    }\n  }, {\n    key: '_exit',\n    value: function _exit() {\n      var _this4 = this;\n\n      var page = this.pdfViewer.currentPageNumber;\n      this.container.classList.remove(ACTIVE_SELECTOR);\n      setTimeout(function () {\n        _this4.active = false;\n        _this4._removeFullscreenChangeListeners();\n        _this4._notifyStateChange();\n        _this4.pdfViewer.currentScaleValue = _this4.args.previousScale;\n        _this4.pdfViewer.currentPageNumber = page;\n        _this4.args = null;\n      }, 0);\n      this._removeWindowListeners();\n      this._hideControls();\n      this._resetMouseScrollState();\n      this.container.removeAttribute('contextmenu');\n      this.contextMenuOpen = false;\n    }\n  }, {\n    key: '_mouseDown',\n    value: function _mouseDown(evt) {\n      if (this.contextMenuOpen) {\n        this.contextMenuOpen = false;\n        evt.preventDefault();\n        return;\n      }\n      if (evt.button === 0) {\n        var isInternalLink = evt.target.href && evt.target.classList.contains('internalLink');\n        if (!isInternalLink) {\n          evt.preventDefault();\n          if (evt.shiftKey) {\n            this._goToPreviousPage();\n          } else {\n            this._goToNextPage();\n          }\n        }\n      }\n    }\n  }, {\n    key: '_contextMenu',\n    value: function _contextMenu() {\n      this.contextMenuOpen = true;\n    }\n  }, {\n    key: '_showControls',\n    value: function _showControls() {\n      var _this5 = this;\n\n      if (this.controlsTimeout) {\n        clearTimeout(this.controlsTimeout);\n      } else {\n        this.container.classList.add(CONTROLS_SELECTOR);\n      }\n      this.controlsTimeout = setTimeout(function () {\n        _this5.container.classList.remove(CONTROLS_SELECTOR);\n        delete _this5.controlsTimeout;\n      }, DELAY_BEFORE_HIDING_CONTROLS);\n    }\n  }, {\n    key: '_hideControls',\n    value: function _hideControls() {\n      if (!this.controlsTimeout) {\n        return;\n      }\n      clearTimeout(this.controlsTimeout);\n      this.container.classList.remove(CONTROLS_SELECTOR);\n      delete this.controlsTimeout;\n    }\n  }, {\n    key: '_resetMouseScrollState',\n    value: function _resetMouseScrollState() {\n      this.mouseScrollTimeStamp = 0;\n      this.mouseScrollDelta = 0;\n    }\n  }, {\n    key: '_touchSwipe',\n    value: function _touchSwipe(evt) {\n      if (!this.active) {\n        return;\n      }\n      if (evt.touches.length > 1) {\n        this.touchSwipeState = null;\n        return;\n      }\n      switch (evt.type) {\n        case 'touchstart':\n          this.touchSwipeState = {\n            startX: evt.touches[0].pageX,\n            startY: evt.touches[0].pageY,\n            endX: evt.touches[0].pageX,\n            endY: evt.touches[0].pageY\n          };\n          break;\n        case 'touchmove':\n          if (this.touchSwipeState === null) {\n            return;\n          }\n          this.touchSwipeState.endX = evt.touches[0].pageX;\n          this.touchSwipeState.endY = evt.touches[0].pageY;\n          evt.preventDefault();\n          break;\n        case 'touchend':\n          if (this.touchSwipeState === null) {\n            return;\n          }\n          var delta = 0;\n          var dx = this.touchSwipeState.endX - this.touchSwipeState.startX;\n          var dy = this.touchSwipeState.endY - this.touchSwipeState.startY;\n          var absAngle = Math.abs(Math.atan2(dy, dx));\n          if (Math.abs(dx) > SWIPE_MIN_DISTANCE_THRESHOLD && (absAngle <= SWIPE_ANGLE_THRESHOLD || absAngle >= Math.PI - SWIPE_ANGLE_THRESHOLD)) {\n            delta = dx;\n          } else if (Math.abs(dy) > SWIPE_MIN_DISTANCE_THRESHOLD && Math.abs(absAngle - Math.PI / 2) <= SWIPE_ANGLE_THRESHOLD) {\n            delta = dy;\n          }\n          if (delta > 0) {\n            this._goToPreviousPage();\n          } else if (delta < 0) {\n            this._goToNextPage();\n          }\n          break;\n      }\n    }\n  }, {\n    key: '_addWindowListeners',\n    value: function _addWindowListeners() {\n      this.showControlsBind = this._showControls.bind(this);\n      this.mouseDownBind = this._mouseDown.bind(this);\n      this.mouseWheelBind = this._mouseWheel.bind(this);\n      this.resetMouseScrollStateBind = this._resetMouseScrollState.bind(this);\n      this.contextMenuBind = this._contextMenu.bind(this);\n      this.touchSwipeBind = this._touchSwipe.bind(this);\n      window.addEventListener('mousemove', this.showControlsBind);\n      window.addEventListener('mousedown', this.mouseDownBind);\n      window.addEventListener('wheel', this.mouseWheelBind);\n      window.addEventListener('keydown', this.resetMouseScrollStateBind);\n      window.addEventListener('contextmenu', this.contextMenuBind);\n      window.addEventListener('touchstart', this.touchSwipeBind);\n      window.addEventListener('touchmove', this.touchSwipeBind);\n      window.addEventListener('touchend', this.touchSwipeBind);\n    }\n  }, {\n    key: '_removeWindowListeners',\n    value: function _removeWindowListeners() {\n      window.removeEventListener('mousemove', this.showControlsBind);\n      window.removeEventListener('mousedown', this.mouseDownBind);\n      window.removeEventListener('wheel', this.mouseWheelBind);\n      window.removeEventListener('keydown', this.resetMouseScrollStateBind);\n      window.removeEventListener('contextmenu', this.contextMenuBind);\n      window.removeEventListener('touchstart', this.touchSwipeBind);\n      window.removeEventListener('touchmove', this.touchSwipeBind);\n      window.removeEventListener('touchend', this.touchSwipeBind);\n      delete this.showControlsBind;\n      delete this.mouseDownBind;\n      delete this.mouseWheelBind;\n      delete this.resetMouseScrollStateBind;\n      delete this.contextMenuBind;\n      delete this.touchSwipeBind;\n    }\n  }, {\n    key: '_fullscreenChange',\n    value: function _fullscreenChange() {\n      if (this.isFullscreen) {\n        this._enter();\n      } else {\n        this._exit();\n      }\n    }\n  }, {\n    key: '_addFullscreenChangeListeners',\n    value: function _addFullscreenChangeListeners() {\n      this.fullscreenChangeBind = this._fullscreenChange.bind(this);\n      window.addEventListener('fullscreenchange', this.fullscreenChangeBind);\n      window.addEventListener('mozfullscreenchange', this.fullscreenChangeBind);\n      window.addEventListener('webkitfullscreenchange', this.fullscreenChangeBind);\n      window.addEventListener('MSFullscreenChange', this.fullscreenChangeBind);\n    }\n  }, {\n    key: '_removeFullscreenChangeListeners',\n    value: function _removeFullscreenChangeListeners() {\n      window.removeEventListener('fullscreenchange', this.fullscreenChangeBind);\n      window.removeEventListener('mozfullscreenchange', this.fullscreenChangeBind);\n      window.removeEventListener('webkitfullscreenchange', this.fullscreenChangeBind);\n      window.removeEventListener('MSFullscreenChange', this.fullscreenChangeBind);\n      delete this.fullscreenChangeBind;\n    }\n  }, {\n    key: 'isFullscreen',\n    get: function get() {\n      return !!(document.fullscreenElement || document.mozFullScreen || document.webkitIsFullScreen || document.msFullscreenElement);\n    }\n  }]);\n\n  return PDFPresentationMode;\n}();\n\nexports.PDFPresentationMode = PDFPresentationMode;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFSidebar = exports.SidebarView = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ui_utils = __webpack_require__(0);\n\nvar _pdf_rendering_queue = __webpack_require__(3);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UI_NOTIFICATION_CLASS = 'pdfSidebarNotification';\nvar SidebarView = {\n  NONE: 0,\n  THUMBS: 1,\n  OUTLINE: 2,\n  ATTACHMENTS: 3\n};\n\nvar PDFSidebar = function () {\n  function PDFSidebar(options) {\n    var l10n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _ui_utils.NullL10n;\n\n    _classCallCheck(this, PDFSidebar);\n\n    this.isOpen = false;\n    this.active = SidebarView.THUMBS;\n    this.isInitialViewSet = false;\n    this.onToggled = null;\n    this.pdfViewer = options.pdfViewer;\n    this.pdfThumbnailViewer = options.pdfThumbnailViewer;\n    this.pdfOutlineViewer = options.pdfOutlineViewer;\n    this.mainContainer = options.mainContainer;\n    this.outerContainer = options.outerContainer;\n    this.eventBus = options.eventBus;\n    this.toggleButton = options.toggleButton;\n    this.thumbnailButton = options.thumbnailButton;\n    this.outlineButton = options.outlineButton;\n    this.attachmentsButton = options.attachmentsButton;\n    this.thumbnailView = options.thumbnailView;\n    this.outlineView = options.outlineView;\n    this.attachmentsView = options.attachmentsView;\n    this.disableNotification = options.disableNotification || false;\n    this.l10n = l10n;\n    this._addEventListeners();\n  }\n\n  _createClass(PDFSidebar, [{\n    key: 'reset',\n    value: function reset() {\n      this.isInitialViewSet = false;\n      this._hideUINotification(null);\n      this.switchView(SidebarView.THUMBS);\n      this.outlineButton.disabled = false;\n      this.attachmentsButton.disabled = false;\n    }\n  }, {\n    key: 'setInitialView',\n    value: function setInitialView(view) {\n      if (this.isInitialViewSet) {\n        return;\n      }\n      this.isInitialViewSet = true;\n      if (this.isOpen && view === SidebarView.NONE) {\n        this._dispatchEvent();\n        return;\n      }\n      var isViewPreserved = view === this.visibleView;\n      this.switchView(view, true);\n      if (isViewPreserved) {\n        this._dispatchEvent();\n      }\n    }\n  }, {\n    key: 'switchView',\n    value: function switchView(view) {\n      var forceOpen = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (view === SidebarView.NONE) {\n        this.close();\n        return;\n      }\n      var isViewChanged = view !== this.active;\n      var shouldForceRendering = false;\n      switch (view) {\n        case SidebarView.THUMBS:\n          this.thumbnailButton.classList.add('toggled');\n          this.outlineButton.classList.remove('toggled');\n          this.attachmentsButton.classList.remove('toggled');\n          this.thumbnailView.classList.remove('hidden');\n          this.outlineView.classList.add('hidden');\n          this.attachmentsView.classList.add('hidden');\n          if (this.isOpen && isViewChanged) {\n            this._updateThumbnailViewer();\n            shouldForceRendering = true;\n          }\n          break;\n        case SidebarView.OUTLINE:\n          if (this.outlineButton.disabled) {\n            return;\n          }\n          this.thumbnailButton.classList.remove('toggled');\n          this.outlineButton.classList.add('toggled');\n          this.attachmentsButton.classList.remove('toggled');\n          this.thumbnailView.classList.add('hidden');\n          this.outlineView.classList.remove('hidden');\n          this.attachmentsView.classList.add('hidden');\n          break;\n        case SidebarView.ATTACHMENTS:\n          if (this.attachmentsButton.disabled) {\n            return;\n          }\n          this.thumbnailButton.classList.remove('toggled');\n          this.outlineButton.classList.remove('toggled');\n          this.attachmentsButton.classList.add('toggled');\n          this.thumbnailView.classList.add('hidden');\n          this.outlineView.classList.add('hidden');\n          this.attachmentsView.classList.remove('hidden');\n          break;\n        default:\n          console.error('PDFSidebar_switchView: \"' + view + '\" is an unsupported value.');\n          return;\n      }\n      this.active = view | 0;\n      if (forceOpen && !this.isOpen) {\n        this.open();\n        return;\n      }\n      if (shouldForceRendering) {\n        this._forceRendering();\n      }\n      if (isViewChanged) {\n        this._dispatchEvent();\n      }\n      this._hideUINotification(this.active);\n    }\n  }, {\n    key: 'open',\n    value: function open() {\n      if (this.isOpen) {\n        return;\n      }\n      this.isOpen = true;\n      this.toggleButton.classList.add('toggled');\n      this.outerContainer.classList.add('sidebarMoving');\n      this.outerContainer.classList.add('sidebarOpen');\n      if (this.active === SidebarView.THUMBS) {\n        this._updateThumbnailViewer();\n      }\n      this._forceRendering();\n      this._dispatchEvent();\n      this._hideUINotification(this.active);\n    }\n  }, {\n    key: 'close',\n    value: function close() {\n      if (!this.isOpen) {\n        return;\n      }\n      this.isOpen = false;\n      this.toggleButton.classList.remove('toggled');\n      this.outerContainer.classList.add('sidebarMoving');\n      this.outerContainer.classList.remove('sidebarOpen');\n      this._forceRendering();\n      this._dispatchEvent();\n    }\n  }, {\n    key: 'toggle',\n    value: function toggle() {\n      if (this.isOpen) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n  }, {\n    key: '_dispatchEvent',\n    value: function _dispatchEvent() {\n      this.eventBus.dispatch('sidebarviewchanged', {\n        source: this,\n        view: this.visibleView\n      });\n    }\n  }, {\n    key: '_forceRendering',\n    value: function _forceRendering() {\n      if (this.onToggled) {\n        this.onToggled();\n      } else {\n        this.pdfViewer.forceRendering();\n        this.pdfThumbnailViewer.forceRendering();\n      }\n    }\n  }, {\n    key: '_updateThumbnailViewer',\n    value: function _updateThumbnailViewer() {\n      var pdfViewer = this.pdfViewer,\n          pdfThumbnailViewer = this.pdfThumbnailViewer;\n\n      var pagesCount = pdfViewer.pagesCount;\n      for (var pageIndex = 0; pageIndex < pagesCount; pageIndex++) {\n        var pageView = pdfViewer.getPageView(pageIndex);\n        if (pageView && pageView.renderingState === _pdf_rendering_queue.RenderingStates.FINISHED) {\n          var thumbnailView = pdfThumbnailViewer.getThumbnail(pageIndex);\n          thumbnailView.setImage(pageView);\n        }\n      }\n      pdfThumbnailViewer.scrollThumbnailIntoView(pdfViewer.currentPageNumber);\n    }\n  }, {\n    key: '_showUINotification',\n    value: function _showUINotification(view) {\n      var _this = this;\n\n      if (this.disableNotification) {\n        return;\n      }\n      this.l10n.get('toggle_sidebar_notification.title', null, 'Toggle Sidebar (document contains outline/attachments)').then(function (msg) {\n        _this.toggleButton.title = msg;\n      });\n      if (!this.isOpen) {\n        this.toggleButton.classList.add(UI_NOTIFICATION_CLASS);\n      } else if (view === this.active) {\n        return;\n      }\n      switch (view) {\n        case SidebarView.OUTLINE:\n          this.outlineButton.classList.add(UI_NOTIFICATION_CLASS);\n          break;\n        case SidebarView.ATTACHMENTS:\n          this.attachmentsButton.classList.add(UI_NOTIFICATION_CLASS);\n          break;\n      }\n    }\n  }, {\n    key: '_hideUINotification',\n    value: function _hideUINotification(view) {\n      var _this2 = this;\n\n      if (this.disableNotification) {\n        return;\n      }\n      var removeNotification = function removeNotification(view) {\n        switch (view) {\n          case SidebarView.OUTLINE:\n            _this2.outlineButton.classList.remove(UI_NOTIFICATION_CLASS);\n            break;\n          case SidebarView.ATTACHMENTS:\n            _this2.attachmentsButton.classList.remove(UI_NOTIFICATION_CLASS);\n            break;\n        }\n      };\n      if (!this.isOpen && view !== null) {\n        return;\n      }\n      this.toggleButton.classList.remove(UI_NOTIFICATION_CLASS);\n      if (view !== null) {\n        removeNotification(view);\n        return;\n      }\n      for (view in SidebarView) {\n        removeNotification(SidebarView[view]);\n      }\n      this.l10n.get('toggle_sidebar.title', null, 'Toggle Sidebar').then(function (msg) {\n        _this2.toggleButton.title = msg;\n      });\n    }\n  }, {\n    key: '_addEventListeners',\n    value: function _addEventListeners() {\n      var _this3 = this;\n\n      this.mainContainer.addEventListener('transitionend', function (evt) {\n        if (evt.target === _this3.mainContainer) {\n          _this3.outerContainer.classList.remove('sidebarMoving');\n        }\n      });\n      this.thumbnailButton.addEventListener('click', function () {\n        _this3.switchView(SidebarView.THUMBS);\n      });\n      this.outlineButton.addEventListener('click', function () {\n        _this3.switchView(SidebarView.OUTLINE);\n      });\n      this.outlineButton.addEventListener('dblclick', function () {\n        _this3.pdfOutlineViewer.toggleOutlineTree();\n      });\n      this.attachmentsButton.addEventListener('click', function () {\n        _this3.switchView(SidebarView.ATTACHMENTS);\n      });\n      this.eventBus.on('outlineloaded', function (evt) {\n        var outlineCount = evt.outlineCount;\n        _this3.outlineButton.disabled = !outlineCount;\n        if (outlineCount) {\n          _this3._showUINotification(SidebarView.OUTLINE);\n        } else if (_this3.active === SidebarView.OUTLINE) {\n          _this3.switchView(SidebarView.THUMBS);\n        }\n      });\n      this.eventBus.on('attachmentsloaded', function (evt) {\n        var attachmentsCount = evt.attachmentsCount;\n        _this3.attachmentsButton.disabled = !attachmentsCount;\n        if (attachmentsCount) {\n          _this3._showUINotification(SidebarView.ATTACHMENTS);\n        } else if (_this3.active === SidebarView.ATTACHMENTS) {\n          _this3.switchView(SidebarView.THUMBS);\n        }\n      });\n      this.eventBus.on('presentationmodechanged', function (evt) {\n        if (!evt.active && !evt.switchInProgress && _this3.isThumbnailViewVisible) {\n          _this3._updateThumbnailViewer();\n        }\n      });\n    }\n  }, {\n    key: 'visibleView',\n    get: function get() {\n      return this.isOpen ? this.active : SidebarView.NONE;\n    }\n  }, {\n    key: 'isThumbnailViewVisible',\n    get: function get() {\n      return this.isOpen && this.active === SidebarView.THUMBS;\n    }\n  }, {\n    key: 'isOutlineViewVisible',\n    get: function get() {\n      return this.isOpen && this.active === SidebarView.OUTLINE;\n    }\n  }, {\n    key: 'isAttachmentsViewVisible',\n    get: function get() {\n      return this.isOpen && this.active === SidebarView.ATTACHMENTS;\n    }\n  }]);\n\n  return PDFSidebar;\n}();\n\nexports.SidebarView = SidebarView;\nexports.PDFSidebar = PDFSidebar;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFThumbnailView = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _pdfjsLib = __webpack_require__(1);\n\nvar _ui_utils = __webpack_require__(0);\n\nvar _pdf_rendering_queue = __webpack_require__(3);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MAX_NUM_SCALING_STEPS = 3;\nvar THUMBNAIL_CANVAS_BORDER_WIDTH = 1;\nvar THUMBNAIL_WIDTH = 98;\nvar TempImageFactory = function TempImageFactoryClosure() {\n  var tempCanvasCache = null;\n  return {\n    getCanvas: function getCanvas(width, height) {\n      var tempCanvas = tempCanvasCache;\n      if (!tempCanvas) {\n        tempCanvas = document.createElement('canvas');\n        tempCanvasCache = tempCanvas;\n      }\n      tempCanvas.width = width;\n      tempCanvas.height = height;\n      tempCanvas.mozOpaque = true;\n      var ctx = tempCanvas.getContext('2d', { alpha: false });\n      ctx.save();\n      ctx.fillStyle = 'rgb(255, 255, 255)';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n      return tempCanvas;\n    },\n    destroyCanvas: function destroyCanvas() {\n      var tempCanvas = tempCanvasCache;\n      if (tempCanvas) {\n        tempCanvas.width = 0;\n        tempCanvas.height = 0;\n      }\n      tempCanvasCache = null;\n    }\n  };\n}();\n\nvar PDFThumbnailView = function () {\n  function PDFThumbnailView(_ref) {\n    var container = _ref.container,\n        id = _ref.id,\n        defaultViewport = _ref.defaultViewport,\n        linkService = _ref.linkService,\n        renderingQueue = _ref.renderingQueue,\n        _ref$disableCanvasToI = _ref.disableCanvasToImageConversion,\n        disableCanvasToImageConversion = _ref$disableCanvasToI === undefined ? false : _ref$disableCanvasToI,\n        _ref$l10n = _ref.l10n,\n        l10n = _ref$l10n === undefined ? _ui_utils.NullL10n : _ref$l10n;\n\n    _classCallCheck(this, PDFThumbnailView);\n\n    this.id = id;\n    this.renderingId = 'thumbnail' + id;\n    this.pageLabel = null;\n    this.pdfPage = null;\n    this.rotation = 0;\n    this.viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n    this.linkService = linkService;\n    this.renderingQueue = renderingQueue;\n    this.renderTask = null;\n    this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n    this.resume = null;\n    this.disableCanvasToImageConversion = disableCanvasToImageConversion;\n    this.pageWidth = this.viewport.width;\n    this.pageHeight = this.viewport.height;\n    this.pageRatio = this.pageWidth / this.pageHeight;\n    this.canvasWidth = THUMBNAIL_WIDTH;\n    this.canvasHeight = this.canvasWidth / this.pageRatio | 0;\n    this.scale = this.canvasWidth / this.pageWidth;\n    this.l10n = l10n;\n    var anchor = document.createElement('a');\n    anchor.href = linkService.getAnchorUrl('#page=' + id);\n    this.l10n.get('thumb_page_title', { page: id }, 'Page {{page}}').then(function (msg) {\n      anchor.title = msg;\n    });\n    anchor.onclick = function () {\n      linkService.page = id;\n      return false;\n    };\n    this.anchor = anchor;\n    var div = document.createElement('div');\n    div.className = 'thumbnail';\n    div.setAttribute('data-page-number', this.id);\n    this.div = div;\n    if (id === 1) {\n      div.classList.add('selected');\n    }\n    var ring = document.createElement('div');\n    ring.className = 'thumbnailSelectionRing';\n    var borderAdjustment = 2 * THUMBNAIL_CANVAS_BORDER_WIDTH;\n    ring.style.width = this.canvasWidth + borderAdjustment + 'px';\n    ring.style.height = this.canvasHeight + borderAdjustment + 'px';\n    this.ring = ring;\n    div.appendChild(ring);\n    anchor.appendChild(div);\n    container.appendChild(anchor);\n  }\n\n  _createClass(PDFThumbnailView, [{\n    key: 'setPdfPage',\n    value: function setPdfPage(pdfPage) {\n      this.pdfPage = pdfPage;\n      this.pdfPageRotate = pdfPage.rotate;\n      var totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n      this.viewport = pdfPage.getViewport(1, totalRotation);\n      this.reset();\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.cancelRendering();\n      this.pageWidth = this.viewport.width;\n      this.pageHeight = this.viewport.height;\n      this.pageRatio = this.pageWidth / this.pageHeight;\n      this.canvasHeight = this.canvasWidth / this.pageRatio | 0;\n      this.scale = this.canvasWidth / this.pageWidth;\n      this.div.removeAttribute('data-loaded');\n      var ring = this.ring;\n      var childNodes = ring.childNodes;\n      for (var i = childNodes.length - 1; i >= 0; i--) {\n        ring.removeChild(childNodes[i]);\n      }\n      var borderAdjustment = 2 * THUMBNAIL_CANVAS_BORDER_WIDTH;\n      ring.style.width = this.canvasWidth + borderAdjustment + 'px';\n      ring.style.height = this.canvasHeight + borderAdjustment + 'px';\n      if (this.canvas) {\n        this.canvas.width = 0;\n        this.canvas.height = 0;\n        delete this.canvas;\n      }\n      if (this.image) {\n        this.image.removeAttribute('src');\n        delete this.image;\n      }\n    }\n  }, {\n    key: 'update',\n    value: function update(rotation) {\n      if (typeof rotation !== 'undefined') {\n        this.rotation = rotation;\n      }\n      var totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n      this.viewport = this.viewport.clone({\n        scale: 1,\n        rotation: totalRotation\n      });\n      this.reset();\n    }\n  }, {\n    key: 'cancelRendering',\n    value: function cancelRendering() {\n      if (this.renderTask) {\n        this.renderTask.cancel();\n        this.renderTask = null;\n      }\n      this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n      this.resume = null;\n    }\n  }, {\n    key: '_getPageDrawContext',\n    value: function _getPageDrawContext() {\n      var noCtxScale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var canvas = document.createElement('canvas');\n      this.canvas = canvas;\n      canvas.mozOpaque = true;\n      var ctx = canvas.getContext('2d', { alpha: false });\n      var outputScale = (0, _ui_utils.getOutputScale)(ctx);\n      canvas.width = this.canvasWidth * outputScale.sx | 0;\n      canvas.height = this.canvasHeight * outputScale.sy | 0;\n      canvas.style.width = this.canvasWidth + 'px';\n      canvas.style.height = this.canvasHeight + 'px';\n      if (!noCtxScale && outputScale.scaled) {\n        ctx.scale(outputScale.sx, outputScale.sy);\n      }\n      return ctx;\n    }\n  }, {\n    key: '_convertCanvasToImage',\n    value: function _convertCanvasToImage() {\n      var _this = this;\n\n      if (!this.canvas) {\n        return;\n      }\n      if (this.renderingState !== _pdf_rendering_queue.RenderingStates.FINISHED) {\n        return;\n      }\n      var id = this.renderingId;\n      var className = 'thumbnailImage';\n      if (this.disableCanvasToImageConversion) {\n        this.canvas.id = id;\n        this.canvas.className = className;\n        this.l10n.get('thumb_page_canvas', { page: this.pageId }, 'Thumbnail of Page {{page}}').then(function (msg) {\n          _this.canvas.setAttribute('aria-label', msg);\n        });\n        this.div.setAttribute('data-loaded', true);\n        this.ring.appendChild(this.canvas);\n        return;\n      }\n      var image = document.createElement('img');\n      image.id = id;\n      image.className = className;\n      this.l10n.get('thumb_page_canvas', { page: this.pageId }, 'Thumbnail of Page {{page}}').then(function (msg) {\n        image.setAttribute('aria-label', msg);\n      });\n      image.style.width = this.canvasWidth + 'px';\n      image.style.height = this.canvasHeight + 'px';\n      image.src = this.canvas.toDataURL();\n      this.image = image;\n      this.div.setAttribute('data-loaded', true);\n      this.ring.appendChild(image);\n      this.canvas.width = 0;\n      this.canvas.height = 0;\n      delete this.canvas;\n    }\n  }, {\n    key: 'draw',\n    value: function draw() {\n      var _this2 = this;\n\n      if (this.renderingState !== _pdf_rendering_queue.RenderingStates.INITIAL) {\n        console.error('Must be in new state before drawing');\n        return Promise.resolve(undefined);\n      }\n      this.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n      var renderCapability = (0, _pdfjsLib.createPromiseCapability)();\n      var finishRenderTask = function finishRenderTask(error) {\n        if (renderTask === _this2.renderTask) {\n          _this2.renderTask = null;\n        }\n        if (error === 'cancelled' || error instanceof _pdfjsLib.RenderingCancelledException) {\n          renderCapability.resolve(undefined);\n          return;\n        }\n        _this2.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n        _this2._convertCanvasToImage();\n        if (!error) {\n          renderCapability.resolve(undefined);\n        } else {\n          renderCapability.reject(error);\n        }\n      };\n      var ctx = this._getPageDrawContext();\n      var drawViewport = this.viewport.clone({ scale: this.scale });\n      var renderContinueCallback = function renderContinueCallback(cont) {\n        if (!_this2.renderingQueue.isHighestPriority(_this2)) {\n          _this2.renderingState = _pdf_rendering_queue.RenderingStates.PAUSED;\n          _this2.resume = function () {\n            _this2.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n            cont();\n          };\n          return;\n        }\n        cont();\n      };\n      var renderContext = {\n        canvasContext: ctx,\n        viewport: drawViewport\n      };\n      var renderTask = this.renderTask = this.pdfPage.render(renderContext);\n      renderTask.onContinue = renderContinueCallback;\n      renderTask.promise.then(function () {\n        finishRenderTask(null);\n      }, function (error) {\n        finishRenderTask(error);\n      });\n      return renderCapability.promise;\n    }\n  }, {\n    key: 'setImage',\n    value: function setImage(pageView) {\n      if (this.renderingState !== _pdf_rendering_queue.RenderingStates.INITIAL) {\n        return;\n      }\n      var img = pageView.canvas;\n      if (!img) {\n        return;\n      }\n      if (!this.pdfPage) {\n        this.setPdfPage(pageView.pdfPage);\n      }\n      this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n      var ctx = this._getPageDrawContext(true);\n      var canvas = ctx.canvas;\n      if (img.width <= 2 * canvas.width) {\n        ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);\n        this._convertCanvasToImage();\n        return;\n      }\n      var reducedWidth = canvas.width << MAX_NUM_SCALING_STEPS;\n      var reducedHeight = canvas.height << MAX_NUM_SCALING_STEPS;\n      var reducedImage = TempImageFactory.getCanvas(reducedWidth, reducedHeight);\n      var reducedImageCtx = reducedImage.getContext('2d');\n      while (reducedWidth > img.width || reducedHeight > img.height) {\n        reducedWidth >>= 1;\n        reducedHeight >>= 1;\n      }\n      reducedImageCtx.drawImage(img, 0, 0, img.width, img.height, 0, 0, reducedWidth, reducedHeight);\n      while (reducedWidth > 2 * canvas.width) {\n        reducedImageCtx.drawImage(reducedImage, 0, 0, reducedWidth, reducedHeight, 0, 0, reducedWidth >> 1, reducedHeight >> 1);\n        reducedWidth >>= 1;\n        reducedHeight >>= 1;\n      }\n      ctx.drawImage(reducedImage, 0, 0, reducedWidth, reducedHeight, 0, 0, canvas.width, canvas.height);\n      this._convertCanvasToImage();\n    }\n  }, {\n    key: 'setPageLabel',\n    value: function setPageLabel(label) {\n      var _this3 = this;\n\n      this.pageLabel = typeof label === 'string' ? label : null;\n      this.l10n.get('thumb_page_title', { page: this.pageId }, 'Page {{page}}').then(function (msg) {\n        _this3.anchor.title = msg;\n      });\n      if (this.renderingState !== _pdf_rendering_queue.RenderingStates.FINISHED) {\n        return;\n      }\n      this.l10n.get('thumb_page_canvas', { page: this.pageId }, 'Thumbnail of Page {{page}}').then(function (ariaLabel) {\n        if (_this3.image) {\n          _this3.image.setAttribute('aria-label', ariaLabel);\n        } else if (_this3.disableCanvasToImageConversion && _this3.canvas) {\n          _this3.canvas.setAttribute('aria-label', ariaLabel);\n        }\n      });\n    }\n  }, {\n    key: 'pageId',\n    get: function get() {\n      return this.pageLabel !== null ? this.pageLabel : this.id;\n    }\n  }], [{\n    key: 'cleanup',\n    value: function cleanup() {\n      TempImageFactory.destroyCanvas();\n    }\n  }]);\n\n  return PDFThumbnailView;\n}();\n\nexports.PDFThumbnailView = PDFThumbnailView;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFThumbnailViewer = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ui_utils = __webpack_require__(0);\n\nvar _pdf_thumbnail_view = __webpack_require__(25);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar THUMBNAIL_SCROLL_MARGIN = -19;\n\nvar PDFThumbnailViewer = function () {\n  function PDFThumbnailViewer(_ref) {\n    var container = _ref.container,\n        linkService = _ref.linkService,\n        renderingQueue = _ref.renderingQueue,\n        _ref$l10n = _ref.l10n,\n        l10n = _ref$l10n === undefined ? _ui_utils.NullL10n : _ref$l10n;\n\n    _classCallCheck(this, PDFThumbnailViewer);\n\n    this.container = container;\n    this.linkService = linkService;\n    this.renderingQueue = renderingQueue;\n    this.l10n = l10n;\n    this.scroll = (0, _ui_utils.watchScroll)(this.container, this._scrollUpdated.bind(this));\n    this._resetView();\n  }\n\n  _createClass(PDFThumbnailViewer, [{\n    key: '_scrollUpdated',\n    value: function _scrollUpdated() {\n      this.renderingQueue.renderHighestPriority();\n    }\n  }, {\n    key: 'getThumbnail',\n    value: function getThumbnail(index) {\n      return this._thumbnails[index];\n    }\n  }, {\n    key: '_getVisibleThumbs',\n    value: function _getVisibleThumbs() {\n      return (0, _ui_utils.getVisibleElements)(this.container, this._thumbnails);\n    }\n  }, {\n    key: 'scrollThumbnailIntoView',\n    value: function scrollThumbnailIntoView(page) {\n      var selected = document.querySelector('.thumbnail.selected');\n      if (selected) {\n        selected.classList.remove('selected');\n      }\n      var thumbnail = document.querySelector('div.thumbnail[data-page-number=\"' + page + '\"]');\n      if (thumbnail) {\n        thumbnail.classList.add('selected');\n      }\n      var visibleThumbs = this._getVisibleThumbs();\n      var numVisibleThumbs = visibleThumbs.views.length;\n      if (numVisibleThumbs > 0) {\n        var first = visibleThumbs.first.id;\n        var last = numVisibleThumbs > 1 ? visibleThumbs.last.id : first;\n        if (page <= first || page >= last) {\n          (0, _ui_utils.scrollIntoView)(thumbnail, { top: THUMBNAIL_SCROLL_MARGIN });\n        }\n      }\n    }\n  }, {\n    key: 'cleanup',\n    value: function cleanup() {\n      _pdf_thumbnail_view.PDFThumbnailView.cleanup();\n    }\n  }, {\n    key: '_resetView',\n    value: function _resetView() {\n      this._thumbnails = [];\n      this._pageLabels = null;\n      this._pagesRotation = 0;\n      this._pagesRequests = [];\n      this.container.textContent = '';\n    }\n  }, {\n    key: 'setDocument',\n    value: function setDocument(pdfDocument) {\n      var _this = this;\n\n      if (this.pdfDocument) {\n        this._cancelRendering();\n        this._resetView();\n      }\n      this.pdfDocument = pdfDocument;\n      if (!pdfDocument) {\n        return;\n      }\n      pdfDocument.getPage(1).then(function (firstPage) {\n        var pagesCount = pdfDocument.numPages;\n        var viewport = firstPage.getViewport(1.0);\n        for (var pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n          var thumbnail = new _pdf_thumbnail_view.PDFThumbnailView({\n            container: _this.container,\n            id: pageNum,\n            defaultViewport: viewport.clone(),\n            linkService: _this.linkService,\n            renderingQueue: _this.renderingQueue,\n            disableCanvasToImageConversion: false,\n            l10n: _this.l10n\n          });\n          _this._thumbnails.push(thumbnail);\n        }\n      }).catch(function (reason) {\n        console.error('Unable to initialize thumbnail viewer', reason);\n      });\n    }\n  }, {\n    key: '_cancelRendering',\n    value: function _cancelRendering() {\n      for (var i = 0, ii = this._thumbnails.length; i < ii; i++) {\n        if (this._thumbnails[i]) {\n          this._thumbnails[i].cancelRendering();\n        }\n      }\n    }\n  }, {\n    key: 'setPageLabels',\n    value: function setPageLabels(labels) {\n      if (!this.pdfDocument) {\n        return;\n      }\n      if (!labels) {\n        this._pageLabels = null;\n      } else if (!(labels instanceof Array && this.pdfDocument.numPages === labels.length)) {\n        this._pageLabels = null;\n        console.error('PDFThumbnailViewer_setPageLabels: Invalid page labels.');\n      } else {\n        this._pageLabels = labels;\n      }\n      for (var i = 0, ii = this._thumbnails.length; i < ii; i++) {\n        var label = this._pageLabels && this._pageLabels[i];\n        this._thumbnails[i].setPageLabel(label);\n      }\n    }\n  }, {\n    key: '_ensurePdfPageLoaded',\n    value: function _ensurePdfPageLoaded(thumbView) {\n      var _this2 = this;\n\n      if (thumbView.pdfPage) {\n        return Promise.resolve(thumbView.pdfPage);\n      }\n      var pageNumber = thumbView.id;\n      if (this._pagesRequests[pageNumber]) {\n        return this._pagesRequests[pageNumber];\n      }\n      var promise = this.pdfDocument.getPage(pageNumber).then(function (pdfPage) {\n        thumbView.setPdfPage(pdfPage);\n        _this2._pagesRequests[pageNumber] = null;\n        return pdfPage;\n      }).catch(function (reason) {\n        console.error('Unable to get page for thumb view', reason);\n        _this2._pagesRequests[pageNumber] = null;\n      });\n      this._pagesRequests[pageNumber] = promise;\n      return promise;\n    }\n  }, {\n    key: 'forceRendering',\n    value: function forceRendering() {\n      var _this3 = this;\n\n      var visibleThumbs = this._getVisibleThumbs();\n      var thumbView = this.renderingQueue.getHighestPriority(visibleThumbs, this._thumbnails, this.scroll.down);\n      if (thumbView) {\n        this._ensurePdfPageLoaded(thumbView).then(function () {\n          _this3.renderingQueue.renderView(thumbView);\n        });\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: 'pagesRotation',\n    get: function get() {\n      return this._pagesRotation;\n    },\n    set: function set(rotation) {\n      if (!(typeof rotation === 'number' && rotation % 90 === 0)) {\n        throw new Error('Invalid thumbnails rotation angle.');\n      }\n      if (!this.pdfDocument) {\n        return;\n      }\n      this._pagesRotation = rotation;\n      for (var i = 0, ii = this._thumbnails.length; i < ii; i++) {\n        this._thumbnails[i].update(rotation);\n      }\n    }\n  }]);\n\n  return PDFThumbnailViewer;\n}();\n\nexports.PDFThumbnailViewer = PDFThumbnailViewer;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFViewer = exports.PresentationModeState = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _pdfjsLib = __webpack_require__(1);\n\nvar _ui_utils = __webpack_require__(0);\n\nvar _pdf_rendering_queue = __webpack_require__(3);\n\nvar _annotation_layer_builder = __webpack_require__(11);\n\nvar _dom_events = __webpack_require__(2);\n\nvar _pdf_page_view = __webpack_require__(22);\n\nvar _pdf_link_service = __webpack_require__(5);\n\nvar _text_layer_builder = __webpack_require__(30);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PresentationModeState = {\n  UNKNOWN: 0,\n  NORMAL: 1,\n  CHANGING: 2,\n  FULLSCREEN: 3\n};\nvar DEFAULT_CACHE_SIZE = 10;\nfunction PDFPageViewBuffer(size) {\n  var data = [];\n  this.push = function cachePush(view) {\n    var i = data.indexOf(view);\n    if (i >= 0) {\n      data.splice(i, 1);\n    }\n    data.push(view);\n    if (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n  this.resize = function (newSize) {\n    size = newSize;\n    while (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n}\nfunction isSameScale(oldScale, newScale) {\n  if (newScale === oldScale) {\n    return true;\n  }\n  if (Math.abs(newScale - oldScale) < 1e-15) {\n    return true;\n  }\n  return false;\n}\nfunction isPortraitOrientation(size) {\n  return size.width <= size.height;\n}\n\nvar PDFViewer = function () {\n  function PDFViewer(options) {\n    _classCallCheck(this, PDFViewer);\n\n    this.container = options.container;\n    this.viewer = options.viewer || options.container.firstElementChild;\n    this.eventBus = options.eventBus || (0, _dom_events.getGlobalEventBus)();\n    this.linkService = options.linkService || new _pdf_link_service.SimpleLinkService();\n    this.downloadManager = options.downloadManager || null;\n    this.removePageBorders = options.removePageBorders || false;\n    this.enhanceTextSelection = options.enhanceTextSelection || false;\n    this.renderInteractiveForms = options.renderInteractiveForms || false;\n    this.enablePrintAutoRotate = options.enablePrintAutoRotate || false;\n    this.renderer = options.renderer || _ui_utils.RendererType.CANVAS;\n    this.l10n = options.l10n || _ui_utils.NullL10n;\n    this.defaultRenderingQueue = !options.renderingQueue;\n    if (this.defaultRenderingQueue) {\n      this.renderingQueue = new _pdf_rendering_queue.PDFRenderingQueue();\n      this.renderingQueue.setViewer(this);\n    } else {\n      this.renderingQueue = options.renderingQueue;\n    }\n    this.scroll = (0, _ui_utils.watchScroll)(this.container, this._scrollUpdate.bind(this));\n    this.presentationModeState = PresentationModeState.UNKNOWN;\n    this._resetView();\n    if (this.removePageBorders) {\n      this.viewer.classList.add('removePageBorders');\n    }\n  }\n\n  _createClass(PDFViewer, [{\n    key: 'getPageView',\n    value: function getPageView(index) {\n      return this._pages[index];\n    }\n  }, {\n    key: '_setCurrentPageNumber',\n    value: function _setCurrentPageNumber(val) {\n      var resetCurrentPageView = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (this._currentPageNumber === val) {\n        if (resetCurrentPageView) {\n          this._resetCurrentPageView();\n        }\n        return;\n      }\n      if (!(0 < val && val <= this.pagesCount)) {\n        console.error('PDFViewer._setCurrentPageNumber: \"' + val + '\" is out of bounds.');\n        return;\n      }\n      var arg = {\n        source: this,\n        pageNumber: val,\n        pageLabel: this._pageLabels && this._pageLabels[val - 1]\n      };\n      this._currentPageNumber = val;\n      this.eventBus.dispatch('pagechanging', arg);\n      this.eventBus.dispatch('pagechange', arg);\n      if (resetCurrentPageView) {\n        this._resetCurrentPageView();\n      }\n    }\n  }, {\n    key: 'setDocument',\n    value: function setDocument(pdfDocument) {\n      var _this = this;\n\n      if (this.pdfDocument) {\n        this._cancelRendering();\n        this._resetView();\n      }\n      this.pdfDocument = pdfDocument;\n      if (!pdfDocument) {\n        return;\n      }\n      var pagesCount = pdfDocument.numPages;\n      var pagesCapability = (0, _pdfjsLib.createPromiseCapability)();\n      this.pagesPromise = pagesCapability.promise;\n      pagesCapability.promise.then(function () {\n        _this._pageViewsReady = true;\n        _this.eventBus.dispatch('pagesloaded', {\n          source: _this,\n          pagesCount: pagesCount\n        });\n      });\n      var isOnePageRenderedResolved = false;\n      var onePageRenderedCapability = (0, _pdfjsLib.createPromiseCapability)();\n      this.onePageRendered = onePageRenderedCapability.promise;\n      var bindOnAfterAndBeforeDraw = function bindOnAfterAndBeforeDraw(pageView) {\n        pageView.onBeforeDraw = function () {\n          _this._buffer.push(pageView);\n        };\n        pageView.onAfterDraw = function () {\n          if (!isOnePageRenderedResolved) {\n            isOnePageRenderedResolved = true;\n            onePageRenderedCapability.resolve();\n          }\n        };\n      };\n      var firstPagePromise = pdfDocument.getPage(1);\n      this.firstPagePromise = firstPagePromise;\n      firstPagePromise.then(function (pdfPage) {\n        var scale = _this.currentScale;\n        var viewport = pdfPage.getViewport(scale * _ui_utils.CSS_UNITS);\n        for (var pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n          var textLayerFactory = null;\n          if (!_pdfjsLib.PDFJS.disableTextLayer) {\n            textLayerFactory = _this;\n          }\n          var pageView = new _pdf_page_view.PDFPageView({\n            container: _this.viewer,\n            eventBus: _this.eventBus,\n            id: pageNum,\n            scale: scale,\n            defaultViewport: viewport.clone(),\n            renderingQueue: _this.renderingQueue,\n            textLayerFactory: textLayerFactory,\n            annotationLayerFactory: _this,\n            enhanceTextSelection: _this.enhanceTextSelection,\n            renderInteractiveForms: _this.renderInteractiveForms,\n            renderer: _this.renderer,\n            l10n: _this.l10n\n          });\n          bindOnAfterAndBeforeDraw(pageView);\n          _this._pages.push(pageView);\n        }\n        onePageRenderedCapability.promise.then(function () {\n          if (_pdfjsLib.PDFJS.disableAutoFetch) {\n            pagesCapability.resolve();\n            return;\n          }\n          var getPagesLeft = pagesCount;\n\n          var _loop = function _loop(_pageNum) {\n            pdfDocument.getPage(_pageNum).then(function (pdfPage) {\n              var pageView = _this._pages[_pageNum - 1];\n              if (!pageView.pdfPage) {\n                pageView.setPdfPage(pdfPage);\n              }\n              _this.linkService.cachePageRef(_pageNum, pdfPage.ref);\n              if (--getPagesLeft === 0) {\n                pagesCapability.resolve();\n              }\n            }, function (reason) {\n              console.error('Unable to get page ' + _pageNum + ' to initialize viewer', reason);\n              if (--getPagesLeft === 0) {\n                pagesCapability.resolve();\n              }\n            });\n          };\n\n          for (var _pageNum = 1; _pageNum <= pagesCount; ++_pageNum) {\n            _loop(_pageNum);\n          }\n        });\n        _this.eventBus.dispatch('pagesinit', { source: _this });\n        if (_this.defaultRenderingQueue) {\n          _this.update();\n        }\n        if (_this.findController) {\n          _this.findController.resolveFirstPage();\n        }\n      }).catch(function (reason) {\n        console.error('Unable to initialize viewer', reason);\n      });\n    }\n  }, {\n    key: 'setPageLabels',\n    value: function setPageLabels(labels) {\n      if (!this.pdfDocument) {\n        return;\n      }\n      if (!labels) {\n        this._pageLabels = null;\n      } else if (!(labels instanceof Array && this.pdfDocument.numPages === labels.length)) {\n        this._pageLabels = null;\n        console.error('PDFViewer.setPageLabels: Invalid page labels.');\n      } else {\n        this._pageLabels = labels;\n      }\n      for (var i = 0, ii = this._pages.length; i < ii; i++) {\n        var pageView = this._pages[i];\n        var label = this._pageLabels && this._pageLabels[i];\n        pageView.setPageLabel(label);\n      }\n    }\n  }, {\n    key: '_resetView',\n    value: function _resetView() {\n      this._pages = [];\n      this._currentPageNumber = 1;\n      this._currentScale = _ui_utils.UNKNOWN_SCALE;\n      this._currentScaleValue = null;\n      this._pageLabels = null;\n      this._buffer = new PDFPageViewBuffer(DEFAULT_CACHE_SIZE);\n      this._location = null;\n      this._pagesRotation = 0;\n      this._pagesRequests = [];\n      this._pageViewsReady = false;\n      this.viewer.textContent = '';\n    }\n  }, {\n    key: '_scrollUpdate',\n    value: function _scrollUpdate() {\n      if (this.pagesCount === 0) {\n        return;\n      }\n      this.update();\n    }\n  }, {\n    key: '_setScaleDispatchEvent',\n    value: function _setScaleDispatchEvent(newScale, newValue) {\n      var preset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      var arg = {\n        source: this,\n        scale: newScale,\n        presetValue: preset ? newValue : undefined\n      };\n      this.eventBus.dispatch('scalechanging', arg);\n      this.eventBus.dispatch('scalechange', arg);\n    }\n  }, {\n    key: '_setScaleUpdatePages',\n    value: function _setScaleUpdatePages(newScale, newValue) {\n      var noScroll = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var preset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this._currentScaleValue = newValue.toString();\n      if (isSameScale(this._currentScale, newScale)) {\n        if (preset) {\n          this._setScaleDispatchEvent(newScale, newValue, true);\n        }\n        return;\n      }\n      for (var i = 0, ii = this._pages.length; i < ii; i++) {\n        this._pages[i].update(newScale);\n      }\n      this._currentScale = newScale;\n      if (!noScroll) {\n        var page = this._currentPageNumber,\n            dest = void 0;\n        if (this._location && !_pdfjsLib.PDFJS.ignoreCurrentPositionOnZoom && !(this.isInPresentationMode || this.isChangingPresentationMode)) {\n          page = this._location.pageNumber;\n          dest = [null, { name: 'XYZ' }, this._location.left, this._location.top, null];\n        }\n        this.scrollPageIntoView({\n          pageNumber: page,\n          destArray: dest,\n          allowNegativeOffset: true\n        });\n      }\n      this._setScaleDispatchEvent(newScale, newValue, preset);\n      if (this.defaultRenderingQueue) {\n        this.update();\n      }\n    }\n  }, {\n    key: '_setScale',\n    value: function _setScale(value) {\n      var noScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var scale = parseFloat(value);\n      if (scale > 0) {\n        this._setScaleUpdatePages(scale, value, noScroll, false);\n      } else {\n        var currentPage = this._pages[this._currentPageNumber - 1];\n        if (!currentPage) {\n          return;\n        }\n        var hPadding = this.isInPresentationMode || this.removePageBorders ? 0 : _ui_utils.SCROLLBAR_PADDING;\n        var vPadding = this.isInPresentationMode || this.removePageBorders ? 0 : _ui_utils.VERTICAL_PADDING;\n        var pageWidthScale = (this.container.clientWidth - hPadding) / currentPage.width * currentPage.scale;\n        var pageHeightScale = (this.container.clientHeight - vPadding) / currentPage.height * currentPage.scale;\n        switch (value) {\n          case 'page-actual':\n            scale = 1;\n            break;\n          case 'page-width':\n            scale = pageWidthScale;\n            break;\n          case 'page-height':\n            scale = pageHeightScale;\n            break;\n          case 'page-fit':\n            scale = Math.min(pageWidthScale, pageHeightScale);\n            break;\n          case 'auto':\n            var isLandscape = currentPage.width > currentPage.height;\n            var horizontalScale = isLandscape ? Math.min(pageHeightScale, pageWidthScale) : pageWidthScale;\n            scale = Math.min(_ui_utils.MAX_AUTO_SCALE, horizontalScale);\n            break;\n          default:\n            console.error('PDFViewer._setScale: \"' + value + '\" is an unknown zoom value.');\n            return;\n        }\n        this._setScaleUpdatePages(scale, value, noScroll, true);\n      }\n    }\n  }, {\n    key: '_resetCurrentPageView',\n    value: function _resetCurrentPageView() {\n      if (this.isInPresentationMode) {\n        this._setScale(this._currentScaleValue, true);\n      }\n      var pageView = this._pages[this._currentPageNumber - 1];\n      (0, _ui_utils.scrollIntoView)(pageView.div);\n    }\n  }, {\n    key: 'scrollPageIntoView',\n    value: function scrollPageIntoView(params) {\n      if (!this.pdfDocument) {\n        return;\n      }\n      if (arguments.length > 1 || typeof params === 'number') {\n        console.warn('Call of scrollPageIntoView() with obsolete signature.');\n        var paramObj = {};\n        if (typeof params === 'number') {\n          paramObj.pageNumber = params;\n        }\n        if (arguments[1] instanceof Array) {\n          paramObj.destArray = arguments[1];\n        }\n        params = paramObj;\n      }\n      var pageNumber = params.pageNumber || 0;\n      var dest = params.destArray || null;\n      var allowNegativeOffset = params.allowNegativeOffset || false;\n      if (this.isInPresentationMode || !dest) {\n        this._setCurrentPageNumber(pageNumber, true);\n        return;\n      }\n      var pageView = this._pages[pageNumber - 1];\n      if (!pageView) {\n        console.error('PDFViewer.scrollPageIntoView: Invalid \"pageNumber\" parameter.');\n        return;\n      }\n      var x = 0,\n          y = 0;\n      var width = 0,\n          height = 0,\n          widthScale = void 0,\n          heightScale = void 0;\n      var changeOrientation = pageView.rotation % 180 === 0 ? false : true;\n      var pageWidth = (changeOrientation ? pageView.height : pageView.width) / pageView.scale / _ui_utils.CSS_UNITS;\n      var pageHeight = (changeOrientation ? pageView.width : pageView.height) / pageView.scale / _ui_utils.CSS_UNITS;\n      var scale = 0;\n      switch (dest[1].name) {\n        case 'XYZ':\n          x = dest[2];\n          y = dest[3];\n          scale = dest[4];\n          x = x !== null ? x : 0;\n          y = y !== null ? y : pageHeight;\n          break;\n        case 'Fit':\n        case 'FitB':\n          scale = 'page-fit';\n          break;\n        case 'FitH':\n        case 'FitBH':\n          y = dest[2];\n          scale = 'page-width';\n          if (y === null && this._location) {\n            x = this._location.left;\n            y = this._location.top;\n          }\n          break;\n        case 'FitV':\n        case 'FitBV':\n          x = dest[2];\n          width = pageWidth;\n          height = pageHeight;\n          scale = 'page-height';\n          break;\n        case 'FitR':\n          x = dest[2];\n          y = dest[3];\n          width = dest[4] - x;\n          height = dest[5] - y;\n          var hPadding = this.removePageBorders ? 0 : _ui_utils.SCROLLBAR_PADDING;\n          var vPadding = this.removePageBorders ? 0 : _ui_utils.VERTICAL_PADDING;\n          widthScale = (this.container.clientWidth - hPadding) / width / _ui_utils.CSS_UNITS;\n          heightScale = (this.container.clientHeight - vPadding) / height / _ui_utils.CSS_UNITS;\n          scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\n          break;\n        default:\n          console.error('PDFViewer.scrollPageIntoView: \"' + dest[1].name + '\" ' + 'is not a valid destination type.');\n          return;\n      }\n      if (scale && scale !== this._currentScale) {\n        this.currentScaleValue = scale;\n      } else if (this._currentScale === _ui_utils.UNKNOWN_SCALE) {\n        this.currentScaleValue = _ui_utils.DEFAULT_SCALE_VALUE;\n      }\n      if (scale === 'page-fit' && !dest[4]) {\n        (0, _ui_utils.scrollIntoView)(pageView.div);\n        return;\n      }\n      var boundingRect = [pageView.viewport.convertToViewportPoint(x, y), pageView.viewport.convertToViewportPoint(x + width, y + height)];\n      var left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n      var top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n      if (!allowNegativeOffset) {\n        left = Math.max(left, 0);\n        top = Math.max(top, 0);\n      }\n      (0, _ui_utils.scrollIntoView)(pageView.div, {\n        left: left,\n        top: top\n      });\n    }\n  }, {\n    key: '_updateLocation',\n    value: function _updateLocation(firstPage) {\n      var currentScale = this._currentScale;\n      var currentScaleValue = this._currentScaleValue;\n      var normalizedScaleValue = parseFloat(currentScaleValue) === currentScale ? Math.round(currentScale * 10000) / 100 : currentScaleValue;\n      var pageNumber = firstPage.id;\n      var pdfOpenParams = '#page=' + pageNumber;\n      pdfOpenParams += '&zoom=' + normalizedScaleValue;\n      var currentPageView = this._pages[pageNumber - 1];\n      var container = this.container;\n      var topLeft = currentPageView.getPagePoint(container.scrollLeft - firstPage.x, container.scrollTop - firstPage.y);\n      var intLeft = Math.round(topLeft[0]);\n      var intTop = Math.round(topLeft[1]);\n      pdfOpenParams += ',' + intLeft + ',' + intTop;\n      this._location = {\n        pageNumber: pageNumber,\n        scale: normalizedScaleValue,\n        top: intTop,\n        left: intLeft,\n        pdfOpenParams: pdfOpenParams\n      };\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      var visible = this._getVisiblePages();\n      var visiblePages = visible.views;\n      if (visiblePages.length === 0) {\n        return;\n      }\n      var suggestedCacheSize = Math.max(DEFAULT_CACHE_SIZE, 2 * visiblePages.length + 1);\n      this._buffer.resize(suggestedCacheSize);\n      this.renderingQueue.renderHighestPriority(visible);\n      var currentId = this._currentPageNumber;\n      var firstPage = visible.first;\n      var stillFullyVisible = false;\n      for (var i = 0, ii = visiblePages.length; i < ii; ++i) {\n        var page = visiblePages[i];\n        if (page.percent < 100) {\n          break;\n        }\n        if (page.id === currentId) {\n          stillFullyVisible = true;\n          break;\n        }\n      }\n      if (!stillFullyVisible) {\n        currentId = visiblePages[0].id;\n      }\n      if (!this.isInPresentationMode) {\n        this._setCurrentPageNumber(currentId);\n      }\n      this._updateLocation(firstPage);\n      this.eventBus.dispatch('updateviewarea', {\n        source: this,\n        location: this._location\n      });\n    }\n  }, {\n    key: 'containsElement',\n    value: function containsElement(element) {\n      return this.container.contains(element);\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      this.container.focus();\n    }\n  }, {\n    key: '_getVisiblePages',\n    value: function _getVisiblePages() {\n      if (!this.isInPresentationMode) {\n        return (0, _ui_utils.getVisibleElements)(this.container, this._pages, true);\n      }\n      var visible = [];\n      var currentPage = this._pages[this._currentPageNumber - 1];\n      visible.push({\n        id: currentPage.id,\n        view: currentPage\n      });\n      return {\n        first: currentPage,\n        last: currentPage,\n        views: visible\n      };\n    }\n  }, {\n    key: 'cleanup',\n    value: function cleanup() {\n      for (var i = 0, ii = this._pages.length; i < ii; i++) {\n        if (this._pages[i] && this._pages[i].renderingState !== _pdf_rendering_queue.RenderingStates.FINISHED) {\n          this._pages[i].reset();\n        }\n      }\n    }\n  }, {\n    key: '_cancelRendering',\n    value: function _cancelRendering() {\n      for (var i = 0, ii = this._pages.length; i < ii; i++) {\n        if (this._pages[i]) {\n          this._pages[i].cancelRendering();\n        }\n      }\n    }\n  }, {\n    key: '_ensurePdfPageLoaded',\n    value: function _ensurePdfPageLoaded(pageView) {\n      var _this2 = this;\n\n      if (pageView.pdfPage) {\n        return Promise.resolve(pageView.pdfPage);\n      }\n      var pageNumber = pageView.id;\n      if (this._pagesRequests[pageNumber]) {\n        return this._pagesRequests[pageNumber];\n      }\n      var promise = this.pdfDocument.getPage(pageNumber).then(function (pdfPage) {\n        if (!pageView.pdfPage) {\n          pageView.setPdfPage(pdfPage);\n        }\n        _this2._pagesRequests[pageNumber] = null;\n        return pdfPage;\n      }).catch(function (reason) {\n        console.error('Unable to get page for page view', reason);\n        _this2._pagesRequests[pageNumber] = null;\n      });\n      this._pagesRequests[pageNumber] = promise;\n      return promise;\n    }\n  }, {\n    key: 'forceRendering',\n    value: function forceRendering(currentlyVisiblePages) {\n      var _this3 = this;\n\n      var visiblePages = currentlyVisiblePages || this._getVisiblePages();\n      var pageView = this.renderingQueue.getHighestPriority(visiblePages, this._pages, this.scroll.down);\n      if (pageView) {\n        this._ensurePdfPageLoaded(pageView).then(function () {\n          _this3.renderingQueue.renderView(pageView);\n        });\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: 'getPageTextContent',\n    value: function getPageTextContent(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex + 1).then(function (page) {\n        return page.getTextContent({ normalizeWhitespace: true });\n      });\n    }\n  }, {\n    key: 'createTextLayerBuilder',\n    value: function createTextLayerBuilder(textLayerDiv, pageIndex, viewport) {\n      var enhanceTextSelection = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      return new _text_layer_builder.TextLayerBuilder({\n        textLayerDiv: textLayerDiv,\n        eventBus: this.eventBus,\n        pageIndex: pageIndex,\n        viewport: viewport,\n        findController: this.isInPresentationMode ? null : this.findController,\n        enhanceTextSelection: this.isInPresentationMode ? false : enhanceTextSelection\n      });\n    }\n  }, {\n    key: 'createAnnotationLayerBuilder',\n    value: function createAnnotationLayerBuilder(pageDiv, pdfPage) {\n      var renderInteractiveForms = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var l10n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _ui_utils.NullL10n;\n\n      return new _annotation_layer_builder.AnnotationLayerBuilder({\n        pageDiv: pageDiv,\n        pdfPage: pdfPage,\n        renderInteractiveForms: renderInteractiveForms,\n        linkService: this.linkService,\n        downloadManager: this.downloadManager,\n        l10n: l10n\n      });\n    }\n  }, {\n    key: 'setFindController',\n    value: function setFindController(findController) {\n      this.findController = findController;\n    }\n  }, {\n    key: 'getPagesOverview',\n    value: function getPagesOverview() {\n      var pagesOverview = this._pages.map(function (pageView) {\n        var viewport = pageView.pdfPage.getViewport(1);\n        return {\n          width: viewport.width,\n          height: viewport.height,\n          rotation: viewport.rotation\n        };\n      });\n      if (!this.enablePrintAutoRotate) {\n        return pagesOverview;\n      }\n      var isFirstPagePortrait = isPortraitOrientation(pagesOverview[0]);\n      return pagesOverview.map(function (size) {\n        if (isFirstPagePortrait === isPortraitOrientation(size)) {\n          return size;\n        }\n        return {\n          width: size.height,\n          height: size.width,\n          rotation: (size.rotation + 90) % 360\n        };\n      });\n    }\n  }, {\n    key: 'pagesCount',\n    get: function get() {\n      return this._pages.length;\n    }\n  }, {\n    key: 'pageViewsReady',\n    get: function get() {\n      return this._pageViewsReady;\n    }\n  }, {\n    key: 'currentPageNumber',\n    get: function get() {\n      return this._currentPageNumber;\n    },\n    set: function set(val) {\n      if ((val | 0) !== val) {\n        throw new Error('Invalid page number.');\n      }\n      if (!this.pdfDocument) {\n        return;\n      }\n      this._setCurrentPageNumber(val, true);\n    }\n  }, {\n    key: 'currentPageLabel',\n    get: function get() {\n      return this._pageLabels && this._pageLabels[this._currentPageNumber - 1];\n    },\n    set: function set(val) {\n      var pageNumber = val | 0;\n      if (this._pageLabels) {\n        var i = this._pageLabels.indexOf(val);\n        if (i >= 0) {\n          pageNumber = i + 1;\n        }\n      }\n      this.currentPageNumber = pageNumber;\n    }\n  }, {\n    key: 'currentScale',\n    get: function get() {\n      return this._currentScale !== _ui_utils.UNKNOWN_SCALE ? this._currentScale : _ui_utils.DEFAULT_SCALE;\n    },\n    set: function set(val) {\n      if (isNaN(val)) {\n        throw new Error('Invalid numeric scale');\n      }\n      if (!this.pdfDocument) {\n        return;\n      }\n      this._setScale(val, false);\n    }\n  }, {\n    key: 'currentScaleValue',\n    get: function get() {\n      return this._currentScaleValue;\n    },\n    set: function set(val) {\n      if (!this.pdfDocument) {\n        return;\n      }\n      this._setScale(val, false);\n    }\n  }, {\n    key: 'pagesRotation',\n    get: function get() {\n      return this._pagesRotation;\n    },\n    set: function set(rotation) {\n      if (!(typeof rotation === 'number' && rotation % 90 === 0)) {\n        throw new Error('Invalid pages rotation angle.');\n      }\n      if (!this.pdfDocument) {\n        return;\n      }\n      this._pagesRotation = rotation;\n      for (var i = 0, ii = this._pages.length; i < ii; i++) {\n        var pageView = this._pages[i];\n        pageView.update(pageView.scale, rotation);\n      }\n      this._setScale(this._currentScaleValue, true);\n      if (this.defaultRenderingQueue) {\n        this.update();\n      }\n    }\n  }, {\n    key: 'isInPresentationMode',\n    get: function get() {\n      return this.presentationModeState === PresentationModeState.FULLSCREEN;\n    }\n  }, {\n    key: 'isChangingPresentationMode',\n    get: function get() {\n      return this.presentationModeState === PresentationModeState.CHANGING;\n    }\n  }, {\n    key: 'isHorizontalScrollbarEnabled',\n    get: function get() {\n      return this.isInPresentationMode ? false : this.container.scrollWidth > this.container.clientWidth;\n    }\n  }, {\n    key: 'hasEqualPageSizes',\n    get: function get() {\n      var firstPageView = this._pages[0];\n      for (var i = 1, ii = this._pages.length; i < ii; ++i) {\n        var pageView = this._pages[i];\n        if (pageView.width !== firstPageView.width || pageView.height !== firstPageView.height) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }]);\n\n  return PDFViewer;\n}();\n\nexports.PresentationModeState = PresentationModeState;\nexports.PDFViewer = PDFViewer;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BasePreferences = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ui_utils = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar defaultPreferences = null;\nfunction getDefaultPreferences() {\n  if (!defaultPreferences) {\n    defaultPreferences = Promise.resolve({\n      \"showPreviousViewOnLoad\": true,\n      \"defaultZoomValue\": \"\",\n      \"sidebarViewOnLoad\": 0,\n      \"enableHandToolOnLoad\": false,\n      \"cursorToolOnLoad\": 0,\n      \"enableWebGL\": false,\n      \"pdfBugEnabled\": false,\n      \"disableRange\": false,\n      \"disableStream\": false,\n      \"disableAutoFetch\": false,\n      \"disableFontFace\": false,\n      \"disableTextLayer\": false,\n      \"useOnlyCssZoom\": false,\n      \"externalLinkTarget\": 0,\n      \"enhanceTextSelection\": false,\n      \"renderer\": \"canvas\",\n      \"renderInteractiveForms\": false,\n      \"enablePrintAutoRotate\": false,\n      \"disablePageMode\": false,\n      \"disablePageLabels\": false\n    });\n  }\n  return defaultPreferences;\n}\n\nvar BasePreferences = function () {\n  function BasePreferences() {\n    var _this = this;\n\n    _classCallCheck(this, BasePreferences);\n\n    if (this.constructor === BasePreferences) {\n      throw new Error('Cannot initialize BasePreferences.');\n    }\n    this.prefs = null;\n    this._initializedPromise = getDefaultPreferences().then(function (defaults) {\n      Object.defineProperty(_this, 'defaults', {\n        value: Object.freeze(defaults),\n        writable: false,\n        enumerable: true,\n        configurable: false\n      });\n      _this.prefs = (0, _ui_utils.cloneObj)(defaults);\n      return _this._readFromStorage(defaults);\n    }).then(function (prefObj) {\n      if (prefObj) {\n        _this.prefs = prefObj;\n      }\n    });\n  }\n\n  _createClass(BasePreferences, [{\n    key: \"_writeToStorage\",\n    value: function _writeToStorage(prefObj) {\n      return Promise.reject(new Error('Not implemented: _writeToStorage'));\n    }\n  }, {\n    key: \"_readFromStorage\",\n    value: function _readFromStorage(prefObj) {\n      return Promise.reject(new Error('Not implemented: _readFromStorage'));\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var _this2 = this;\n\n      return this._initializedPromise.then(function () {\n        _this2.prefs = (0, _ui_utils.cloneObj)(_this2.defaults);\n        return _this2._writeToStorage(_this2.defaults);\n      });\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      var _this3 = this;\n\n      return this._initializedPromise.then(function () {\n        return _this3._readFromStorage(_this3.defaults);\n      }).then(function (prefObj) {\n        if (prefObj) {\n          _this3.prefs = prefObj;\n        }\n      });\n    }\n  }, {\n    key: \"set\",\n    value: function set(name, value) {\n      var _this4 = this;\n\n      return this._initializedPromise.then(function () {\n        if (_this4.defaults[name] === undefined) {\n          throw new Error(\"Set preference: \\\"\" + name + \"\\\" is undefined.\");\n        } else if (value === undefined) {\n          throw new Error('Set preference: no value is specified.');\n        }\n        var valueType = typeof value === \"undefined\" ? \"undefined\" : _typeof(value);\n        var defaultType = _typeof(_this4.defaults[name]);\n        if (valueType !== defaultType) {\n          if (valueType === 'number' && defaultType === 'string') {\n            value = value.toString();\n          } else {\n            throw new Error(\"Set preference: \\\"\" + value + \"\\\" is a \" + valueType + \", \" + (\"expected a \" + defaultType + \".\"));\n          }\n        } else {\n          if (valueType === 'number' && (value | 0) !== value) {\n            throw new Error(\"Set preference: \\\"\" + value + \"\\\" must be an integer.\");\n          }\n        }\n        _this4.prefs[name] = value;\n        return _this4._writeToStorage(_this4.prefs);\n      });\n    }\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      var _this5 = this;\n\n      return this._initializedPromise.then(function () {\n        var defaultValue = _this5.defaults[name];\n        if (defaultValue === undefined) {\n          throw new Error(\"Get preference: \\\"\" + name + \"\\\" is undefined.\");\n        } else {\n          var prefValue = _this5.prefs[name];\n          if (prefValue !== undefined) {\n            return prefValue;\n          }\n        }\n        return defaultValue;\n      });\n    }\n  }]);\n\n  return BasePreferences;\n}();\n\nexports.BasePreferences = BasePreferences;\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SecondaryToolbar = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _pdf_cursor_tools = __webpack_require__(6);\n\nvar _ui_utils = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SecondaryToolbar = function () {\n  function SecondaryToolbar(options, mainContainer, eventBus) {\n    _classCallCheck(this, SecondaryToolbar);\n\n    this.toolbar = options.toolbar;\n    this.toggleButton = options.toggleButton;\n    this.toolbarButtonContainer = options.toolbarButtonContainer;\n    this.buttons = [{\n      element: options.presentationModeButton,\n      eventName: 'presentationmode',\n      close: true\n    }, {\n      element: options.openFileButton,\n      eventName: 'openfile',\n      close: true\n    }, {\n      element: options.printButton,\n      eventName: 'print',\n      close: true\n    }, {\n      element: options.downloadButton,\n      eventName: 'download',\n      close: true\n    }, {\n      element: options.viewBookmarkButton,\n      eventName: null,\n      close: true\n    }, {\n      element: options.firstPageButton,\n      eventName: 'firstpage',\n      close: true\n    }, {\n      element: options.lastPageButton,\n      eventName: 'lastpage',\n      close: true\n    }, {\n      element: options.pageRotateCwButton,\n      eventName: 'rotatecw',\n      close: false\n    }, {\n      element: options.pageRotateCcwButton,\n      eventName: 'rotateccw',\n      close: false\n    }, {\n      element: options.cursorSelectToolButton,\n      eventName: 'switchcursortool',\n      eventDetails: { tool: _pdf_cursor_tools.CursorTool.SELECT },\n      close: true\n    }, {\n      element: options.cursorHandToolButton,\n      eventName: 'switchcursortool',\n      eventDetails: { tool: _pdf_cursor_tools.CursorTool.HAND },\n      close: true\n    }, {\n      element: options.documentPropertiesButton,\n      eventName: 'documentproperties',\n      close: true\n    }];\n    this.items = {\n      firstPage: options.firstPageButton,\n      lastPage: options.lastPageButton,\n      pageRotateCw: options.pageRotateCwButton,\n      pageRotateCcw: options.pageRotateCcwButton\n    };\n    this.mainContainer = mainContainer;\n    this.eventBus = eventBus;\n    this.opened = false;\n    this.containerHeight = null;\n    this.previousContainerHeight = null;\n    this.reset();\n    this._bindClickListeners();\n    this._bindCursorToolsListener(options);\n    this.eventBus.on('resize', this._setMaxHeight.bind(this));\n  }\n\n  _createClass(SecondaryToolbar, [{\n    key: 'setPageNumber',\n    value: function setPageNumber(pageNumber) {\n      this.pageNumber = pageNumber;\n      this._updateUIState();\n    }\n  }, {\n    key: 'setPagesCount',\n    value: function setPagesCount(pagesCount) {\n      this.pagesCount = pagesCount;\n      this._updateUIState();\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.pageNumber = 0;\n      this.pagesCount = 0;\n      this._updateUIState();\n    }\n  }, {\n    key: '_updateUIState',\n    value: function _updateUIState() {\n      this.items.firstPage.disabled = this.pageNumber <= 1;\n      this.items.lastPage.disabled = this.pageNumber >= this.pagesCount;\n      this.items.pageRotateCw.disabled = this.pagesCount === 0;\n      this.items.pageRotateCcw.disabled = this.pagesCount === 0;\n    }\n  }, {\n    key: '_bindClickListeners',\n    value: function _bindClickListeners() {\n      var _this = this;\n\n      this.toggleButton.addEventListener('click', this.toggle.bind(this));\n\n      var _loop = function _loop(button) {\n        var _buttons$button = _this.buttons[button],\n            element = _buttons$button.element,\n            eventName = _buttons$button.eventName,\n            close = _buttons$button.close,\n            eventDetails = _buttons$button.eventDetails;\n\n        element.addEventListener('click', function (evt) {\n          if (eventName !== null) {\n            var details = { source: _this };\n            for (var property in eventDetails) {\n              details[property] = eventDetails[property];\n            }\n            _this.eventBus.dispatch(eventName, details);\n          }\n          if (close) {\n            _this.close();\n          }\n        });\n      };\n\n      for (var button in this.buttons) {\n        _loop(button);\n      }\n    }\n  }, {\n    key: '_bindCursorToolsListener',\n    value: function _bindCursorToolsListener(buttons) {\n      this.eventBus.on('cursortoolchanged', function (evt) {\n        buttons.cursorSelectToolButton.classList.remove('toggled');\n        buttons.cursorHandToolButton.classList.remove('toggled');\n        switch (evt.tool) {\n          case _pdf_cursor_tools.CursorTool.SELECT:\n            buttons.cursorSelectToolButton.classList.add('toggled');\n            break;\n          case _pdf_cursor_tools.CursorTool.HAND:\n            buttons.cursorHandToolButton.classList.add('toggled');\n            break;\n        }\n      });\n    }\n  }, {\n    key: 'open',\n    value: function open() {\n      if (this.opened) {\n        return;\n      }\n      this.opened = true;\n      this._setMaxHeight();\n      this.toggleButton.classList.add('toggled');\n      this.toolbar.classList.remove('hidden');\n    }\n  }, {\n    key: 'close',\n    value: function close() {\n      if (!this.opened) {\n        return;\n      }\n      this.opened = false;\n      this.toolbar.classList.add('hidden');\n      this.toggleButton.classList.remove('toggled');\n    }\n  }, {\n    key: 'toggle',\n    value: function toggle() {\n      if (this.opened) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n  }, {\n    key: '_setMaxHeight',\n    value: function _setMaxHeight() {\n      if (!this.opened) {\n        return;\n      }\n      this.containerHeight = this.mainContainer.clientHeight;\n      if (this.containerHeight === this.previousContainerHeight) {\n        return;\n      }\n      this.toolbarButtonContainer.setAttribute('style', 'max-height: ' + (this.containerHeight - _ui_utils.SCROLLBAR_PADDING) + 'px;');\n      this.previousContainerHeight = this.containerHeight;\n    }\n  }, {\n    key: 'isOpen',\n    get: function get() {\n      return this.opened;\n    }\n  }]);\n\n  return SecondaryToolbar;\n}();\n\nexports.SecondaryToolbar = SecondaryToolbar;\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultTextLayerFactory = exports.TextLayerBuilder = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dom_events = __webpack_require__(2);\n\nvar _pdfjsLib = __webpack_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EXPAND_DIVS_TIMEOUT = 300;\n\nvar TextLayerBuilder = function () {\n  function TextLayerBuilder(_ref) {\n    var textLayerDiv = _ref.textLayerDiv,\n        eventBus = _ref.eventBus,\n        pageIndex = _ref.pageIndex,\n        viewport = _ref.viewport,\n        _ref$findController = _ref.findController,\n        findController = _ref$findController === undefined ? null : _ref$findController,\n        _ref$enhanceTextSelec = _ref.enhanceTextSelection,\n        enhanceTextSelection = _ref$enhanceTextSelec === undefined ? false : _ref$enhanceTextSelec;\n\n    _classCallCheck(this, TextLayerBuilder);\n\n    this.textLayerDiv = textLayerDiv;\n    this.eventBus = eventBus || (0, _dom_events.getGlobalEventBus)();\n    this.textContent = null;\n    this.textContentItemsStr = [];\n    this.textContentStream = null;\n    this.renderingDone = false;\n    this.pageIdx = pageIndex;\n    this.pageNumber = this.pageIdx + 1;\n    this.matches = [];\n    this.viewport = viewport;\n    this.textDivs = [];\n    this.findController = findController;\n    this.textLayerRenderTask = null;\n    this.enhanceTextSelection = enhanceTextSelection;\n    this._bindMouse();\n  }\n\n  _createClass(TextLayerBuilder, [{\n    key: '_finishRendering',\n    value: function _finishRendering() {\n      this.renderingDone = true;\n      if (!this.enhanceTextSelection) {\n        var endOfContent = document.createElement('div');\n        endOfContent.className = 'endOfContent';\n        this.textLayerDiv.appendChild(endOfContent);\n      }\n      this.eventBus.dispatch('textlayerrendered', {\n        source: this,\n        pageNumber: this.pageNumber,\n        numTextDivs: this.textDivs.length\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (!(this.textContent || this.textContentStream) || this.renderingDone) {\n        return;\n      }\n      this.cancel();\n      this.textDivs = [];\n      var textLayerFrag = document.createDocumentFragment();\n      this.textLayerRenderTask = (0, _pdfjsLib.renderTextLayer)({\n        textContent: this.textContent,\n        textContentStream: this.textContentStream,\n        container: textLayerFrag,\n        viewport: this.viewport,\n        textDivs: this.textDivs,\n        textContentItemsStr: this.textContentItemsStr,\n        timeout: timeout,\n        enhanceTextSelection: this.enhanceTextSelection\n      });\n      this.textLayerRenderTask.promise.then(function () {\n        _this.textLayerDiv.appendChild(textLayerFrag);\n        _this._finishRendering();\n        _this.updateMatches();\n      }, function (reason) {});\n    }\n  }, {\n    key: 'cancel',\n    value: function cancel() {\n      if (this.textLayerRenderTask) {\n        this.textLayerRenderTask.cancel();\n        this.textLayerRenderTask = null;\n      }\n    }\n  }, {\n    key: 'setTextContentStream',\n    value: function setTextContentStream(readableStream) {\n      this.cancel();\n      this.textContentStream = readableStream;\n    }\n  }, {\n    key: 'setTextContent',\n    value: function setTextContent(textContent) {\n      this.cancel();\n      this.textContent = textContent;\n    }\n  }, {\n    key: 'convertMatches',\n    value: function convertMatches(matches, matchesLength) {\n      var i = 0;\n      var iIndex = 0;\n      var textContentItemsStr = this.textContentItemsStr;\n      var end = textContentItemsStr.length - 1;\n      var queryLen = this.findController === null ? 0 : this.findController.state.query.length;\n      var ret = [];\n      if (!matches) {\n        return ret;\n      }\n      for (var m = 0, len = matches.length; m < len; m++) {\n        var matchIdx = matches[m];\n        while (i !== end && matchIdx >= iIndex + textContentItemsStr[i].length) {\n          iIndex += textContentItemsStr[i].length;\n          i++;\n        }\n        if (i === textContentItemsStr.length) {\n          console.error('Could not find a matching mapping');\n        }\n        var match = {\n          begin: {\n            divIdx: i,\n            offset: matchIdx - iIndex\n          }\n        };\n        if (matchesLength) {\n          matchIdx += matchesLength[m];\n        } else {\n          matchIdx += queryLen;\n        }\n        while (i !== end && matchIdx > iIndex + textContentItemsStr[i].length) {\n          iIndex += textContentItemsStr[i].length;\n          i++;\n        }\n        match.end = {\n          divIdx: i,\n          offset: matchIdx - iIndex\n        };\n        ret.push(match);\n      }\n      return ret;\n    }\n  }, {\n    key: 'renderMatches',\n    value: function renderMatches(matches) {\n      if (matches.length === 0) {\n        return;\n      }\n      var textContentItemsStr = this.textContentItemsStr;\n      var textDivs = this.textDivs;\n      var prevEnd = null;\n      var pageIdx = this.pageIdx;\n      var isSelectedPage = this.findController === null ? false : pageIdx === this.findController.selected.pageIdx;\n      var selectedMatchIdx = this.findController === null ? -1 : this.findController.selected.matchIdx;\n      var highlightAll = this.findController === null ? false : this.findController.state.highlightAll;\n      var infinity = {\n        divIdx: -1,\n        offset: undefined\n      };\n      function beginText(begin, className) {\n        var divIdx = begin.divIdx;\n        textDivs[divIdx].textContent = '';\n        appendTextToDiv(divIdx, 0, begin.offset, className);\n      }\n      function appendTextToDiv(divIdx, fromOffset, toOffset, className) {\n        var div = textDivs[divIdx];\n        var content = textContentItemsStr[divIdx].substring(fromOffset, toOffset);\n        var node = document.createTextNode(content);\n        if (className) {\n          var span = document.createElement('span');\n          span.className = className;\n          span.appendChild(node);\n          div.appendChild(span);\n          return;\n        }\n        div.appendChild(node);\n      }\n      var i0 = selectedMatchIdx,\n          i1 = i0 + 1;\n      if (highlightAll) {\n        i0 = 0;\n        i1 = matches.length;\n      } else if (!isSelectedPage) {\n        return;\n      }\n      for (var i = i0; i < i1; i++) {\n        var match = matches[i];\n        var begin = match.begin;\n        var end = match.end;\n        var isSelected = isSelectedPage && i === selectedMatchIdx;\n        var highlightSuffix = isSelected ? ' selected' : '';\n        if (this.findController) {\n          this.findController.updateMatchPosition(pageIdx, i, textDivs, begin.divIdx);\n        }\n        if (!prevEnd || begin.divIdx !== prevEnd.divIdx) {\n          if (prevEnd !== null) {\n            appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n          }\n          beginText(begin);\n        } else {\n          appendTextToDiv(prevEnd.divIdx, prevEnd.offset, begin.offset);\n        }\n        if (begin.divIdx === end.divIdx) {\n          appendTextToDiv(begin.divIdx, begin.offset, end.offset, 'highlight' + highlightSuffix);\n        } else {\n          appendTextToDiv(begin.divIdx, begin.offset, infinity.offset, 'highlight begin' + highlightSuffix);\n          for (var n0 = begin.divIdx + 1, n1 = end.divIdx; n0 < n1; n0++) {\n            textDivs[n0].className = 'highlight middle' + highlightSuffix;\n          }\n          beginText(end, 'highlight end' + highlightSuffix);\n        }\n        prevEnd = end;\n      }\n      if (prevEnd) {\n        appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n      }\n    }\n  }, {\n    key: 'updateMatches',\n    value: function updateMatches() {\n      if (!this.renderingDone) {\n        return;\n      }\n      var matches = this.matches;\n      var textDivs = this.textDivs;\n      var textContentItemsStr = this.textContentItemsStr;\n      var clearedUntilDivIdx = -1;\n      for (var i = 0, len = matches.length; i < len; i++) {\n        var match = matches[i];\n        var begin = Math.max(clearedUntilDivIdx, match.begin.divIdx);\n        for (var n = begin, end = match.end.divIdx; n <= end; n++) {\n          var div = textDivs[n];\n          div.textContent = textContentItemsStr[n];\n          div.className = '';\n        }\n        clearedUntilDivIdx = match.end.divIdx + 1;\n      }\n      if (this.findController === null || !this.findController.active) {\n        return;\n      }\n      var pageMatches = void 0,\n          pageMatchesLength = void 0;\n      if (this.findController !== null) {\n        pageMatches = this.findController.pageMatches[this.pageIdx] || null;\n        pageMatchesLength = this.findController.pageMatchesLength ? this.findController.pageMatchesLength[this.pageIdx] || null : null;\n      }\n      this.matches = this.convertMatches(pageMatches, pageMatchesLength);\n      this.renderMatches(this.matches);\n    }\n  }, {\n    key: '_bindMouse',\n    value: function _bindMouse() {\n      var _this2 = this;\n\n      var div = this.textLayerDiv;\n      var expandDivsTimer = null;\n      div.addEventListener('mousedown', function (evt) {\n        if (_this2.enhanceTextSelection && _this2.textLayerRenderTask) {\n          _this2.textLayerRenderTask.expandTextDivs(true);\n          if (expandDivsTimer) {\n            clearTimeout(expandDivsTimer);\n            expandDivsTimer = null;\n          }\n          return;\n        }\n        var end = div.querySelector('.endOfContent');\n        if (!end) {\n          return;\n        }\n        var adjustTop = evt.target !== div;\n        adjustTop = adjustTop && window.getComputedStyle(end).getPropertyValue('-moz-user-select') !== 'none';\n        if (adjustTop) {\n          var divBounds = div.getBoundingClientRect();\n          var r = Math.max(0, (evt.pageY - divBounds.top) / divBounds.height);\n          end.style.top = (r * 100).toFixed(2) + '%';\n        }\n        end.classList.add('active');\n      });\n      div.addEventListener('mouseup', function () {\n        if (_this2.enhanceTextSelection && _this2.textLayerRenderTask) {\n          expandDivsTimer = setTimeout(function () {\n            if (_this2.textLayerRenderTask) {\n              _this2.textLayerRenderTask.expandTextDivs(false);\n            }\n            expandDivsTimer = null;\n          }, EXPAND_DIVS_TIMEOUT);\n          return;\n        }\n        var end = div.querySelector('.endOfContent');\n        if (!end) {\n          return;\n        }\n        end.style.top = '';\n        end.classList.remove('active');\n      });\n    }\n  }]);\n\n  return TextLayerBuilder;\n}();\n\nvar DefaultTextLayerFactory = function () {\n  function DefaultTextLayerFactory() {\n    _classCallCheck(this, DefaultTextLayerFactory);\n  }\n\n  _createClass(DefaultTextLayerFactory, [{\n    key: 'createTextLayerBuilder',\n    value: function createTextLayerBuilder(textLayerDiv, pageIndex, viewport) {\n      var enhanceTextSelection = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      return new TextLayerBuilder({\n        textLayerDiv: textLayerDiv,\n        pageIndex: pageIndex,\n        viewport: viewport,\n        enhanceTextSelection: enhanceTextSelection\n      });\n    }\n  }]);\n\n  return DefaultTextLayerFactory;\n}();\n\nexports.TextLayerBuilder = TextLayerBuilder;\nexports.DefaultTextLayerFactory = DefaultTextLayerFactory;\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Toolbar = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ui_utils = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PAGE_NUMBER_LOADING_INDICATOR = 'visiblePageIsLoading';\nvar SCALE_SELECT_CONTAINER_PADDING = 8;\nvar SCALE_SELECT_PADDING = 22;\n\nvar Toolbar = function () {\n  function Toolbar(options, mainContainer, eventBus) {\n    var l10n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _ui_utils.NullL10n;\n\n    _classCallCheck(this, Toolbar);\n\n    this.toolbar = options.container;\n    this.mainContainer = mainContainer;\n    this.eventBus = eventBus;\n    this.l10n = l10n;\n    this.items = options;\n    this._wasLocalized = false;\n    this.reset();\n    this._bindListeners();\n  }\n\n  _createClass(Toolbar, [{\n    key: 'setPageNumber',\n    value: function setPageNumber(pageNumber, pageLabel) {\n      this.pageNumber = pageNumber;\n      this.pageLabel = pageLabel;\n      this._updateUIState(false);\n    }\n  }, {\n    key: 'setPagesCount',\n    value: function setPagesCount(pagesCount, hasPageLabels) {\n      this.pagesCount = pagesCount;\n      this.hasPageLabels = hasPageLabels;\n      this._updateUIState(true);\n    }\n  }, {\n    key: 'setPageScale',\n    value: function setPageScale(pageScaleValue, pageScale) {\n      this.pageScaleValue = pageScaleValue;\n      this.pageScale = pageScale;\n      this._updateUIState(false);\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.pageNumber = 0;\n      this.pageLabel = null;\n      this.hasPageLabels = false;\n      this.pagesCount = 0;\n      this.pageScaleValue = _ui_utils.DEFAULT_SCALE_VALUE;\n      this.pageScale = _ui_utils.DEFAULT_SCALE;\n      this._updateUIState(true);\n    }\n  }, {\n    key: '_bindListeners',\n    value: function _bindListeners() {\n      var _this = this;\n\n      var eventBus = this.eventBus,\n          items = this.items;\n\n      var self = this;\n      items.previous.addEventListener('click', function () {\n        eventBus.dispatch('previouspage');\n      });\n      items.next.addEventListener('click', function () {\n        eventBus.dispatch('nextpage');\n      });\n      items.zoomIn.addEventListener('click', function () {\n        eventBus.dispatch('zoomin');\n      });\n      items.zoomOut.addEventListener('click', function () {\n        eventBus.dispatch('zoomout');\n      });\n      items.pageNumber.addEventListener('click', function () {\n        this.select();\n      });\n      items.pageNumber.addEventListener('change', function () {\n        eventBus.dispatch('pagenumberchanged', {\n          source: self,\n          value: this.value\n        });\n      });\n      items.scaleSelect.addEventListener('change', function () {\n        if (this.value === 'custom') {\n          return;\n        }\n        eventBus.dispatch('scalechanged', {\n          source: self,\n          value: this.value\n        });\n      });\n      items.presentationModeButton.addEventListener('click', function () {\n        eventBus.dispatch('presentationmode');\n      });\n      items.openFile.addEventListener('click', function () {\n        eventBus.dispatch('openfile');\n      });\n      items.print.addEventListener('click', function () {\n        eventBus.dispatch('print');\n      });\n      items.download.addEventListener('click', function () {\n        eventBus.dispatch('download');\n      });\n      items.scaleSelect.oncontextmenu = _ui_utils.noContextMenuHandler;\n      eventBus.on('localized', function () {\n        _this._localized();\n      });\n    }\n  }, {\n    key: '_localized',\n    value: function _localized() {\n      this._wasLocalized = true;\n      this._adjustScaleWidth();\n      this._updateUIState(true);\n    }\n  }, {\n    key: '_updateUIState',\n    value: function _updateUIState() {\n      var resetNumPages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!this._wasLocalized) {\n        return;\n      }\n      var pageNumber = this.pageNumber,\n          pagesCount = this.pagesCount,\n          items = this.items;\n\n      var scaleValue = (this.pageScaleValue || this.pageScale).toString();\n      var scale = this.pageScale;\n      if (resetNumPages) {\n        if (this.hasPageLabels) {\n          items.pageNumber.type = 'text';\n        } else {\n          items.pageNumber.type = 'number';\n          this.l10n.get('of_pages', { pagesCount: pagesCount }, 'of {{pagesCount}}').then(function (msg) {\n            items.numPages.textContent = msg;\n          });\n        }\n        items.pageNumber.max = pagesCount;\n      }\n      if (this.hasPageLabels) {\n        items.pageNumber.value = this.pageLabel;\n        this.l10n.get('page_of_pages', {\n          pageNumber: pageNumber,\n          pagesCount: pagesCount\n        }, '({{pageNumber}} of {{pagesCount}})').then(function (msg) {\n          items.numPages.textContent = msg;\n        });\n      } else {\n        items.pageNumber.value = pageNumber;\n      }\n      items.previous.disabled = pageNumber <= 1;\n      items.next.disabled = pageNumber >= pagesCount;\n      items.zoomOut.disabled = scale <= _ui_utils.MIN_SCALE;\n      items.zoomIn.disabled = scale >= _ui_utils.MAX_SCALE;\n      var customScale = Math.round(scale * 10000) / 100;\n      this.l10n.get('page_scale_percent', { scale: customScale }, '{{scale}}%').then(function (msg) {\n        var options = items.scaleSelect.options;\n        var predefinedValueFound = false;\n        for (var i = 0, ii = options.length; i < ii; i++) {\n          var option = options[i];\n          if (option.value !== scaleValue) {\n            option.selected = false;\n            continue;\n          }\n          option.selected = true;\n          predefinedValueFound = true;\n        }\n        if (!predefinedValueFound) {\n          items.customScaleOption.textContent = msg;\n          items.customScaleOption.selected = true;\n        }\n      });\n    }\n  }, {\n    key: 'updateLoadingIndicatorState',\n    value: function updateLoadingIndicatorState() {\n      var loading = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var pageNumberInput = this.items.pageNumber;\n      if (loading) {\n        pageNumberInput.classList.add(PAGE_NUMBER_LOADING_INDICATOR);\n      } else {\n        pageNumberInput.classList.remove(PAGE_NUMBER_LOADING_INDICATOR);\n      }\n    }\n  }, {\n    key: '_adjustScaleWidth',\n    value: function _adjustScaleWidth() {\n      var container = this.items.scaleSelectContainer;\n      var select = this.items.scaleSelect;\n      _ui_utils.animationStarted.then(function () {\n        if (container.clientWidth === 0) {\n          container.setAttribute('style', 'display: inherit;');\n        }\n        if (container.clientWidth > 0) {\n          select.setAttribute('style', 'min-width: inherit;');\n          var width = select.clientWidth + SCALE_SELECT_CONTAINER_PADDING;\n          select.setAttribute('style', 'min-width: ' + (width + SCALE_SELECT_PADDING) + 'px;');\n          container.setAttribute('style', 'min-width: ' + width + 'px; ' + 'max-width: ' + width + 'px;');\n        }\n      });\n    }\n  }]);\n\n  return Toolbar;\n}();\n\nexports.Toolbar = Toolbar;\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DEFAULT_VIEW_HISTORY_CACHE_SIZE = 20;\n\nvar ViewHistory = function () {\n  function ViewHistory(fingerprint) {\n    var _this = this;\n\n    var cacheSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_VIEW_HISTORY_CACHE_SIZE;\n\n    _classCallCheck(this, ViewHistory);\n\n    this.fingerprint = fingerprint;\n    this.cacheSize = cacheSize;\n    this._initializedPromise = this._readFromStorage().then(function (databaseStr) {\n      var database = JSON.parse(databaseStr || '{}');\n      if (!('files' in database)) {\n        database.files = [];\n      }\n      if (database.files.length >= _this.cacheSize) {\n        database.files.shift();\n      }\n      var index = void 0;\n      for (var i = 0, length = database.files.length; i < length; i++) {\n        var branch = database.files[i];\n        if (branch.fingerprint === _this.fingerprint) {\n          index = i;\n          break;\n        }\n      }\n      if (typeof index !== 'number') {\n        index = database.files.push({ fingerprint: _this.fingerprint }) - 1;\n      }\n      _this.file = database.files[index];\n      _this.database = database;\n    });\n  }\n\n  _createClass(ViewHistory, [{\n    key: '_writeToStorage',\n    value: function _writeToStorage() {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        var databaseStr = JSON.stringify(_this2.database);\n        localStorage.setItem('pdfjs.history', databaseStr);\n        resolve();\n      });\n    }\n  }, {\n    key: '_readFromStorage',\n    value: function _readFromStorage() {\n      return new Promise(function (resolve) {\n        var value = localStorage.getItem('pdfjs.history');\n        if (!value) {\n          var databaseStr = localStorage.getItem('database');\n          if (databaseStr) {\n            try {\n              var database = JSON.parse(databaseStr);\n              if (typeof database.files[0].fingerprint === 'string') {\n                localStorage.setItem('pdfjs.history', databaseStr);\n                localStorage.removeItem('database');\n                value = databaseStr;\n              }\n            } catch (ex) {}\n          }\n        }\n        resolve(value);\n      });\n    }\n  }, {\n    key: 'set',\n    value: function set(name, val) {\n      var _this3 = this;\n\n      return this._initializedPromise.then(function () {\n        _this3.file[name] = val;\n        return _this3._writeToStorage();\n      });\n    }\n  }, {\n    key: 'setMultiple',\n    value: function setMultiple(properties) {\n      var _this4 = this;\n\n      return this._initializedPromise.then(function () {\n        for (var name in properties) {\n          _this4.file[name] = properties[name];\n        }\n        return _this4._writeToStorage();\n      });\n    }\n  }, {\n    key: 'get',\n    value: function get(name, defaultValue) {\n      var _this5 = this;\n\n      return this._initializedPromise.then(function () {\n        var val = _this5.file[name];\n        return val !== undefined ? val : defaultValue;\n      });\n    }\n  }, {\n    key: 'getMultiple',\n    value: function getMultiple(properties) {\n      var _this6 = this;\n\n      return this._initializedPromise.then(function () {\n        var values = Object.create(null);\n        for (var name in properties) {\n          var val = _this6.file[name];\n          values[name] = val !== undefined ? val : properties[name];\n        }\n        return values;\n      });\n    }\n  }]);\n\n  return ViewHistory;\n}();\n\nexports.ViewHistory = ViewHistory;\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar DEFAULT_URL = 'compressed.tracemonkey-pldi-09.pdf';\n;\nvar pdfjsWebApp = void 0;\n{\n  pdfjsWebApp = __webpack_require__(4);\n}\n;\n{\n  __webpack_require__(8);\n}\n;\n{\n  __webpack_require__(9);\n}\nfunction getViewerConfiguration() {\n  return {\n    appContainer: document.body,\n    mainContainer: document.getElementById('viewerContainer'),\n    viewerContainer: document.getElementById('viewer'),\n    eventBus: null,\n    toolbar: {\n      container: document.getElementById('toolbarViewer'),\n      numPages: document.getElementById('numPages'),\n      pageNumber: document.getElementById('pageNumber'),\n      scaleSelectContainer: document.getElementById('scaleSelectContainer'),\n      scaleSelect: document.getElementById('scaleSelect'),\n      customScaleOption: document.getElementById('customScaleOption'),\n      previous: document.getElementById('previous'),\n      next: document.getElementById('next'),\n      zoomIn: document.getElementById('zoomIn'),\n      zoomOut: document.getElementById('zoomOut'),\n      viewFind: document.getElementById('viewFind'),\n      openFile: document.getElementById('openFile'),\n      print: document.getElementById('print'),\n      presentationModeButton: document.getElementById('presentationMode'),\n      download: document.getElementById('download'),\n      viewBookmark: document.getElementById('viewBookmark')\n    },\n    secondaryToolbar: {\n      toolbar: document.getElementById('secondaryToolbar'),\n      toggleButton: document.getElementById('secondaryToolbarToggle'),\n      toolbarButtonContainer: document.getElementById('secondaryToolbarButtonContainer'),\n      presentationModeButton: document.getElementById('secondaryPresentationMode'),\n      openFileButton: document.getElementById('secondaryOpenFile'),\n      printButton: document.getElementById('secondaryPrint'),\n      downloadButton: document.getElementById('secondaryDownload'),\n      viewBookmarkButton: document.getElementById('secondaryViewBookmark'),\n      firstPageButton: document.getElementById('firstPage'),\n      lastPageButton: document.getElementById('lastPage'),\n      pageRotateCwButton: document.getElementById('pageRotateCw'),\n      pageRotateCcwButton: document.getElementById('pageRotateCcw'),\n      cursorSelectToolButton: document.getElementById('cursorSelectTool'),\n      cursorHandToolButton: document.getElementById('cursorHandTool'),\n      documentPropertiesButton: document.getElementById('documentProperties')\n    },\n    fullscreen: {\n      contextFirstPage: document.getElementById('contextFirstPage'),\n      contextLastPage: document.getElementById('contextLastPage'),\n      contextPageRotateCw: document.getElementById('contextPageRotateCw'),\n      contextPageRotateCcw: document.getElementById('contextPageRotateCcw')\n    },\n    sidebar: {\n      mainContainer: document.getElementById('mainContainer'),\n      outerContainer: document.getElementById('outerContainer'),\n      toggleButton: document.getElementById('sidebarToggle'),\n      thumbnailButton: document.getElementById('viewThumbnail'),\n      outlineButton: document.getElementById('viewOutline'),\n      attachmentsButton: document.getElementById('viewAttachments'),\n      thumbnailView: document.getElementById('thumbnailView'),\n      outlineView: document.getElementById('outlineView'),\n      attachmentsView: document.getElementById('attachmentsView')\n    },\n    findBar: {\n      bar: document.getElementById('findbar'),\n      toggleButton: document.getElementById('viewFind'),\n      findField: document.getElementById('findInput'),\n      highlightAllCheckbox: document.getElementById('findHighlightAll'),\n      caseSensitiveCheckbox: document.getElementById('findMatchCase'),\n      findMsg: document.getElementById('findMsg'),\n      findResultsCount: document.getElementById('findResultsCount'),\n      findStatusIcon: document.getElementById('findStatusIcon'),\n      findPreviousButton: document.getElementById('findPrevious'),\n      findNextButton: document.getElementById('findNext')\n    },\n    passwordOverlay: {\n      overlayName: 'passwordOverlay',\n      container: document.getElementById('passwordOverlay'),\n      label: document.getElementById('passwordText'),\n      input: document.getElementById('password'),\n      submitButton: document.getElementById('passwordSubmit'),\n      cancelButton: document.getElementById('passwordCancel')\n    },\n    documentProperties: {\n      overlayName: 'documentPropertiesOverlay',\n      container: document.getElementById('documentPropertiesOverlay'),\n      closeButton: document.getElementById('documentPropertiesClose'),\n      fields: {\n        'fileName': document.getElementById('fileNameField'),\n        'fileSize': document.getElementById('fileSizeField'),\n        'title': document.getElementById('titleField'),\n        'author': document.getElementById('authorField'),\n        'subject': document.getElementById('subjectField'),\n        'keywords': document.getElementById('keywordsField'),\n        'creationDate': document.getElementById('creationDateField'),\n        'modificationDate': document.getElementById('modificationDateField'),\n        'creator': document.getElementById('creatorField'),\n        'producer': document.getElementById('producerField'),\n        'version': document.getElementById('versionField'),\n        'pageCount': document.getElementById('pageCountField')\n      }\n    },\n    errorWrapper: {\n      container: document.getElementById('errorWrapper'),\n      errorMessage: document.getElementById('errorMessage'),\n      closeButton: document.getElementById('errorClose'),\n      errorMoreInfo: document.getElementById('errorMoreInfo'),\n      moreInfoButton: document.getElementById('errorShowMore'),\n      lessInfoButton: document.getElementById('errorShowLess')\n    },\n    printContainer: document.getElementById('printContainer'),\n    openFileInputName: 'fileInput',\n    debuggerScriptPath: './debugger.js',\n    defaultUrl: DEFAULT_URL\n  };\n}\nfunction webViewerLoad() {\n  var config = getViewerConfiguration();\n  window.PDFViewerApplication = pdfjsWebApp.PDFViewerApplication;\n  pdfjsWebApp.PDFViewerApplication.run(config);\n}\nif (document.readyState === 'interactive' || document.readyState === 'complete') {\n  webViewerLoad();\n} else {\n  document.addEventListener('DOMContentLoaded', webViewerLoad, true);\n}\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=viewer.js.map"],"file":"viewer-inline.js"}